/**
 * tgsnake - Telegram MTProto framework for nodejs.
 * Copyright (C) 2024 butthx <https://github.com/butthx>
 *
 * THIS FILE IS PART OF TGSNAKE
 *
 * tgsnake is a free software : you can redistribute it and/or modify
 * it under the terms of the MIT License as published.
 */
/// <reference types="node" />
/***********************************************************
 *                         Warning!!                        *
 *               This file is auto generate.                *
 *         All change made in this file will be lost!       *
 ***********************************************************/
import { TLObject, BytesIO, type UpdateSecretChatMessage } from './core/index.js';
/**
 * This is a telegram schema, so you can see the documentation in https://core.telegram.org/schema.
 * All schema wrapped in Raw namespace.
 */
export declare namespace Raw {
  type X = TLObject;
  type Type = TLObject;
  type Bool = boolean;
  type int = number;
  type double = number;
  type float = number;
  type int128 = bigint;
  type int256 = bigint;
  type long = bigint;
  type bytes = Buffer;
  type Vector<T> = Array<T>;
  /**
   * The Telegram layer we using.
   */
  const Layer: number;
  /**
   * The highest telegram secret chat schema layer.
   */
  const HighestSCLayer: number;
  type TypesTLRequest =
    | Raw.ReqPq
    | Raw.ReqPqMulti
    | Raw.ReqDhParams
    | Raw.SetClientDhParams
    | Raw.DestroyAuthKey
    | Raw.RpcDropAnswer
    | Raw.GetFutureSalts
    | Raw.Ping
    | Raw.PingDelayDisconnect
    | Raw.DestroySession
    | Raw.InvokeAfterMsg
    | Raw.InvokeAfterMsgs
    | Raw.InitConnection
    | Raw.InvokeWithLayer
    | Raw.InvokeWithoutUpdates
    | Raw.InvokeWithMessagesRange
    | Raw.InvokeWithTakeout
    | Raw.InvokeWithBusinessConnection
    | Raw.auth.SendCode
    | Raw.auth.SignUp
    | Raw.auth.SignIn
    | Raw.auth.LogOut
    | Raw.auth.ResetAuthorizations
    | Raw.auth.ExportAuthorization
    | Raw.auth.ImportAuthorization
    | Raw.auth.BindTempAuthKey
    | Raw.auth.ImportBotAuthorization
    | Raw.auth.CheckPassword
    | Raw.auth.RequestPasswordRecovery
    | Raw.auth.RecoverPassword
    | Raw.auth.ResendCode
    | Raw.auth.CancelCode
    | Raw.auth.DropTempAuthKeys
    | Raw.auth.ExportLoginToken
    | Raw.auth.ImportLoginToken
    | Raw.auth.AcceptLoginToken
    | Raw.auth.CheckRecoveryPassword
    | Raw.auth.ImportWebTokenAuthorization
    | Raw.auth.RequestFirebaseSms
    | Raw.auth.ResetLoginEmail
    | Raw.auth.ReportMissingCode
    | Raw.account.RegisterDevice
    | Raw.account.UnregisterDevice
    | Raw.account.UpdateNotifySettings
    | Raw.account.GetNotifySettings
    | Raw.account.ResetNotifySettings
    | Raw.account.UpdateProfile
    | Raw.account.UpdateStatus
    | Raw.account.GetWallPapers
    | Raw.account.ReportPeer
    | Raw.account.CheckUsername
    | Raw.account.UpdateUsername
    | Raw.account.GetPrivacy
    | Raw.account.SetPrivacy
    | Raw.account.DeleteAccount
    | Raw.account.GetAccountTTL
    | Raw.account.SetAccountTTL
    | Raw.account.SendChangePhoneCode
    | Raw.account.ChangePhone
    | Raw.account.UpdateDeviceLocked
    | Raw.account.GetAuthorizations
    | Raw.account.ResetAuthorization
    | Raw.account.GetPassword
    | Raw.account.GetPasswordSettings
    | Raw.account.UpdatePasswordSettings
    | Raw.account.SendConfirmPhoneCode
    | Raw.account.ConfirmPhone
    | Raw.account.GetTmpPassword
    | Raw.account.GetWebAuthorizations
    | Raw.account.ResetWebAuthorization
    | Raw.account.ResetWebAuthorizations
    | Raw.account.GetAllSecureValues
    | Raw.account.GetSecureValue
    | Raw.account.SaveSecureValue
    | Raw.account.DeleteSecureValue
    | Raw.account.GetAuthorizationForm
    | Raw.account.AcceptAuthorization
    | Raw.account.SendVerifyPhoneCode
    | Raw.account.VerifyPhone
    | Raw.account.SendVerifyEmailCode
    | Raw.account.VerifyEmail
    | Raw.account.InitTakeoutSession
    | Raw.account.FinishTakeoutSession
    | Raw.account.ConfirmPasswordEmail
    | Raw.account.ResendPasswordEmail
    | Raw.account.CancelPasswordEmail
    | Raw.account.GetContactSignUpNotification
    | Raw.account.SetContactSignUpNotification
    | Raw.account.GetNotifyExceptions
    | Raw.account.GetWallPaper
    | Raw.account.UploadWallPaper
    | Raw.account.SaveWallPaper
    | Raw.account.InstallWallPaper
    | Raw.account.ResetWallPapers
    | Raw.account.GetAutoDownloadSettings
    | Raw.account.SaveAutoDownloadSettings
    | Raw.account.UploadTheme
    | Raw.account.CreateTheme
    | Raw.account.UpdateTheme
    | Raw.account.SaveTheme
    | Raw.account.InstallTheme
    | Raw.account.GetTheme
    | Raw.account.GetThemes
    | Raw.account.SetContentSettings
    | Raw.account.GetContentSettings
    | Raw.account.GetMultiWallPapers
    | Raw.account.GetGlobalPrivacySettings
    | Raw.account.SetGlobalPrivacySettings
    | Raw.account.ReportProfilePhoto
    | Raw.account.ResetPassword
    | Raw.account.DeclinePasswordReset
    | Raw.account.GetChatThemes
    | Raw.account.SetAuthorizationTTL
    | Raw.account.ChangeAuthorizationSettings
    | Raw.account.GetSavedRingtones
    | Raw.account.SaveRingtone
    | Raw.account.UploadRingtone
    | Raw.account.UpdateEmojiStatus
    | Raw.account.GetDefaultEmojiStatuses
    | Raw.account.GetRecentEmojiStatuses
    | Raw.account.ClearRecentEmojiStatuses
    | Raw.account.ReorderUsernames
    | Raw.account.ToggleUsername
    | Raw.account.GetDefaultProfilePhotoEmojis
    | Raw.account.GetDefaultGroupPhotoEmojis
    | Raw.account.GetAutoSaveSettings
    | Raw.account.SaveAutoSaveSettings
    | Raw.account.DeleteAutoSaveExceptions
    | Raw.account.InvalidateSignInCodes
    | Raw.account.UpdateColor
    | Raw.account.GetDefaultBackgroundEmojis
    | Raw.account.GetChannelDefaultEmojiStatuses
    | Raw.account.GetChannelRestrictedStatusEmojis
    | Raw.account.UpdateBusinessWorkHours
    | Raw.account.UpdateBusinessLocation
    | Raw.account.UpdateBusinessGreetingMessage
    | Raw.account.UpdateBusinessAwayMessage
    | Raw.account.UpdateConnectedBot
    | Raw.account.GetConnectedBots
    | Raw.account.GetBotBusinessConnection
    | Raw.account.UpdateBusinessIntro
    | Raw.account.ToggleConnectedBotPaused
    | Raw.account.DisablePeerConnectedBot
    | Raw.account.UpdateBirthday
    | Raw.account.CreateBusinessChatLink
    | Raw.account.EditBusinessChatLink
    | Raw.account.DeleteBusinessChatLink
    | Raw.account.GetBusinessChatLinks
    | Raw.account.ResolveBusinessChatLink
    | Raw.account.UpdatePersonalChannel
    | Raw.account.ToggleSponsoredMessages
    | Raw.account.GetReactionsNotifySettings
    | Raw.account.SetReactionsNotifySettings
    | Raw.users.GetUsers
    | Raw.users.GetFullUser
    | Raw.users.SetSecureValueErrors
    | Raw.users.GetIsPremiumRequiredToContact
    | Raw.contacts.GetContactIDs
    | Raw.contacts.GetStatuses
    | Raw.contacts.GetContacts
    | Raw.contacts.ImportContacts
    | Raw.contacts.DeleteContacts
    | Raw.contacts.DeleteByPhones
    | Raw.contacts.Block
    | Raw.contacts.Unblock
    | Raw.contacts.GetBlocked
    | Raw.contacts.Search
    | Raw.contacts.ResolveUsername
    | Raw.contacts.GetTopPeers
    | Raw.contacts.ResetTopPeerRating
    | Raw.contacts.ResetSaved
    | Raw.contacts.GetSaved
    | Raw.contacts.ToggleTopPeers
    | Raw.contacts.AddContact
    | Raw.contacts.AcceptContact
    | Raw.contacts.GetLocated
    | Raw.contacts.BlockFromReplies
    | Raw.contacts.ResolvePhone
    | Raw.contacts.ExportContactToken
    | Raw.contacts.ImportContactToken
    | Raw.contacts.EditCloseFriends
    | Raw.contacts.SetBlocked
    | Raw.contacts.GetBirthdays
    | Raw.messages.GetMessages
    | Raw.messages.GetDialogs
    | Raw.messages.GetHistory
    | Raw.messages.Search
    | Raw.messages.ReadHistory
    | Raw.messages.DeleteHistory
    | Raw.messages.DeleteMessages
    | Raw.messages.ReceivedMessages
    | Raw.messages.SetTyping
    | Raw.messages.SendMessage
    | Raw.messages.SendMedia
    | Raw.messages.ForwardMessages
    | Raw.messages.ReportSpam
    | Raw.messages.GetPeerSettings
    | Raw.messages.Report
    | Raw.messages.GetChats
    | Raw.messages.GetFullChat
    | Raw.messages.EditChatTitle
    | Raw.messages.EditChatPhoto
    | Raw.messages.AddChatUser
    | Raw.messages.DeleteChatUser
    | Raw.messages.CreateChat
    | Raw.messages.GetDhConfig
    | Raw.messages.RequestEncryption
    | Raw.messages.AcceptEncryption
    | Raw.messages.DiscardEncryption
    | Raw.messages.SetEncryptedTyping
    | Raw.messages.ReadEncryptedHistory
    | Raw.messages.SendEncrypted
    | Raw.messages.SendEncryptedFile
    | Raw.messages.SendEncryptedService
    | Raw.messages.ReceivedQueue
    | Raw.messages.ReportEncryptedSpam
    | Raw.messages.ReadMessageContents
    | Raw.messages.GetStickers
    | Raw.messages.GetAllStickers
    | Raw.messages.GetWebPagePreview
    | Raw.messages.ExportChatInvite
    | Raw.messages.CheckChatInvite
    | Raw.messages.ImportChatInvite
    | Raw.messages.GetStickerSet
    | Raw.messages.InstallStickerSet
    | Raw.messages.UninstallStickerSet
    | Raw.messages.StartBot
    | Raw.messages.GetMessagesViews
    | Raw.messages.EditChatAdmin
    | Raw.messages.MigrateChat
    | Raw.messages.SearchGlobal
    | Raw.messages.ReorderStickerSets
    | Raw.messages.GetDocumentByHash
    | Raw.messages.GetSavedGifs
    | Raw.messages.SaveGif
    | Raw.messages.GetInlineBotResults
    | Raw.messages.SetInlineBotResults
    | Raw.messages.SendInlineBotResult
    | Raw.messages.GetMessageEditData
    | Raw.messages.EditMessage
    | Raw.messages.EditInlineBotMessage
    | Raw.messages.GetBotCallbackAnswer
    | Raw.messages.SetBotCallbackAnswer
    | Raw.messages.GetPeerDialogs
    | Raw.messages.SaveDraft
    | Raw.messages.GetAllDrafts
    | Raw.messages.GetFeaturedStickers
    | Raw.messages.ReadFeaturedStickers
    | Raw.messages.GetRecentStickers
    | Raw.messages.SaveRecentSticker
    | Raw.messages.ClearRecentStickers
    | Raw.messages.GetArchivedStickers
    | Raw.messages.GetMaskStickers
    | Raw.messages.GetAttachedStickers
    | Raw.messages.SetGameScore
    | Raw.messages.SetInlineGameScore
    | Raw.messages.GetGameHighScores
    | Raw.messages.GetInlineGameHighScores
    | Raw.messages.GetCommonChats
    | Raw.messages.GetWebPage
    | Raw.messages.ToggleDialogPin
    | Raw.messages.ReorderPinnedDialogs
    | Raw.messages.GetPinnedDialogs
    | Raw.messages.SetBotShippingResults
    | Raw.messages.SetBotPrecheckoutResults
    | Raw.messages.UploadMedia
    | Raw.messages.SendScreenshotNotification
    | Raw.messages.GetFavedStickers
    | Raw.messages.FaveSticker
    | Raw.messages.GetUnreadMentions
    | Raw.messages.ReadMentions
    | Raw.messages.GetRecentLocations
    | Raw.messages.SendMultiMedia
    | Raw.messages.UploadEncryptedFile
    | Raw.messages.SearchStickerSets
    | Raw.messages.GetSplitRanges
    | Raw.messages.MarkDialogUnread
    | Raw.messages.GetDialogUnreadMarks
    | Raw.messages.ClearAllDrafts
    | Raw.messages.UpdatePinnedMessage
    | Raw.messages.SendVote
    | Raw.messages.GetPollResults
    | Raw.messages.GetOnlines
    | Raw.messages.EditChatAbout
    | Raw.messages.EditChatDefaultBannedRights
    | Raw.messages.GetEmojiKeywords
    | Raw.messages.GetEmojiKeywordsDifference
    | Raw.messages.GetEmojiKeywordsLanguages
    | Raw.messages.GetEmojiURL
    | Raw.messages.GetSearchCounters
    | Raw.messages.RequestUrlAuth
    | Raw.messages.AcceptUrlAuth
    | Raw.messages.HidePeerSettingsBar
    | Raw.messages.GetScheduledHistory
    | Raw.messages.GetScheduledMessages
    | Raw.messages.SendScheduledMessages
    | Raw.messages.DeleteScheduledMessages
    | Raw.messages.GetPollVotes
    | Raw.messages.ToggleStickerSets
    | Raw.messages.GetDialogFilters
    | Raw.messages.GetSuggestedDialogFilters
    | Raw.messages.UpdateDialogFilter
    | Raw.messages.UpdateDialogFiltersOrder
    | Raw.messages.GetOldFeaturedStickers
    | Raw.messages.GetReplies
    | Raw.messages.GetDiscussionMessage
    | Raw.messages.ReadDiscussion
    | Raw.messages.UnpinAllMessages
    | Raw.messages.DeleteChat
    | Raw.messages.DeletePhoneCallHistory
    | Raw.messages.CheckHistoryImport
    | Raw.messages.InitHistoryImport
    | Raw.messages.UploadImportedMedia
    | Raw.messages.StartHistoryImport
    | Raw.messages.GetExportedChatInvites
    | Raw.messages.GetExportedChatInvite
    | Raw.messages.EditExportedChatInvite
    | Raw.messages.DeleteRevokedExportedChatInvites
    | Raw.messages.DeleteExportedChatInvite
    | Raw.messages.GetAdminsWithInvites
    | Raw.messages.GetChatInviteImporters
    | Raw.messages.SetHistoryTTL
    | Raw.messages.CheckHistoryImportPeer
    | Raw.messages.SetChatTheme
    | Raw.messages.GetMessageReadParticipants
    | Raw.messages.GetSearchResultsCalendar
    | Raw.messages.GetSearchResultsPositions
    | Raw.messages.HideChatJoinRequest
    | Raw.messages.HideAllChatJoinRequests
    | Raw.messages.ToggleNoForwards
    | Raw.messages.SaveDefaultSendAs
    | Raw.messages.SendReaction
    | Raw.messages.GetMessagesReactions
    | Raw.messages.GetMessageReactionsList
    | Raw.messages.SetChatAvailableReactions
    | Raw.messages.GetAvailableReactions
    | Raw.messages.SetDefaultReaction
    | Raw.messages.TranslateText
    | Raw.messages.GetUnreadReactions
    | Raw.messages.ReadReactions
    | Raw.messages.SearchSentMedia
    | Raw.messages.GetAttachMenuBots
    | Raw.messages.GetAttachMenuBot
    | Raw.messages.ToggleBotInAttachMenu
    | Raw.messages.RequestWebView
    | Raw.messages.ProlongWebView
    | Raw.messages.RequestSimpleWebView
    | Raw.messages.SendWebViewResultMessage
    | Raw.messages.SendWebViewData
    | Raw.messages.TranscribeAudio
    | Raw.messages.RateTranscribedAudio
    | Raw.messages.GetCustomEmojiDocuments
    | Raw.messages.GetEmojiStickers
    | Raw.messages.GetFeaturedEmojiStickers
    | Raw.messages.ReportReaction
    | Raw.messages.GetTopReactions
    | Raw.messages.GetRecentReactions
    | Raw.messages.ClearRecentReactions
    | Raw.messages.GetExtendedMedia
    | Raw.messages.SetDefaultHistoryTTL
    | Raw.messages.GetDefaultHistoryTTL
    | Raw.messages.SendBotRequestedPeer
    | Raw.messages.GetEmojiGroups
    | Raw.messages.GetEmojiStatusGroups
    | Raw.messages.GetEmojiProfilePhotoGroups
    | Raw.messages.SearchCustomEmoji
    | Raw.messages.TogglePeerTranslations
    | Raw.messages.GetBotApp
    | Raw.messages.RequestAppWebView
    | Raw.messages.SetChatWallPaper
    | Raw.messages.SearchEmojiStickerSets
    | Raw.messages.GetSavedDialogs
    | Raw.messages.GetSavedHistory
    | Raw.messages.DeleteSavedHistory
    | Raw.messages.GetPinnedSavedDialogs
    | Raw.messages.ToggleSavedDialogPin
    | Raw.messages.ReorderPinnedSavedDialogs
    | Raw.messages.GetSavedReactionTags
    | Raw.messages.UpdateSavedReactionTag
    | Raw.messages.GetDefaultTagReactions
    | Raw.messages.GetOutboxReadDate
    | Raw.messages.GetQuickReplies
    | Raw.messages.ReorderQuickReplies
    | Raw.messages.CheckQuickReplyShortcut
    | Raw.messages.EditQuickReplyShortcut
    | Raw.messages.DeleteQuickReplyShortcut
    | Raw.messages.GetQuickReplyMessages
    | Raw.messages.SendQuickReplyMessages
    | Raw.messages.DeleteQuickReplyMessages
    | Raw.messages.ToggleDialogFilterTags
    | Raw.messages.GetMyStickers
    | Raw.updates.GetState
    | Raw.updates.GetDifference
    | Raw.updates.GetChannelDifference
    | Raw.photos.UpdateProfilePhoto
    | Raw.photos.UploadProfilePhoto
    | Raw.photos.DeletePhotos
    | Raw.photos.GetUserPhotos
    | Raw.photos.UploadContactProfilePhoto
    | Raw.upload.SaveFilePart
    | Raw.upload.GetFile
    | Raw.upload.SaveBigFilePart
    | Raw.upload.GetWebFile
    | Raw.upload.GetCdnFile
    | Raw.upload.ReuploadCdnFile
    | Raw.upload.GetCdnFileHashes
    | Raw.upload.GetFileHashes
    | Raw.help.GetConfig
    | Raw.help.GetNearestDc
    | Raw.help.GetAppUpdate
    | Raw.help.GetInviteText
    | Raw.help.GetSupport
    | Raw.help.SetBotUpdatesStatus
    | Raw.help.GetCdnConfig
    | Raw.help.GetRecentMeUrls
    | Raw.help.GetTermsOfServiceUpdate
    | Raw.help.AcceptTermsOfService
    | Raw.help.GetDeepLinkInfo
    | Raw.help.GetAppConfig
    | Raw.help.SaveAppLog
    | Raw.help.GetPassportConfig
    | Raw.help.GetSupportName
    | Raw.help.GetUserInfo
    | Raw.help.EditUserInfo
    | Raw.help.GetPromoData
    | Raw.help.HidePromoData
    | Raw.help.DismissSuggestion
    | Raw.help.GetCountriesList
    | Raw.help.GetPremiumPromo
    | Raw.help.GetPeerColors
    | Raw.help.GetPeerProfileColors
    | Raw.help.GetTimezonesList
    | Raw.channels.ReadHistory
    | Raw.channels.DeleteMessages
    | Raw.channels.ReportSpam
    | Raw.channels.GetMessages
    | Raw.channels.GetParticipants
    | Raw.channels.GetParticipant
    | Raw.channels.GetChannels
    | Raw.channels.GetFullChannel
    | Raw.channels.CreateChannel
    | Raw.channels.EditAdmin
    | Raw.channels.EditTitle
    | Raw.channels.EditPhoto
    | Raw.channels.CheckUsername
    | Raw.channels.UpdateUsername
    | Raw.channels.JoinChannel
    | Raw.channels.LeaveChannel
    | Raw.channels.InviteToChannel
    | Raw.channels.DeleteChannel
    | Raw.channels.ExportMessageLink
    | Raw.channels.ToggleSignatures
    | Raw.channels.GetAdminedPublicChannels
    | Raw.channels.EditBanned
    | Raw.channels.GetAdminLog
    | Raw.channels.SetStickers
    | Raw.channels.ReadMessageContents
    | Raw.channels.DeleteHistory
    | Raw.channels.TogglePreHistoryHidden
    | Raw.channels.GetLeftChannels
    | Raw.channels.GetGroupsForDiscussion
    | Raw.channels.SetDiscussionGroup
    | Raw.channels.EditCreator
    | Raw.channels.EditLocation
    | Raw.channels.ToggleSlowMode
    | Raw.channels.GetInactiveChannels
    | Raw.channels.ConvertToGigagroup
    | Raw.channels.ViewSponsoredMessage
    | Raw.channels.GetSponsoredMessages
    | Raw.channels.GetSendAs
    | Raw.channels.DeleteParticipantHistory
    | Raw.channels.ToggleJoinToSend
    | Raw.channels.ToggleJoinRequest
    | Raw.channels.ReorderUsernames
    | Raw.channels.ToggleUsername
    | Raw.channels.DeactivateAllUsernames
    | Raw.channels.ToggleForum
    | Raw.channels.CreateForumTopic
    | Raw.channels.GetForumTopics
    | Raw.channels.GetForumTopicsByID
    | Raw.channels.EditForumTopic
    | Raw.channels.UpdatePinnedForumTopic
    | Raw.channels.DeleteTopicHistory
    | Raw.channels.ReorderPinnedForumTopics
    | Raw.channels.ToggleAntiSpam
    | Raw.channels.ReportAntiSpamFalsePositive
    | Raw.channels.ToggleParticipantsHidden
    | Raw.channels.ClickSponsoredMessage
    | Raw.channels.UpdateColor
    | Raw.channels.ToggleViewForumAsMessages
    | Raw.channels.GetChannelRecommendations
    | Raw.channels.UpdateEmojiStatus
    | Raw.channels.SetBoostsToUnblockRestrictions
    | Raw.channels.SetEmojiStickers
    | Raw.channels.ReportSponsoredMessage
    | Raw.channels.RestrictSponsoredMessages
    | Raw.bots.SendCustomRequest
    | Raw.bots.AnswerWebhookJSONQuery
    | Raw.bots.SetBotCommands
    | Raw.bots.ResetBotCommands
    | Raw.bots.GetBotCommands
    | Raw.bots.SetBotMenuButton
    | Raw.bots.GetBotMenuButton
    | Raw.bots.SetBotBroadcastDefaultAdminRights
    | Raw.bots.SetBotGroupDefaultAdminRights
    | Raw.bots.SetBotInfo
    | Raw.bots.GetBotInfo
    | Raw.bots.ReorderUsernames
    | Raw.bots.ToggleUsername
    | Raw.bots.CanSendMessage
    | Raw.bots.AllowSendMessage
    | Raw.bots.InvokeWebViewCustomMethod
    | Raw.payments.GetPaymentForm
    | Raw.payments.GetPaymentReceipt
    | Raw.payments.ValidateRequestedInfo
    | Raw.payments.SendPaymentForm
    | Raw.payments.GetSavedInfo
    | Raw.payments.ClearSavedInfo
    | Raw.payments.GetBankCardData
    | Raw.payments.ExportInvoice
    | Raw.payments.AssignAppStoreTransaction
    | Raw.payments.AssignPlayMarketTransaction
    | Raw.payments.CanPurchasePremium
    | Raw.payments.GetPremiumGiftCodeOptions
    | Raw.payments.CheckGiftCode
    | Raw.payments.ApplyGiftCode
    | Raw.payments.GetGiveawayInfo
    | Raw.payments.LaunchPrepaidGiveaway
    | Raw.stickers.CreateStickerSet
    | Raw.stickers.RemoveStickerFromSet
    | Raw.stickers.ChangeStickerPosition
    | Raw.stickers.AddStickerToSet
    | Raw.stickers.SetStickerSetThumb
    | Raw.stickers.CheckShortName
    | Raw.stickers.SuggestShortName
    | Raw.stickers.ChangeSticker
    | Raw.stickers.RenameStickerSet
    | Raw.stickers.DeleteStickerSet
    | Raw.stickers.ReplaceSticker
    | Raw.phone.GetCallConfig
    | Raw.phone.RequestCall
    | Raw.phone.AcceptCall
    | Raw.phone.ConfirmCall
    | Raw.phone.ReceivedCall
    | Raw.phone.DiscardCall
    | Raw.phone.SetCallRating
    | Raw.phone.SaveCallDebug
    | Raw.phone.SendSignalingData
    | Raw.phone.CreateGroupCall
    | Raw.phone.JoinGroupCall
    | Raw.phone.LeaveGroupCall
    | Raw.phone.InviteToGroupCall
    | Raw.phone.DiscardGroupCall
    | Raw.phone.ToggleGroupCallSettings
    | Raw.phone.GetGroupCall
    | Raw.phone.GetGroupParticipants
    | Raw.phone.CheckGroupCall
    | Raw.phone.ToggleGroupCallRecord
    | Raw.phone.EditGroupCallParticipant
    | Raw.phone.EditGroupCallTitle
    | Raw.phone.GetGroupCallJoinAs
    | Raw.phone.ExportGroupCallInvite
    | Raw.phone.ToggleGroupCallStartSubscription
    | Raw.phone.StartScheduledGroupCall
    | Raw.phone.SaveDefaultGroupCallJoinAs
    | Raw.phone.JoinGroupCallPresentation
    | Raw.phone.LeaveGroupCallPresentation
    | Raw.phone.GetGroupCallStreamChannels
    | Raw.phone.GetGroupCallStreamRtmpUrl
    | Raw.phone.SaveCallLog
    | Raw.langpack.GetLangPack
    | Raw.langpack.GetStrings
    | Raw.langpack.GetDifference
    | Raw.langpack.GetLanguages
    | Raw.langpack.GetLanguage
    | Raw.folders.EditPeerFolders
    | Raw.stats.GetBroadcastStats
    | Raw.stats.LoadAsyncGraph
    | Raw.stats.GetMegagroupStats
    | Raw.stats.GetMessagePublicForwards
    | Raw.stats.GetMessageStats
    | Raw.stats.GetStoryStats
    | Raw.stats.GetStoryPublicForwards
    | Raw.stats.GetBroadcastRevenueStats
    | Raw.stats.GetBroadcastRevenueWithdrawalUrl
    | Raw.stats.GetBroadcastRevenueTransactions
    | Raw.chatlists.ExportChatlistInvite
    | Raw.chatlists.DeleteExportedInvite
    | Raw.chatlists.EditExportedInvite
    | Raw.chatlists.GetExportedInvites
    | Raw.chatlists.CheckChatlistInvite
    | Raw.chatlists.JoinChatlistInvite
    | Raw.chatlists.GetChatlistUpdates
    | Raw.chatlists.JoinChatlistUpdates
    | Raw.chatlists.HideChatlistUpdates
    | Raw.chatlists.GetLeaveChatlistSuggestions
    | Raw.chatlists.LeaveChatlist
    | Raw.stories.CanSendStory
    | Raw.stories.SendStory
    | Raw.stories.EditStory
    | Raw.stories.DeleteStories
    | Raw.stories.TogglePinned
    | Raw.stories.GetAllStories
    | Raw.stories.GetPinnedStories
    | Raw.stories.GetStoriesArchive
    | Raw.stories.GetStoriesByID
    | Raw.stories.ToggleAllStoriesHidden
    | Raw.stories.ReadStories
    | Raw.stories.IncrementStoryViews
    | Raw.stories.GetStoryViewsList
    | Raw.stories.GetStoriesViews
    | Raw.stories.ExportStoryLink
    | Raw.stories.Report
    | Raw.stories.ActivateStealthMode
    | Raw.stories.SendReaction
    | Raw.stories.GetPeerStories
    | Raw.stories.GetAllReadPeerStories
    | Raw.stories.GetPeerMaxIDs
    | Raw.stories.GetChatsToSend
    | Raw.stories.TogglePeerStoriesHidden
    | Raw.stories.GetStoryReactionsList
    | Raw.stories.TogglePinnedToTop
    | Raw.premium.GetBoostsList
    | Raw.premium.GetMyBoosts
    | Raw.premium.ApplyBoost
    | Raw.premium.GetBoostsStatus
    | Raw.premium.GetUserBoosts
    | Raw.smsjobs.IsEligibleToJoin
    | Raw.smsjobs.Join
    | Raw.smsjobs.Leave
    | Raw.smsjobs.UpdateSettings
    | Raw.smsjobs.GetStatus
    | Raw.smsjobs.GetSmsJob
    | Raw.smsjobs.FinishJob
    | Raw.fragment.GetCollectibleInfo;
  type TypeFileLocation = Raw.FileLocationUnavailable23 | Raw.FileLocation23;
  type TypeDecryptedMessage =
    | Raw.DecryptedMessage8
    | Raw.DecryptedMessageService8
    | Raw.DecryptedMessage17
    | Raw.DecryptedMessageService17
    | Raw.DecryptedMessage45
    | Raw.DecryptedMessage73;
  type TypeDecryptedMessageAction =
    | Raw.DecryptedMessageActionSetMessageTTL8
    | Raw.DecryptedMessageActionReadMessages8
    | Raw.DecryptedMessageActionDeleteMessages8
    | Raw.DecryptedMessageActionScreenshotMessages8
    | Raw.DecryptedMessageActionFlushHistory8
    | Raw.DecryptedMessageActionResend17
    | Raw.DecryptedMessageActionNotifyLayer17
    | Raw.DecryptedMessageActionTyping17
    | Raw.DecryptedMessageActionRequestKey20
    | Raw.DecryptedMessageActionAcceptKey20
    | Raw.DecryptedMessageActionAbortKey20
    | Raw.DecryptedMessageActionCommitKey20
    | Raw.DecryptedMessageActionNoop20;
  type TypeDecryptedMessageMedia =
    | Raw.DecryptedMessageMediaEmpty8
    | Raw.DecryptedMessageMediaPhoto8
    | Raw.DecryptedMessageMediaVideo8
    | Raw.DecryptedMessageMediaGeoPoint8
    | Raw.DecryptedMessageMediaContact8
    | Raw.DecryptedMessageMediaDocument8
    | Raw.DecryptedMessageMediaAudio8
    | Raw.DecryptedMessageMediaVideo17
    | Raw.DecryptedMessageMediaAudio17
    | Raw.DecryptedMessageMediaExternalDocument23
    | Raw.DecryptedMessageMediaPhoto45
    | Raw.DecryptedMessageMediaVideo45
    | Raw.DecryptedMessageMediaDocument45
    | Raw.DecryptedMessageMediaVenue45
    | Raw.DecryptedMessageMediaWebPage45
    | Raw.DecryptedMessageMediaDocument143;
  type TypeInputCollectible = Raw.InputCollectibleUsername | Raw.InputCollectiblePhone;
  type TypeSmsJob = Raw.SmsJob;
  type TypeExportedStoryLink = Raw.ExportedStoryLink;
  type TypeInputChatlist = Raw.InputChatlistDialogFilter;
  type TypeInputFolderPeer = Raw.InputFolderPeer;
  type TypeLangPackLanguage = Raw.LangPackLanguage;
  type TypeInputPhoneCall = Raw.InputPhoneCall;
  type TypeInputStickerSetItem = Raw.InputStickerSetItem;
  type TypeInputPaymentCredentials =
    | Raw.InputPaymentCredentialsSaved
    | Raw.InputPaymentCredentials
    | Raw.InputPaymentCredentialsApplePay
    | Raw.InputPaymentCredentialsGooglePay;
  type TypeInputInvoice =
    | Raw.InputInvoiceMessage
    | Raw.InputInvoiceSlug
    | Raw.InputInvoicePremiumGiftCode;
  type TypeBotCommandScope =
    | Raw.BotCommandScopeDefault
    | Raw.BotCommandScopeUsers
    | Raw.BotCommandScopeChats
    | Raw.BotCommandScopeChatAdmins
    | Raw.BotCommandScopePeer
    | Raw.BotCommandScopePeerAdmins
    | Raw.BotCommandScopePeerUser;
  type TypeChannelAdminLogEventsFilter = Raw.ChannelAdminLogEventsFilter;
  type TypeExportedMessageLink = Raw.ExportedMessageLink;
  type TypeChannelParticipantsFilter =
    | Raw.ChannelParticipantsRecent
    | Raw.ChannelParticipantsAdmins
    | Raw.ChannelParticipantsKicked
    | Raw.ChannelParticipantsBots
    | Raw.ChannelParticipantsBanned
    | Raw.ChannelParticipantsSearch
    | Raw.ChannelParticipantsContacts
    | Raw.ChannelParticipantsMentions;
  type TypeInputAppEvent = Raw.InputAppEvent;
  type TypeCdnConfig = Raw.CdnConfig;
  type TypeNearestDc = Raw.NearestDc;
  type TypeConfig = Raw.Config;
  type TypeInputWebFileLocation =
    | Raw.InputWebFileLocation
    | Raw.InputWebFileGeoPointLocation
    | Raw.InputWebFileAudioAlbumThumbLocation;
  type TypeInputFileLocation =
    | Raw.InputFileLocation
    | Raw.InputEncryptedFileLocation
    | Raw.InputDocumentFileLocation
    | Raw.InputSecureFileLocation
    | Raw.InputTakeoutFileLocation
    | Raw.InputPhotoFileLocation
    | Raw.InputPhotoLegacyFileLocation
    | Raw.InputPeerPhotoFileLocation
    | Raw.InputStickerSetThumb
    | Raw.InputGroupCallStream;
  type TypeChannelMessagesFilter = Raw.ChannelMessagesFilterEmpty | Raw.ChannelMessagesFilter;
  type TypeOutboxReadDate = Raw.OutboxReadDate;
  type TypeAppWebViewResult = Raw.AppWebViewResultUrl;
  type TypeInputBotApp = Raw.InputBotAppID | Raw.InputBotAppShortName;
  type TypeDefaultHistoryTTL = Raw.DefaultHistoryTTL;
  type TypeWebViewMessageSent = Raw.WebViewMessageSent;
  type TypeSimpleWebViewResult = Raw.SimpleWebViewResultUrl;
  type TypeWebViewResult = Raw.WebViewResultUrl;
  type TypeAttachMenuBotsBot = Raw.AttachMenuBotsBot;
  type TypeAttachMenuBots = Raw.AttachMenuBotsNotModified | Raw.AttachMenuBots;
  type TypeReadParticipantDate = Raw.ReadParticipantDate;
  type TypeDialogFilterSuggested = Raw.DialogFilterSuggested;
  type TypeUrlAuthResult =
    | Raw.UrlAuthResultRequest
    | Raw.UrlAuthResultAccepted
    | Raw.UrlAuthResultDefault;
  type TypeEmojiURL = Raw.EmojiURL;
  type TypeEmojiLanguage = Raw.EmojiLanguage;
  type TypeEmojiKeywordsDifference = Raw.EmojiKeywordsDifference;
  type TypeChatOnlines = Raw.ChatOnlines;
  type TypeInputSingleMedia = Raw.InputSingleMedia;
  type TypeInputStickeredMedia = Raw.InputStickeredMediaPhoto | Raw.InputStickeredMediaDocument;
  type TypeInputDialogPeer = Raw.InputDialogPeer | Raw.InputDialogPeerFolder;
  type TypeInputBotInlineResult =
    | Raw.InputBotInlineResult
    | Raw.InputBotInlineResultPhoto
    | Raw.InputBotInlineResultDocument
    | Raw.InputBotInlineResultGame;
  type TypeInputEncryptedFile =
    | Raw.InputEncryptedFileEmpty
    | Raw.InputEncryptedFileUploaded
    | Raw.InputEncryptedFile
    | Raw.InputEncryptedFileBigUploaded;
  type TypeInputEncryptedChat = Raw.InputEncryptedChat;
  type TypeInputChatPhoto =
    | Raw.InputChatPhotoEmpty
    | Raw.InputChatUploadedPhoto
    | Raw.InputChatPhoto;
  type TypeInputQuickReplyShortcut = Raw.InputQuickReplyShortcut | Raw.InputQuickReplyShortcutId;
  type TypeReceivedNotifyMessage = Raw.ReceivedNotifyMessage;
  type TypeInputMessage =
    | Raw.InputMessageID
    | Raw.InputMessageReplyTo
    | Raw.InputMessagePinned
    | Raw.InputMessageCallbackQuery;
  type TypeExportedContactToken = Raw.ExportedContactToken;
  type TypeSavedContact = Raw.SavedPhoneContact;
  type TypeInputContact = Raw.InputPhoneContact;
  type TypeContactStatus = Raw.ContactStatus;
  type TypeReactionsNotifySettings = Raw.ReactionsNotifySettings;
  type TypeInputBusinessChatLink = Raw.InputBusinessChatLink;
  type TypeInputBusinessIntro = Raw.InputBusinessIntro;
  type TypeInputBusinessBotRecipients = Raw.InputBusinessBotRecipients;
  type TypeInputBusinessAwayMessage = Raw.InputBusinessAwayMessage;
  type TypeInputBusinessGreetingMessage = Raw.InputBusinessGreetingMessage;
  type TypeEmojiList = Raw.EmojiListNotModified | Raw.EmojiList;
  type TypeGlobalPrivacySettings = Raw.GlobalPrivacySettings;
  type TypeInputTheme = Raw.InputTheme | Raw.InputThemeSlug;
  type TypeInputThemeSettings = Raw.InputThemeSettings;
  type TypeEmailVerifyPurpose =
    | Raw.EmailVerifyPurposeLoginSetup
    | Raw.EmailVerifyPurposeLoginChange
    | Raw.EmailVerifyPurposePassport;
  type TypeSecureValueHash = Raw.SecureValueHash;
  type TypeInputSecureValue = Raw.InputSecureValue;
  type TypeAccountDaysTTL = Raw.AccountDaysTTL;
  type TypeInputPrivacyRule =
    | Raw.InputPrivacyValueAllowContacts
    | Raw.InputPrivacyValueAllowAll
    | Raw.InputPrivacyValueAllowUsers
    | Raw.InputPrivacyValueDisallowContacts
    | Raw.InputPrivacyValueDisallowAll
    | Raw.InputPrivacyValueDisallowUsers
    | Raw.InputPrivacyValueAllowChatParticipants
    | Raw.InputPrivacyValueDisallowChatParticipants
    | Raw.InputPrivacyValueAllowCloseFriends
    | Raw.InputPrivacyValueAllowPremium;
  type TypeInputPrivacyKey =
    | Raw.InputPrivacyKeyStatusTimestamp
    | Raw.InputPrivacyKeyChatInvite
    | Raw.InputPrivacyKeyPhoneCall
    | Raw.InputPrivacyKeyPhoneP2P
    | Raw.InputPrivacyKeyForwards
    | Raw.InputPrivacyKeyProfilePhoto
    | Raw.InputPrivacyKeyPhoneNumber
    | Raw.InputPrivacyKeyAddedByPhone
    | Raw.InputPrivacyKeyVoiceMessages
    | Raw.InputPrivacyKeyAbout
    | Raw.InputPrivacyKeyBirthday;
  type TypeReportReason =
    | Raw.InputReportReasonSpam
    | Raw.InputReportReasonViolence
    | Raw.InputReportReasonPornography
    | Raw.InputReportReasonChildAbuse
    | Raw.InputReportReasonOther
    | Raw.InputReportReasonCopyright
    | Raw.InputReportReasonGeoIrrelevant
    | Raw.InputReportReasonFake
    | Raw.InputReportReasonIllegalDrugs
    | Raw.InputReportReasonPersonalDetails;
  type TypeInputPeerNotifySettings = Raw.InputPeerNotifySettings;
  type TypeInputNotifyPeer =
    | Raw.InputNotifyPeer
    | Raw.InputNotifyUsers
    | Raw.InputNotifyChats
    | Raw.InputNotifyBroadcasts
    | Raw.InputNotifyForumTopic;
  type TypeInputCheckPasswordSRP = Raw.InputCheckPasswordEmpty | Raw.InputCheckPasswordSRP;
  type TypeEmailVerification =
    | Raw.EmailVerificationCode
    | Raw.EmailVerificationGoogle
    | Raw.EmailVerificationApple;
  type TypeCodeSettings = Raw.CodeSettings;
  type TypeInputClientProxy = Raw.InputClientProxy;
  type TypeReactionNotificationsFrom =
    | Raw.ReactionNotificationsFromContacts
    | Raw.ReactionNotificationsFromAll;
  type TypeBroadcastRevenueTransaction =
    | Raw.BroadcastRevenueTransactionProceeds
    | Raw.BroadcastRevenueTransactionWithdrawal
    | Raw.BroadcastRevenueTransactionRefund;
  type TypeSponsoredMessageReportOption = Raw.SponsoredMessageReportOption;
  type TypeBusinessChatLink = Raw.BusinessChatLink;
  type TypeMissingInvitee = Raw.MissingInvitee;
  type TypeContactBirthday = Raw.ContactBirthday;
  type TypeConnectedBot = Raw.ConnectedBot;
  type TypeBusinessBotRecipients = Raw.BusinessBotRecipients;
  type TypeTimezone = Raw.Timezone;
  type TypeBusinessAwayMessageSchedule =
    | Raw.BusinessAwayMessageScheduleAlways
    | Raw.BusinessAwayMessageScheduleOutsideWorkHours
    | Raw.BusinessAwayMessageScheduleCustom;
  type TypeBusinessRecipients = Raw.BusinessRecipients;
  type TypeInputBusinessRecipients = Raw.InputBusinessRecipients;
  type TypeBusinessWeeklyOpen = Raw.BusinessWeeklyOpen;
  type TypeSavedReactionTag = Raw.SavedReactionTag;
  type TypeSavedDialog = Raw.SavedDialog;
  type TypeStoryReaction =
    | Raw.StoryReaction
    | Raw.StoryReactionPublicForward
    | Raw.StoryReactionPublicRepost;
  type TypePublicForward = Raw.PublicForwardMessage | Raw.PublicForwardStory;
  type TypePrepaidGiveaway = Raw.PrepaidGiveaway;
  type TypeMyBoost = Raw.MyBoost;
  type TypeMediaAreaCoordinates = Raw.MediaAreaCoordinates;
  type TypeStoryView = Raw.StoryView | Raw.StoryViewPublicForward | Raw.StoryViewPublicRepost;
  type TypeStoryViews = Raw.StoryViews;
  type TypeMediaArea =
    | Raw.MediaAreaVenue
    | Raw.InputMediaAreaVenue
    | Raw.MediaAreaGeoPoint
    | Raw.MediaAreaSuggestedReaction
    | Raw.MediaAreaChannelPost
    | Raw.InputMediaAreaChannelPost;
  type TypeStoryFwdHeader = Raw.StoryFwdHeader;
  type TypeExportedChatlistInvite = Raw.ExportedChatlistInvite;
  type TypeAutoSaveException = Raw.AutoSaveException;
  type TypeAutoSaveSettings = Raw.AutoSaveSettings;
  type TypeEmojiGroup = Raw.EmojiGroup;
  type TypePremiumSubscriptionOption = Raw.PremiumSubscriptionOption;
  type TypePremiumGiftCodeOption = Raw.PremiumGiftCodeOption;
  type TypeInputStorePaymentPurpose =
    | Raw.InputStorePaymentPremiumSubscription
    | Raw.InputStorePaymentGiftPremium
    | Raw.InputStorePaymentPremiumGiftCode
    | Raw.InputStorePaymentPremiumGiveaway;
  type TypeAttachMenuBot = Raw.AttachMenuBot;
  type TypeAttachMenuBotIcon = Raw.AttachMenuBotIcon;
  type TypeAttachMenuPeerType =
    | Raw.AttachMenuPeerTypeSameBotPM
    | Raw.AttachMenuPeerTypeBotPM
    | Raw.AttachMenuPeerTypePM
    | Raw.AttachMenuPeerTypeChat
    | Raw.AttachMenuPeerTypeBroadcast;
  type TypeAttachMenuBotIconColor = Raw.AttachMenuBotIconColor;
  type TypeGroupCallStreamChannel = Raw.GroupCallStreamChannel;
  type TypeAvailableReaction = Raw.AvailableReaction;
  type TypeMessagePeerReaction = Raw.MessagePeerReaction;
  type TypeUserFull = Raw.UserFull;
  type TypeSendAsPeer = Raw.SendAsPeer;
  type TypeSearchResultsPosition = Raw.SearchResultPosition;
  type TypeSearchResultsCalendarPeriod = Raw.SearchResultsCalendarPeriod;
  type TypeSponsoredMessage = Raw.SponsoredMessage;
  type TypeGroupCallParticipantVideoSourceGroup = Raw.GroupCallParticipantVideoSourceGroup;
  type TypeChatAdminWithInvites = Raw.ChatAdminWithInvites;
  type TypeChatInviteImporter = Raw.ChatInviteImporter;
  type TypeGroupCallParticipantVideo = Raw.GroupCallParticipantVideo;
  type TypeMessageViews = Raw.MessageViews;
  type TypeStatsGroupTopInviter = Raw.StatsGroupTopInviter;
  type TypeStatsGroupTopAdmin = Raw.StatsGroupTopAdmin;
  type TypeStatsGroupTopPoster = Raw.StatsGroupTopPoster;
  type TypePostInteractionCounters =
    | Raw.PostInteractionCountersMessage
    | Raw.PostInteractionCountersStory;
  type TypeStatsGraph = Raw.StatsGraphAsync | Raw.StatsGraphError | Raw.StatsGraph;
  type TypeStatsPercentValue = Raw.StatsPercentValue;
  type TypeStatsAbsValueAndPrev = Raw.StatsAbsValueAndPrev;
  type TypeStatsDateRangeDays = Raw.StatsDateRangeDays;
  type TypeBankCardOpenUrl = Raw.BankCardOpenUrl;
  type TypeMessagePeerVote =
    | Raw.MessagePeerVote
    | Raw.MessagePeerVoteInputOption
    | Raw.MessagePeerVoteMultiple;
  type TypeInputWallPaper = Raw.InputWallPaper | Raw.InputWallPaperSlug | Raw.InputWallPaperNoFile;
  type TypeBaseTheme =
    | Raw.BaseThemeClassic
    | Raw.BaseThemeDay
    | Raw.BaseThemeNight
    | Raw.BaseThemeTinted
    | Raw.BaseThemeArctic;
  type TypeThemeSettings = Raw.ThemeSettings;
  type TypeMessagesFilter =
    | Raw.InputMessagesFilterEmpty
    | Raw.InputMessagesFilterPhotos
    | Raw.InputMessagesFilterVideo
    | Raw.InputMessagesFilterPhotoVideo
    | Raw.InputMessagesFilterDocument
    | Raw.InputMessagesFilterUrl
    | Raw.InputMessagesFilterGif
    | Raw.InputMessagesFilterVoice
    | Raw.InputMessagesFilterMusic
    | Raw.InputMessagesFilterChatPhotos
    | Raw.InputMessagesFilterPhoneCalls
    | Raw.InputMessagesFilterRoundVoice
    | Raw.InputMessagesFilterRoundVideo
    | Raw.InputMessagesFilterMyMentions
    | Raw.InputMessagesFilterGeo
    | Raw.InputMessagesFilterContacts
    | Raw.InputMessagesFilterPinned;
  type TypeEmojiKeyword = Raw.EmojiKeyword | Raw.EmojiKeywordDeleted;
  type TypeAutoDownloadSettings = Raw.AutoDownloadSettings;
  type TypePollAnswerVoters = Raw.PollAnswerVoters;
  type TypePollAnswer = Raw.PollAnswer;
  type TypeTextWithEntities = Raw.TextWithEntities;
  type TypePageTableCell = Raw.PageTableCell;
  type TypeJSONObjectValue = Raw.JsonObjectValue;
  type TypeJSONValue =
    | Raw.JsonNull
    | Raw.JsonBool
    | Raw.JsonNumber
    | Raw.JsonString
    | Raw.JsonArray
    | Raw.JsonObject;
  type TypeSecureValueError =
    | Raw.SecureValueErrorData
    | Raw.SecureValueErrorFrontSide
    | Raw.SecureValueErrorReverseSide
    | Raw.SecureValueErrorSelfie
    | Raw.SecureValueErrorFile
    | Raw.SecureValueErrorFiles
    | Raw.SecureValueError
    | Raw.SecureValueErrorTranslationFile
    | Raw.SecureValueErrorTranslationFiles;
  type TypeSecureRequiredType = Raw.SecureRequiredType | Raw.SecureRequiredTypeOneOf;
  type TypeInputSecureFile = Raw.InputSecureFileUploaded | Raw.InputSecureFile;
  type TypeSecurePlainData = Raw.SecurePlainPhone | Raw.SecurePlainEmail;
  type TypeSecureFile = Raw.SecureFileEmpty | Raw.SecureFile;
  type TypeSecureData = Raw.SecureData;
  type TypeWebAuthorization = Raw.WebAuthorization;
  type TypeRecentMeUrl =
    | Raw.RecentMeUrlUnknown
    | Raw.RecentMeUrlUser
    | Raw.RecentMeUrlChat
    | Raw.RecentMeUrlChatInvite
    | Raw.RecentMeUrlStickerSet;
  type TypeChatInvite = Raw.ChatInviteAlready | Raw.ChatInvite | Raw.ChatInvitePeek;
  type TypeChannelAdminLogEvent = Raw.ChannelAdminLogEvent;
  type TypeChannelAdminLogEventAction =
    | Raw.ChannelAdminLogEventActionChangeTitle
    | Raw.ChannelAdminLogEventActionChangeAbout
    | Raw.ChannelAdminLogEventActionChangeUsername
    | Raw.ChannelAdminLogEventActionChangePhoto
    | Raw.ChannelAdminLogEventActionToggleInvites
    | Raw.ChannelAdminLogEventActionToggleSignatures
    | Raw.ChannelAdminLogEventActionUpdatePinned
    | Raw.ChannelAdminLogEventActionEditMessage
    | Raw.ChannelAdminLogEventActionDeleteMessage
    | Raw.ChannelAdminLogEventActionParticipantJoin
    | Raw.ChannelAdminLogEventActionParticipantLeave
    | Raw.ChannelAdminLogEventActionParticipantInvite
    | Raw.ChannelAdminLogEventActionParticipantToggleBan
    | Raw.ChannelAdminLogEventActionParticipantToggleAdmin
    | Raw.ChannelAdminLogEventActionChangeStickerSet
    | Raw.ChannelAdminLogEventActionTogglePreHistoryHidden
    | Raw.ChannelAdminLogEventActionDefaultBannedRights
    | Raw.ChannelAdminLogEventActionStopPoll
    | Raw.ChannelAdminLogEventActionChangeLinkedChat
    | Raw.ChannelAdminLogEventActionChangeLocation
    | Raw.ChannelAdminLogEventActionToggleSlowMode
    | Raw.ChannelAdminLogEventActionStartGroupCall
    | Raw.ChannelAdminLogEventActionDiscardGroupCall
    | Raw.ChannelAdminLogEventActionParticipantMute
    | Raw.ChannelAdminLogEventActionParticipantUnmute
    | Raw.ChannelAdminLogEventActionToggleGroupCallSetting
    | Raw.ChannelAdminLogEventActionParticipantJoinByInvite
    | Raw.ChannelAdminLogEventActionExportedInviteDelete
    | Raw.ChannelAdminLogEventActionExportedInviteRevoke
    | Raw.ChannelAdminLogEventActionExportedInviteEdit
    | Raw.ChannelAdminLogEventActionParticipantVolume
    | Raw.ChannelAdminLogEventActionChangeHistoryTTL
    | Raw.ChannelAdminLogEventActionParticipantJoinByRequest
    | Raw.ChannelAdminLogEventActionToggleNoForwards
    | Raw.ChannelAdminLogEventActionSendMessage
    | Raw.ChannelAdminLogEventActionChangeAvailableReactions
    | Raw.ChannelAdminLogEventActionChangeUsernames
    | Raw.ChannelAdminLogEventActionToggleForum
    | Raw.ChannelAdminLogEventActionCreateTopic
    | Raw.ChannelAdminLogEventActionEditTopic
    | Raw.ChannelAdminLogEventActionDeleteTopic
    | Raw.ChannelAdminLogEventActionPinTopic
    | Raw.ChannelAdminLogEventActionToggleAntiSpam
    | Raw.ChannelAdminLogEventActionChangePeerColor
    | Raw.ChannelAdminLogEventActionChangeProfilePeerColor
    | Raw.ChannelAdminLogEventActionChangeWallpaper
    | Raw.ChannelAdminLogEventActionChangeEmojiStatus
    | Raw.ChannelAdminLogEventActionChangeEmojiStickerSet;
  type TypeLangPackString =
    | Raw.LangPackString
    | Raw.LangPackStringPluralized
    | Raw.LangPackStringDeleted;
  type TypeCdnPublicKey = Raw.CdnPublicKey;
  type TypePhoneConnection = Raw.PhoneConnection | Raw.PhoneConnectionWebrtc;
  type TypePhoneCallProtocol = Raw.PhoneCallProtocol;
  type TypeUpdates =
    | Raw.UpdatesTooLong
    | Raw.UpdateShortMessage
    | Raw.UpdateShortChatMessage
    | Raw.UpdateShort
    | Raw.UpdatesCombined
    | Raw.Updates
    | Raw.UpdateShortSentMessage;
  type TypeShippingOption = Raw.ShippingOption;
  type TypePaymentSavedCredentials = Raw.PaymentSavedCredentialsCard;
  type TypePaymentFormMethod = Raw.PaymentFormMethod;
  type TypeLabeledPrice = Raw.LabeledPrice;
  type TypePageRelatedArticle = Raw.PageRelatedArticle;
  type TypePageListOrderedItem = Raw.PageListOrderedItemText | Raw.PageListOrderedItemBlocks;
  type TypePageTableRow = Raw.PageTableRow;
  type TypePageBlock =
    | Raw.PageBlockUnsupported
    | Raw.PageBlockTitle
    | Raw.PageBlockSubtitle
    | Raw.PageBlockAuthorDate
    | Raw.PageBlockHeader
    | Raw.PageBlockSubheader
    | Raw.PageBlockParagraph
    | Raw.PageBlockPreformatted
    | Raw.PageBlockFooter
    | Raw.PageBlockDivider
    | Raw.PageBlockAnchor
    | Raw.PageBlockList
    | Raw.PageBlockBlockquote
    | Raw.PageBlockPullquote
    | Raw.PageBlockPhoto
    | Raw.PageBlockVideo
    | Raw.PageBlockCover
    | Raw.PageBlockEmbed
    | Raw.PageBlockEmbedPost
    | Raw.PageBlockCollage
    | Raw.PageBlockSlideshow
    | Raw.PageBlockChannel
    | Raw.PageBlockAudio
    | Raw.PageBlockKicker
    | Raw.PageBlockTable
    | Raw.PageBlockOrderedList
    | Raw.PageBlockDetails
    | Raw.PageBlockRelatedArticles
    | Raw.PageBlockMap;
  type TypePageCaption = Raw.PageCaption;
  type TypePageListItem = Raw.PageListItemText | Raw.PageListItemBlocks;
  type TypeRichText =
    | Raw.TextEmpty
    | Raw.TextPlain
    | Raw.TextBold
    | Raw.TextItalic
    | Raw.TextUnderline
    | Raw.TextStrike
    | Raw.TextFixed
    | Raw.TextUrl
    | Raw.TextEmail
    | Raw.TextConcat
    | Raw.TextSubscript
    | Raw.TextSuperscript
    | Raw.TextMarked
    | Raw.TextPhone
    | Raw.TextImage
    | Raw.TextAnchor;
  type TypeHighScore = Raw.HighScore;
  type TypeStickerSetCovered =
    | Raw.StickerSetCovered
    | Raw.StickerSetMultiCovered
    | Raw.StickerSetFullCovered
    | Raw.StickerSetNoCovered;
  type TypeInputReplyTo = Raw.InputReplyToMessage | Raw.InputReplyToStory;
  type TypeTopPeerCategoryPeers = Raw.TopPeerCategoryPeers;
  type TypeTopPeer = Raw.TopPeer;
  type TypeTopPeerCategory =
    | Raw.TopPeerCategoryBotsPM
    | Raw.TopPeerCategoryBotsInline
    | Raw.TopPeerCategoryCorrespondents
    | Raw.TopPeerCategoryGroups
    | Raw.TopPeerCategoryChannels
    | Raw.TopPeerCategoryPhoneCalls
    | Raw.TopPeerCategoryForwardUsers
    | Raw.TopPeerCategoryForwardChats;
  type TypeBotInlineResult = Raw.BotInlineResult | Raw.BotInlineMediaResult;
  type TypeInlineBotWebView = Raw.InlineBotWebView;
  type TypeInlineBotSwitchPM = Raw.InlineBotSwitchPM;
  type TypeBotInlineMessage =
    | Raw.BotInlineMessageMediaAuto
    | Raw.BotInlineMessageText
    | Raw.BotInlineMessageMediaGeo
    | Raw.BotInlineMessageMediaVenue
    | Raw.BotInlineMessageMediaContact
    | Raw.BotInlineMessageMediaInvoice
    | Raw.BotInlineMessageMediaWebPage;
  type TypeInputBotInlineMessage =
    | Raw.InputBotInlineMessageMediaAuto
    | Raw.InputBotInlineMessageText
    | Raw.InputBotInlineMessageMediaGeo
    | Raw.InputBotInlineMessageMediaVenue
    | Raw.InputBotInlineMessageMediaContact
    | Raw.InputBotInlineMessageGame
    | Raw.InputBotInlineMessageMediaInvoice
    | Raw.InputBotInlineMessageMediaWebPage;
  type TypeMessageRange = Raw.MessageRange;
  type TypeKeyboardButtonRow = Raw.KeyboardButtonRow;
  type TypeKeyboardButton =
    | Raw.KeyboardButton
    | Raw.KeyboardButtonUrl
    | Raw.KeyboardButtonCallback
    | Raw.KeyboardButtonRequestPhone
    | Raw.KeyboardButtonRequestGeoLocation
    | Raw.KeyboardButtonSwitchInline
    | Raw.KeyboardButtonGame
    | Raw.KeyboardButtonBuy
    | Raw.KeyboardButtonUrlAuth
    | Raw.InputKeyboardButtonUrlAuth
    | Raw.KeyboardButtonRequestPoll
    | Raw.InputKeyboardButtonUserProfile
    | Raw.KeyboardButtonUserProfile
    | Raw.KeyboardButtonWebView
    | Raw.KeyboardButtonSimpleWebView
    | Raw.KeyboardButtonRequestPeer
    | Raw.InputKeyboardButtonRequestPeer;
  type TypeRequestPeerType =
    | Raw.RequestPeerTypeUser
    | Raw.RequestPeerTypeChat
    | Raw.RequestPeerTypeBroadcast;
  type TypeStickerKeyword = Raw.StickerKeyword;
  type TypeStickerPack = Raw.StickerPack;
  type TypeSecureSecretSettings = Raw.SecureSecretSettings;
  type TypeSecurePasswordKdfAlgo =
    | Raw.SecurePasswordKdfAlgoUnknown
    | Raw.SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000
    | Raw.SecurePasswordKdfAlgoSHA512;
  type TypePasswordKdfAlgo =
    | Raw.PasswordKdfAlgoUnknown
    | Raw.PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;
  type TypeAuthorization = Raw.Authorization;
  type TypeWebPageAttribute =
    | Raw.WebPageAttributeTheme
    | Raw.WebPageAttributeStory
    | Raw.WebPageAttributeStickerSet;
  type TypePage = Raw.Page;
  type TypeMaskCoords = Raw.MaskCoords;
  type TypeInputUser =
    | Raw.InputUserEmpty
    | Raw.InputUserSelf
    | Raw.InputUser
    | Raw.InputUserFromMessage;
  type TypeEncryptedFile = Raw.EncryptedFileEmpty | Raw.EncryptedFile;
  type TypeFileHash = Raw.FileHash;
  type TypeUpdate =
    | Raw.UpdateNewMessage
    | Raw.UpdateMessageID
    | Raw.UpdateDeleteMessages
    | Raw.UpdateUserTyping
    | Raw.UpdateChatUserTyping
    | Raw.UpdateChatParticipants
    | Raw.UpdateUserStatus
    | Raw.UpdateUserName
    | Raw.UpdateNewAuthorization
    | Raw.UpdateNewEncryptedMessage
    | Raw.UpdateEncryptedChatTyping
    | Raw.UpdateEncryption
    | Raw.UpdateEncryptedMessagesRead
    | Raw.UpdateChatParticipantAdd
    | Raw.UpdateChatParticipantDelete
    | Raw.UpdateDcOptions
    | Raw.UpdateNotifySettings
    | Raw.UpdateServiceNotification
    | Raw.UpdatePrivacy
    | Raw.UpdateUserPhone
    | Raw.UpdateReadHistoryInbox
    | Raw.UpdateReadHistoryOutbox
    | Raw.UpdateWebPage
    | Raw.UpdateReadMessagesContents
    | Raw.UpdateChannelTooLong
    | Raw.UpdateChannel
    | Raw.UpdateNewChannelMessage
    | Raw.UpdateReadChannelInbox
    | Raw.UpdateDeleteChannelMessages
    | Raw.UpdateChannelMessageViews
    | Raw.UpdateChatParticipantAdmin
    | Raw.UpdateNewStickerSet
    | Raw.UpdateStickerSetsOrder
    | Raw.UpdateStickerSets
    | Raw.UpdateSavedGifs
    | Raw.UpdateBotInlineQuery
    | Raw.UpdateBotInlineSend
    | Raw.UpdateEditChannelMessage
    | Raw.UpdateBotCallbackQuery
    | Raw.UpdateEditMessage
    | Raw.UpdateInlineBotCallbackQuery
    | Raw.UpdateReadChannelOutbox
    | Raw.UpdateDraftMessage
    | Raw.UpdateReadFeaturedStickers
    | Raw.UpdateRecentStickers
    | Raw.UpdateConfig
    | Raw.UpdatePtsChanged
    | Raw.UpdateChannelWebPage
    | Raw.UpdateDialogPinned
    | Raw.UpdatePinnedDialogs
    | Raw.UpdateBotWebhookJSON
    | Raw.UpdateBotWebhookJSONQuery
    | Raw.UpdateBotShippingQuery
    | Raw.UpdateBotPrecheckoutQuery
    | Raw.UpdatePhoneCall
    | Raw.UpdateLangPackTooLong
    | Raw.UpdateLangPack
    | Raw.UpdateFavedStickers
    | Raw.UpdateChannelReadMessagesContents
    | Raw.UpdateContactsReset
    | Raw.UpdateChannelAvailableMessages
    | Raw.UpdateDialogUnreadMark
    | Raw.UpdateMessagePoll
    | Raw.UpdateChatDefaultBannedRights
    | Raw.UpdateFolderPeers
    | Raw.UpdatePeerSettings
    | Raw.UpdatePeerLocated
    | Raw.UpdateNewScheduledMessage
    | Raw.UpdateDeleteScheduledMessages
    | Raw.UpdateTheme
    | Raw.UpdateGeoLiveViewed
    | Raw.UpdateLoginToken
    | Raw.UpdateMessagePollVote
    | Raw.UpdateDialogFilter
    | Raw.UpdateDialogFilterOrder
    | Raw.UpdateDialogFilters
    | Raw.UpdatePhoneCallSignalingData
    | Raw.UpdateChannelMessageForwards
    | Raw.UpdateReadChannelDiscussionInbox
    | Raw.UpdateReadChannelDiscussionOutbox
    | Raw.UpdatePeerBlocked
    | Raw.UpdateChannelUserTyping
    | Raw.UpdatePinnedMessages
    | Raw.UpdatePinnedChannelMessages
    | Raw.UpdateChat
    | Raw.UpdateGroupCallParticipants
    | Raw.UpdateGroupCall
    | Raw.UpdatePeerHistoryTTL
    | Raw.UpdateChatParticipant
    | Raw.UpdateChannelParticipant
    | Raw.UpdateBotStopped
    | Raw.UpdateGroupCallConnection
    | Raw.UpdateBotCommands
    | Raw.UpdatePendingJoinRequests
    | Raw.UpdateBotChatInviteRequester
    | Raw.UpdateMessageReactions
    | Raw.UpdateAttachMenuBots
    | Raw.UpdateWebViewResultSent
    | Raw.UpdateBotMenuButton
    | Raw.UpdateSavedRingtones
    | Raw.UpdateTranscribedAudio
    | Raw.UpdateReadFeaturedEmojiStickers
    | Raw.UpdateUserEmojiStatus
    | Raw.UpdateRecentEmojiStatuses
    | Raw.UpdateRecentReactions
    | Raw.UpdateMoveStickerSetToTop
    | Raw.UpdateMessageExtendedMedia
    | Raw.UpdateChannelPinnedTopic
    | Raw.UpdateChannelPinnedTopics
    | Raw.UpdateUser
    | Raw.UpdateAutoSaveSettings
    | Raw.UpdateStory
    | Raw.UpdateReadStories
    | Raw.UpdateStoryID
    | Raw.UpdateStoriesStealthMode
    | Raw.UpdateSentStoryReaction
    | Raw.UpdateBotChatBoost
    | Raw.UpdateChannelViewForumAsMessages
    | Raw.UpdatePeerWallpaper
    | Raw.UpdateBotMessageReaction
    | Raw.UpdateBotMessageReactions
    | Raw.UpdateSavedDialogPinned
    | Raw.UpdatePinnedSavedDialogs
    | Raw.UpdateSavedReactionTags
    | Raw.UpdateSmsJob
    | Raw.UpdateQuickReplies
    | Raw.UpdateNewQuickReply
    | Raw.UpdateDeleteQuickReply
    | Raw.UpdateQuickReplyMessage
    | Raw.UpdateDeleteQuickReplyMessages
    | Raw.UpdateBotBusinessConnect
    | Raw.UpdateBotNewBusinessMessage
    | Raw.UpdateBotEditBusinessMessage
    | Raw.UpdateBotDeleteBusinessMessage
    | Raw.UpdateNewStoryReaction
    | UpdateSecretChatMessage;
  type TypeBotBusinessConnection = Raw.BotBusinessConnection;
  type TypeQuickReply = Raw.QuickReply;
  type TypeReactionCount = Raw.ReactionCount;
  type TypeBoost = Raw.Boost;
  type TypeReaction = Raw.ReactionEmpty | Raw.ReactionEmoji | Raw.ReactionCustomEmoji;
  type TypeStoriesStealthMode = Raw.StoriesStealthMode;
  type TypeBotMenuButton = Raw.BotMenuButtonDefault | Raw.BotMenuButtonCommands | Raw.BotMenuButton;
  type TypeBotCommand = Raw.BotCommand;
  type TypeChannelParticipant =
    | Raw.ChannelParticipant
    | Raw.ChannelParticipantSelf
    | Raw.ChannelParticipantCreator
    | Raw.ChannelParticipantAdmin
    | Raw.ChannelParticipantBanned
    | Raw.ChannelParticipantLeft;
  type TypeGroupCall = Raw.GroupCallDiscarded | Raw.GroupCall;
  type TypeGroupCallParticipant = Raw.GroupCallParticipant;
  type TypeDialogFilter = Raw.DialogFilter | Raw.DialogFilterDefault | Raw.DialogFilterChatlist;
  type TypeTheme = Raw.Theme;
  type TypePeerLocated = Raw.PeerLocated | Raw.PeerSelfLocated;
  type TypeFolderPeer = Raw.FolderPeer;
  type TypeLangPackDifference = Raw.LangPackDifference;
  type TypePhoneCall =
    | Raw.PhoneCallEmpty
    | Raw.PhoneCallWaiting
    | Raw.PhoneCallRequested
    | Raw.PhoneCallAccepted
    | Raw.PhoneCall
    | Raw.PhoneCallDiscarded;
  type TypePostAddress = Raw.PostAddress;
  type TypeDialogPeer = Raw.DialogPeer | Raw.DialogPeerFolder;
  type TypeInputBotInlineMessageID = Raw.InputBotInlineMessageID | Raw.InputBotInlineMessageID64;
  type TypeInlineQueryPeerType =
    | Raw.InlineQueryPeerTypeSameBotPM
    | Raw.InlineQueryPeerTypePM
    | Raw.InlineQueryPeerTypeChat
    | Raw.InlineQueryPeerTypeMegagroup
    | Raw.InlineQueryPeerTypeBroadcast
    | Raw.InlineQueryPeerTypeBotPM;
  type TypePrivacyRule =
    | Raw.PrivacyValueAllowContacts
    | Raw.PrivacyValueAllowAll
    | Raw.PrivacyValueAllowUsers
    | Raw.PrivacyValueDisallowContacts
    | Raw.PrivacyValueDisallowAll
    | Raw.PrivacyValueDisallowUsers
    | Raw.PrivacyValueAllowChatParticipants
    | Raw.PrivacyValueDisallowChatParticipants
    | Raw.PrivacyValueAllowCloseFriends
    | Raw.PrivacyValueAllowPremium;
  type TypePrivacyKey =
    | Raw.PrivacyKeyStatusTimestamp
    | Raw.PrivacyKeyChatInvite
    | Raw.PrivacyKeyPhoneCall
    | Raw.PrivacyKeyPhoneP2P
    | Raw.PrivacyKeyForwards
    | Raw.PrivacyKeyProfilePhoto
    | Raw.PrivacyKeyPhoneNumber
    | Raw.PrivacyKeyAddedByPhone
    | Raw.PrivacyKeyVoiceMessages
    | Raw.PrivacyKeyAbout
    | Raw.PrivacyKeyBirthday;
  type TypeNotifyPeer =
    | Raw.NotifyPeer
    | Raw.NotifyUsers
    | Raw.NotifyChats
    | Raw.NotifyBroadcasts
    | Raw.NotifyForumTopic;
  type TypeDcOption = Raw.DcOption;
  type TypeEncryptedChat =
    | Raw.EncryptedChatEmpty
    | Raw.EncryptedChatWaiting
    | Raw.EncryptedChatRequested
    | Raw.EncryptedChat
    | Raw.EncryptedChatDiscarded;
  type TypeEncryptedMessage = Raw.EncryptedMessage | Raw.EncryptedMessageService;
  type TypeSendMessageAction =
    | Raw.SendMessageTypingAction
    | Raw.SendMessageCancelAction
    | Raw.SendMessageRecordVideoAction
    | Raw.SendMessageUploadVideoAction
    | Raw.SendMessageRecordAudioAction
    | Raw.SendMessageUploadAudioAction
    | Raw.SendMessageUploadPhotoAction
    | Raw.SendMessageUploadDocumentAction
    | Raw.SendMessageGeoLocationAction
    | Raw.SendMessageChooseContactAction
    | Raw.SendMessageGamePlayAction
    | Raw.SendMessageRecordRoundAction
    | Raw.SendMessageUploadRoundAction
    | Raw.SpeakingInGroupCallAction
    | Raw.SendMessageHistoryImportAction
    | Raw.SendMessageChooseStickerAction
    | Raw.SendMessageEmojiInteraction
    | Raw.SendMessageEmojiInteractionSeen
    | Raw.SendMessageUploadVideoAction17
    | Raw.SendMessageUploadAudioAction17
    | Raw.SendMessageUploadPhotoAction17
    | Raw.SendMessageUploadDocumentAction17
    | Raw.SendMessageUploadRoundAction66;
  type TypeChatFull = Raw.ChatFull | Raw.ChannelFull;
  type TypeForumTopic = Raw.ForumTopicDeleted | Raw.ForumTopic;
  type TypeMessage = Raw.MessageEmpty | Raw.Message | Raw.MessageService;
  type TypeDialog = Raw.Dialog | Raw.DialogFolder;
  type TypeChat = Raw.ChatEmpty | Raw.Chat | Raw.ChatForbidden | Raw.Channel | Raw.ChannelForbidden;
  type TypePeerBlocked = Raw.PeerBlocked;
  type TypePopularContact = Raw.PopularContact;
  type TypeImportedContact = Raw.ImportedContact;
  type TypeContact = Raw.Contact;
  type TypeBirthday = Raw.Birthday;
  type TypeBusinessIntro = Raw.BusinessIntro;
  type TypeBusinessAwayMessage = Raw.BusinessAwayMessage;
  type TypeBusinessGreetingMessage = Raw.BusinessGreetingMessage;
  type TypeBusinessLocation = Raw.BusinessLocation;
  type TypeBusinessWorkHours = Raw.BusinessWorkHours;
  type TypePremiumGiftOption = Raw.PremiumGiftOption;
  type TypePeerSettings = Raw.PeerSettings;
  type TypeWallPaperSettings = Raw.WallPaperSettings;
  type TypeNotificationSound =
    | Raw.NotificationSoundDefault
    | Raw.NotificationSoundNone
    | Raw.NotificationSoundLocal
    | Raw.NotificationSoundRingtone;
  type TypeUser = Raw.UserEmpty | Raw.User;
  type TypePhotoSize =
    | Raw.PhotoSizeEmpty
    | Raw.PhotoSize
    | Raw.PhotoCachedSize
    | Raw.PhotoStrippedSize
    | Raw.PhotoSizeProgressive
    | Raw.PhotoPathSize
    | Raw.PhotoSize23
    | Raw.PhotoCachedSize23;
  type TypeFolder = Raw.Folder;
  type TypeDraftMessage = Raw.DraftMessageEmpty | Raw.DraftMessage;
  type TypeRequestedPeer = Raw.RequestedPeerUser | Raw.RequestedPeerChat | Raw.RequestedPeerChannel;
  type TypeSecureValueType =
    | Raw.SecureValueTypePersonalDetails
    | Raw.SecureValueTypePassport
    | Raw.SecureValueTypeDriverLicense
    | Raw.SecureValueTypeIdentityCard
    | Raw.SecureValueTypeInternalPassport
    | Raw.SecureValueTypeAddress
    | Raw.SecureValueTypeUtilityBill
    | Raw.SecureValueTypeBankStatement
    | Raw.SecureValueTypeRentalAgreement
    | Raw.SecureValueTypePassportRegistration
    | Raw.SecureValueTypeTemporaryRegistration
    | Raw.SecureValueTypePhone
    | Raw.SecureValueTypeEmail;
  type TypeSecureCredentialsEncrypted = Raw.SecureCredentialsEncrypted;
  type TypeSecureValue = Raw.SecureValue;
  type TypeBotApp = Raw.BotAppNotModified | Raw.BotApp;
  type TypePhoneCallDiscardReason =
    | Raw.PhoneCallDiscardReasonMissed
    | Raw.PhoneCallDiscardReasonDisconnect
    | Raw.PhoneCallDiscardReasonHangup
    | Raw.PhoneCallDiscardReasonBusy;
  type TypePaymentCharge = Raw.PaymentCharge;
  type TypePaymentRequestedInfo = Raw.PaymentRequestedInfo;
  type TypeStoryItem = Raw.StoryItemDeleted | Raw.StoryItemSkipped | Raw.StoryItem;
  type TypePollResults = Raw.PollResults;
  type TypeMessageExtendedMedia = Raw.MessageExtendedMediaPreview | Raw.MessageExtendedMedia;
  type TypeWebDocument = Raw.WebDocument | Raw.WebDocumentNoProxy;
  type TypeGame = Raw.Game;
  type TypeWebPage = Raw.WebPageEmpty | Raw.WebPagePending | Raw.WebPage | Raw.WebPageNotModified;
  type TypeDocument = Raw.DocumentEmpty | Raw.Document;
  type TypeGeoPoint = Raw.GeoPointEmpty | Raw.GeoPoint;
  type TypeMessageAction =
    | Raw.MessageActionEmpty
    | Raw.MessageActionChatCreate
    | Raw.MessageActionChatEditTitle
    | Raw.MessageActionChatEditPhoto
    | Raw.MessageActionChatDeletePhoto
    | Raw.MessageActionChatAddUser
    | Raw.MessageActionChatDeleteUser
    | Raw.MessageActionChatJoinedByLink
    | Raw.MessageActionChannelCreate
    | Raw.MessageActionChatMigrateTo
    | Raw.MessageActionChannelMigrateFrom
    | Raw.MessageActionPinMessage
    | Raw.MessageActionHistoryClear
    | Raw.MessageActionGameScore
    | Raw.MessageActionPaymentSentMe
    | Raw.MessageActionPaymentSent
    | Raw.MessageActionPhoneCall
    | Raw.MessageActionScreenshotTaken
    | Raw.MessageActionCustomAction
    | Raw.MessageActionBotAllowed
    | Raw.MessageActionSecureValuesSentMe
    | Raw.MessageActionSecureValuesSent
    | Raw.MessageActionContactSignUp
    | Raw.MessageActionGeoProximityReached
    | Raw.MessageActionGroupCall
    | Raw.MessageActionInviteToGroupCall
    | Raw.MessageActionSetMessagesTTL
    | Raw.MessageActionGroupCallScheduled
    | Raw.MessageActionSetChatTheme
    | Raw.MessageActionChatJoinedByRequest
    | Raw.MessageActionWebViewDataSentMe
    | Raw.MessageActionWebViewDataSent
    | Raw.MessageActionGiftPremium
    | Raw.MessageActionTopicCreate
    | Raw.MessageActionTopicEdit
    | Raw.MessageActionSuggestProfilePhoto
    | Raw.MessageActionRequestedPeer
    | Raw.MessageActionSetChatWallPaper
    | Raw.MessageActionGiftCode
    | Raw.MessageActionGiveawayLaunch
    | Raw.MessageActionGiveawayResults
    | Raw.MessageActionBoostApply
    | Raw.MessageActionRequestedPeerSentMe;
  type TypeMessageReactions = Raw.MessageReactions;
  type TypeMessageReplies = Raw.MessageReplies;
  type TypeReplyMarkup =
    | Raw.ReplyKeyboardHide
    | Raw.ReplyKeyboardForceReply
    | Raw.ReplyKeyboardMarkup
    | Raw.ReplyInlineMarkup;
  type TypeMessageMedia =
    | Raw.MessageMediaEmpty
    | Raw.MessageMediaPhoto
    | Raw.MessageMediaGeo
    | Raw.MessageMediaContact
    | Raw.MessageMediaUnsupported
    | Raw.MessageMediaDocument
    | Raw.MessageMediaWebPage
    | Raw.MessageMediaVenue
    | Raw.MessageMediaGame
    | Raw.MessageMediaInvoice
    | Raw.MessageMediaGeoLive
    | Raw.MessageMediaPoll
    | Raw.MessageMediaDice
    | Raw.MessageMediaStory
    | Raw.MessageMediaGiveaway
    | Raw.MessageMediaGiveawayResults;
  type TypeMessageReplyHeader = Raw.MessageReplyHeader | Raw.MessageReplyStoryHeader;
  type TypeMessageFwdHeader = Raw.MessageFwdHeader;
  type TypeChatParticipant =
    | Raw.ChatParticipant
    | Raw.ChatParticipantCreator
    | Raw.ChatParticipantAdmin;
  type TypeWallPaper = Raw.WallPaper | Raw.WallPaperNoFile;
  type TypePeerStories = Raw.PeerStories;
  type TypeChannelLocation = Raw.ChannelLocationEmpty | Raw.ChannelLocation;
  type TypeStickerSet = Raw.StickerSet;
  type TypeChatReactions = Raw.ChatReactionsNone | Raw.ChatReactionsAll | Raw.ChatReactionsSome;
  type TypePeer = Raw.PeerUser | Raw.PeerChat | Raw.PeerChannel;
  type TypeBotInfo = Raw.BotInfo;
  type TypeExportedChatInvite = Raw.ChatInviteExported | Raw.ChatInvitePublicJoinRequests;
  type TypePeerNotifySettings = Raw.PeerNotifySettings;
  type TypePhoto = Raw.PhotoEmpty | Raw.Photo;
  type TypeChatParticipants = Raw.ChatParticipantsForbidden | Raw.ChatParticipants;
  type TypeChatBannedRights = Raw.ChatBannedRights;
  type TypeChatAdminRights = Raw.ChatAdminRights;
  type TypeInputChannel = Raw.InputChannelEmpty | Raw.InputChannel | Raw.InputChannelFromMessage;
  type TypeChatPhoto = Raw.ChatPhotoEmpty | Raw.ChatPhoto;
  type TypePeerColor = Raw.PeerColor;
  type TypeUsername = Raw.Username;
  type TypeEmojiStatus = Raw.EmojiStatusEmpty | Raw.EmojiStatus | Raw.EmojiStatusUntil;
  type TypeRestrictionReason = Raw.RestrictionReason;
  type TypeUserStatus =
    | Raw.UserStatusEmpty
    | Raw.UserStatusOnline
    | Raw.UserStatusOffline
    | Raw.UserStatusRecently
    | Raw.UserStatusLastWeek
    | Raw.UserStatusLastMonth;
  type TypeUserProfilePhoto = Raw.UserProfilePhotoEmpty | Raw.UserProfilePhoto;
  type TypeInputGroupCall = Raw.InputGroupCall;
  type TypeInputStickerSet =
    | Raw.InputStickerSetEmpty
    | Raw.InputStickerSetID
    | Raw.InputStickerSetShortName
    | Raw.InputStickerSetAnimatedEmoji
    | Raw.InputStickerSetDice
    | Raw.InputStickerSetAnimatedEmojiAnimations
    | Raw.InputStickerSetPremiumGifts
    | Raw.InputStickerSetEmojiGenericAnimations
    | Raw.InputStickerSetEmojiDefaultStatuses
    | Raw.InputStickerSetEmojiDefaultTopicIcons
    | Raw.InputStickerSetEmojiChannelDefaultStatuses;
  type TypeVideoSize = Raw.VideoSize | Raw.VideoSizeEmojiMarkup | Raw.VideoSizeStickerMarkup;
  type TypeMessageEntity =
    | Raw.MessageEntityUnknown
    | Raw.MessageEntityMention
    | Raw.MessageEntityHashtag
    | Raw.MessageEntityBotCommand
    | Raw.MessageEntityUrl
    | Raw.MessageEntityEmail
    | Raw.MessageEntityBold
    | Raw.MessageEntityItalic
    | Raw.MessageEntityCode
    | Raw.MessageEntityPre
    | Raw.MessageEntityTextUrl
    | Raw.MessageEntityMentionName
    | Raw.InputMessageEntityMentionName
    | Raw.MessageEntityPhone
    | Raw.MessageEntityCashtag
    | Raw.MessageEntityUnderline
    | Raw.MessageEntityStrike
    | Raw.MessageEntityBankCard
    | Raw.MessageEntitySpoiler
    | Raw.MessageEntityCustomEmoji
    | Raw.MessageEntityBlockquote;
  type TypePoll = Raw.Poll;
  type TypeInputMedia =
    | Raw.InputMediaEmpty
    | Raw.InputMediaUploadedPhoto
    | Raw.InputMediaPhoto
    | Raw.InputMediaGeoPoint
    | Raw.InputMediaContact
    | Raw.InputMediaUploadedDocument
    | Raw.InputMediaDocument
    | Raw.InputMediaVenue
    | Raw.InputMediaPhotoExternal
    | Raw.InputMediaDocumentExternal
    | Raw.InputMediaGame
    | Raw.InputMediaInvoice
    | Raw.InputMediaGeoLive
    | Raw.InputMediaPoll
    | Raw.InputMediaDice
    | Raw.InputMediaStory
    | Raw.InputMediaWebPage;
  type TypeDataJSON = Raw.DataJSON;
  type TypeInvoice = Raw.Invoice;
  type TypeInputWebDocument = Raw.InputWebDocument;
  type TypeInputGame = Raw.InputGameID | Raw.InputGameShortName;
  type TypeDocumentAttribute =
    | Raw.DocumentAttributeImageSize
    | Raw.DocumentAttributeAnimated
    | Raw.DocumentAttributeSticker
    | Raw.DocumentAttributeVideo
    | Raw.DocumentAttributeAudio
    | Raw.DocumentAttributeFilename
    | Raw.DocumentAttributeHasStickers
    | Raw.DocumentAttributeCustomEmoji
    | Raw.DocumentAttributeSticker23
    | Raw.DocumentAttributeVideo23
    | Raw.DocumentAttributeAudio23
    | Raw.DocumentAttributeSticker45
    | Raw.DocumentAttributeAudio45
    | Raw.DocumentAttributeVideo66;
  type TypeInputGeoPoint = Raw.InputGeoPointEmpty | Raw.InputGeoPoint;
  type TypeInputPhoto = Raw.InputPhotoEmpty | Raw.InputPhoto;
  type TypeInputDocument = Raw.InputDocumentEmpty | Raw.InputDocument;
  type TypeInputFile = Raw.InputFile | Raw.InputFileBig;
  type TypeInputPeer =
    | Raw.InputPeerEmpty
    | Raw.InputPeerSelf
    | Raw.InputPeerChat
    | Raw.InputPeerUser
    | Raw.InputPeerChannel
    | Raw.InputPeerUserFromMessage
    | Raw.InputPeerChannelFromMessage;
  type TypeDestroySessionRes = Raw.DestroySessionOk | Raw.DestroySessionNone;
  type TypePong = Raw.Pong;
  type TypeFutureSalts = Raw.FutureSalts;
  type TypeRpcDropAnswer =
    | Raw.RpcAnswerUnknown
    | Raw.RpcAnswerDroppedRunning
    | Raw.RpcAnswerDropped;
  type TypeAccessPointRule = Raw.AccessPointRule;
  type TypeIpPort = Raw.IpPort | Raw.IpPortSecret;
  type TypeFutureSalt = Raw.FutureSalt;
  type TypeDestroyAuthKeyRes =
    | Raw.DestroyAuthKeyOk
    | Raw.DestroyAuthKeyNone
    | Raw.DestroyAuthKeyFail;
  type TypeSetClientDhParamsAnswer = Raw.DhGenOk | Raw.DhGenRetry | Raw.DhGenFail;
  type TypeServerDhParams = Raw.ServerDhParamsFail | Raw.ServerDhParamsOk;
  type TypeResPQ = Raw.ResPQ;
  class ResPQ extends TLObject {
    nonce: int128;
    serverNonce: int128;
    pq: bytes;
    serverPublicKeyFingerprints: Vector<long>;
    constructor(params: {
      nonce: int128;
      serverNonce: int128;
      pq: bytes;
      serverPublicKeyFingerprints: Vector<long>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ResPQ>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PQInnerData extends TLObject {
    pq: bytes;
    p: bytes;
    q: bytes;
    nonce: int128;
    serverNonce: int128;
    newNonce: int256;
    constructor(params: {
      pq: bytes;
      p: bytes;
      q: bytes;
      nonce: int128;
      serverNonce: int128;
      newNonce: int256;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PQInnerData>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PQInnerDataDc extends TLObject {
    pq: bytes;
    p: bytes;
    q: bytes;
    nonce: int128;
    serverNonce: int128;
    newNonce: int256;
    dc: int;
    constructor(params: {
      pq: bytes;
      p: bytes;
      q: bytes;
      nonce: int128;
      serverNonce: int128;
      newNonce: int256;
      dc: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PQInnerDataDc>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PQInnerDataTemp extends TLObject {
    pq: bytes;
    p: bytes;
    q: bytes;
    nonce: int128;
    serverNonce: int128;
    newNonce: int256;
    expiresIn: int;
    constructor(params: {
      pq: bytes;
      p: bytes;
      q: bytes;
      nonce: int128;
      serverNonce: int128;
      newNonce: int256;
      expiresIn: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PQInnerDataTemp>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PQInnerDataTempDc extends TLObject {
    pq: bytes;
    p: bytes;
    q: bytes;
    nonce: int128;
    serverNonce: int128;
    newNonce: int256;
    dc: int;
    expiresIn: int;
    constructor(params: {
      pq: bytes;
      p: bytes;
      q: bytes;
      nonce: int128;
      serverNonce: int128;
      newNonce: int256;
      dc: int;
      expiresIn: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PQInnerDataTempDc>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BindAuthKeyInner extends TLObject {
    nonce: long;
    tempAuthKeyId: long;
    permAuthKeyId: long;
    tempSessionId: long;
    expiresAt: int;
    constructor(params: {
      nonce: long;
      tempAuthKeyId: long;
      permAuthKeyId: long;
      tempSessionId: long;
      expiresAt: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BindAuthKeyInner>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ServerDhParamsFail extends TLObject {
    nonce: int128;
    serverNonce: int128;
    newNonceHash: int128;
    constructor(params: { nonce: int128; serverNonce: int128; newNonceHash: int128 });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ServerDhParamsFail>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ServerDhParamsOk extends TLObject {
    nonce: int128;
    serverNonce: int128;
    encryptedAnswer: bytes;
    constructor(params: { nonce: int128; serverNonce: int128; encryptedAnswer: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ServerDhParamsOk>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ServerDhInnerData extends TLObject {
    nonce: int128;
    serverNonce: int128;
    g: int;
    dhPrime: bytes;
    gA: bytes;
    serverTime: int;
    constructor(params: {
      nonce: int128;
      serverNonce: int128;
      g: int;
      dhPrime: bytes;
      gA: bytes;
      serverTime: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ServerDhInnerData>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ClientDhInnerData extends TLObject {
    nonce: int128;
    serverNonce: int128;
    retryId: long;
    gB: bytes;
    constructor(params: { nonce: int128; serverNonce: int128; retryId: long; gB: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ClientDhInnerData>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DhGenOk extends TLObject {
    nonce: int128;
    serverNonce: int128;
    newNonceHash1: int128;
    constructor(params: { nonce: int128; serverNonce: int128; newNonceHash1: int128 });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DhGenOk>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DhGenRetry extends TLObject {
    nonce: int128;
    serverNonce: int128;
    newNonceHash2: int128;
    constructor(params: { nonce: int128; serverNonce: int128; newNonceHash2: int128 });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DhGenRetry>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DhGenFail extends TLObject {
    nonce: int128;
    serverNonce: int128;
    newNonceHash3: int128;
    constructor(params: { nonce: int128; serverNonce: int128; newNonceHash3: int128 });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DhGenFail>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DestroyAuthKeyOk extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DestroyAuthKeyOk>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DestroyAuthKeyNone extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DestroyAuthKeyNone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DestroyAuthKeyFail extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DestroyAuthKeyFail>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReqPq extends TLObject {
    __response__: Raw.TypeResPQ;
    nonce: int128;
    constructor(params: { nonce: int128 });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReqPq>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReqPqMulti extends TLObject {
    __response__: Raw.TypeResPQ;
    nonce: int128;
    constructor(params: { nonce: int128 });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReqPqMulti>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReqDhParams extends TLObject {
    __response__: Raw.TypeServerDhParams;
    nonce: int128;
    serverNonce: int128;
    p: bytes;
    q: bytes;
    publicKeyFingerprint: long;
    encryptedData: bytes;
    constructor(params: {
      nonce: int128;
      serverNonce: int128;
      p: bytes;
      q: bytes;
      publicKeyFingerprint: long;
      encryptedData: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReqDhParams>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SetClientDhParams extends TLObject {
    __response__: Raw.TypeSetClientDhParamsAnswer;
    nonce: int128;
    serverNonce: int128;
    encryptedData: bytes;
    constructor(params: { nonce: int128; serverNonce: int128; encryptedData: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SetClientDhParams>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DestroyAuthKey extends TLObject {
    __response__: Raw.TypeDestroyAuthKeyRes;
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DestroyAuthKey>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MsgsAck extends TLObject {
    msgIds: Vector<long>;
    constructor(params: { msgIds: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MsgsAck>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BadMsgNotification extends TLObject {
    badMsgId: long;
    badMsgSeqno: int;
    errorCode: int;
    constructor(params: { badMsgId: long; badMsgSeqno: int; errorCode: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BadMsgNotification>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BadServerSalt extends TLObject {
    badMsgId: long;
    badMsgSeqno: int;
    errorCode: int;
    newServerSalt: long;
    constructor(params: { badMsgId: long; badMsgSeqno: int; errorCode: int; newServerSalt: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BadServerSalt>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MsgsStateReq extends TLObject {
    msgIds: Vector<long>;
    constructor(params: { msgIds: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MsgsStateReq>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MsgsStateInfo extends TLObject {
    reqMsgId: long;
    info: string;
    constructor(params: { reqMsgId: long; info: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MsgsStateInfo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MsgsAllInfo extends TLObject {
    msgIds: Vector<long>;
    info: string;
    constructor(params: { msgIds: Vector<long>; info: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MsgsAllInfo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MsgDetailedInfo extends TLObject {
    msgId: long;
    answerMsgId: long;
    bytes: int;
    status: int;
    constructor(params: { msgId: long; answerMsgId: long; bytes: int; status: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MsgDetailedInfo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MsgNewDetailedInfo extends TLObject {
    answerMsgId: long;
    bytes: int;
    status: int;
    constructor(params: { answerMsgId: long; bytes: int; status: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MsgNewDetailedInfo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MsgResendReq extends TLObject {
    msgIds: Vector<long>;
    constructor(params: { msgIds: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MsgResendReq>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RpcResult extends TLObject {
    reqMsgId: long;
    result: any;
    constructor(params: { reqMsgId: long; result: any });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RpcResult>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RpcError extends TLObject {
    errorCode: int;
    errorMessage: string;
    constructor(params: { errorCode: int; errorMessage: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RpcError>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RpcAnswerUnknown extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RpcAnswerUnknown>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RpcAnswerDroppedRunning extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RpcAnswerDroppedRunning>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RpcAnswerDropped extends TLObject {
    msgId: long;
    seqNo: int;
    bytes: int;
    constructor(params: { msgId: long; seqNo: int; bytes: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RpcAnswerDropped>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class FutureSalt extends TLObject {
    validSince: int;
    validUntil: int;
    salt: long;
    constructor(params: { validSince: int; validUntil: int; salt: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.FutureSalt>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class FutureSalts extends TLObject {
    reqMsgId: long;
    now: int;
    salts: Vector<Raw.TypeFutureSalt>;
    constructor(params: { reqMsgId: long; now: int; salts: Vector<Raw.TypeFutureSalt> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.FutureSalts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Pong extends TLObject {
    msgId: long;
    pingId: long;
    constructor(params: { msgId: long; pingId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Pong>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DestroySessionOk extends TLObject {
    sessionId: long;
    constructor(params: { sessionId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DestroySessionOk>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DestroySessionNone extends TLObject {
    sessionId: long;
    constructor(params: { sessionId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DestroySessionNone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class NewSessionCreated extends TLObject {
    firstMsgId: long;
    uniqueId: long;
    serverSalt: long;
    constructor(params: { firstMsgId: long; uniqueId: long; serverSalt: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.NewSessionCreated>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class HttpWait extends TLObject {
    maxDelay: int;
    waitAfter: int;
    maxWait: int;
    constructor(params: { maxDelay: int; waitAfter: int; maxWait: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.HttpWait>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class IpPort extends TLObject {
    ipv4: int;
    port: int;
    constructor(params: { ipv4: int; port: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.IpPort>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class IpPortSecret extends TLObject {
    ipv4: int;
    port: int;
    secret: bytes;
    constructor(params: { ipv4: int; port: int; secret: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.IpPortSecret>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AccessPointRule extends TLObject {
    phonePrefixRules: string;
    dcId: int;
    ips: Vector<Raw.TypeIpPort>;
    constructor(params: { phonePrefixRules: string; dcId: int; ips: Vector<Raw.TypeIpPort> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AccessPointRule>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RpcDropAnswer extends TLObject {
    __response__: Raw.TypeRpcDropAnswer;
    reqMsgId: long;
    constructor(params: { reqMsgId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RpcDropAnswer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class GetFutureSalts extends TLObject {
    __response__: Raw.TypeFutureSalts;
    num: int;
    constructor(params: { num: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.GetFutureSalts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Ping extends TLObject {
    __response__: Raw.TypePong;
    pingId: long;
    constructor(params: { pingId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Ping>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PingDelayDisconnect extends TLObject {
    __response__: Raw.TypePong;
    pingId: long;
    disconnectDelay: int;
    constructor(params: { pingId: long; disconnectDelay: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PingDelayDisconnect>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DestroySession extends TLObject {
    __response__: Raw.TypeDestroySessionRes;
    sessionId: long;
    constructor(params: { sessionId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DestroySession>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPeerEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPeerEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPeerSelf extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPeerSelf>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPeerChat extends TLObject {
    chatId: long;
    constructor(params: { chatId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPeerChat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPeerUser extends TLObject {
    userId: long;
    accessHash: long;
    constructor(params: { userId: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPeerUser>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPeerChannel extends TLObject {
    channelId: long;
    accessHash: long;
    constructor(params: { channelId: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPeerChannel>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPeerUserFromMessage extends TLObject {
    peer: Raw.TypeInputPeer;
    msgId: int;
    userId: long;
    constructor(params: { peer: Raw.TypeInputPeer; msgId: int; userId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPeerUserFromMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPeerChannelFromMessage extends TLObject {
    peer: Raw.TypeInputPeer;
    msgId: int;
    channelId: long;
    constructor(params: { peer: Raw.TypeInputPeer; msgId: int; channelId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPeerChannelFromMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputUserEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputUserEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputUserSelf extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputUserSelf>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputUser extends TLObject {
    userId: long;
    accessHash: long;
    constructor(params: { userId: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputUser>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputUserFromMessage extends TLObject {
    peer: Raw.TypeInputPeer;
    msgId: int;
    userId: long;
    constructor(params: { peer: Raw.TypeInputPeer; msgId: int; userId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputUserFromMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPhoneContact extends TLObject {
    clientId: long;
    phone: string;
    firstName: string;
    lastName: string;
    constructor(params: { clientId: long; phone: string; firstName: string; lastName: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPhoneContact>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputFile extends TLObject {
    id: long;
    parts: int;
    name: string;
    md5Checksum: string;
    constructor(params: { id: long; parts: int; name: string; md5Checksum: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputFile>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputFileBig extends TLObject {
    id: long;
    parts: int;
    name: string;
    constructor(params: { id: long; parts: int; name: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputFileBig>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaUploadedPhoto extends TLObject {
    spoiler?: boolean;
    file: Raw.TypeInputFile;
    stickers?: Vector<Raw.TypeInputDocument>;
    ttlSeconds?: int;
    constructor(params: {
      spoiler?: boolean;
      file: Raw.TypeInputFile;
      stickers?: Vector<Raw.TypeInputDocument>;
      ttlSeconds?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaUploadedPhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaPhoto extends TLObject {
    spoiler?: boolean;
    id: Raw.TypeInputPhoto;
    ttlSeconds?: int;
    constructor(params: { spoiler?: boolean; id: Raw.TypeInputPhoto; ttlSeconds?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaPhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaGeoPoint extends TLObject {
    geoPoint: Raw.TypeInputGeoPoint;
    constructor(params: { geoPoint: Raw.TypeInputGeoPoint });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaGeoPoint>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaContact extends TLObject {
    phoneNumber: string;
    firstName: string;
    lastName: string;
    vcard: string;
    constructor(params: {
      phoneNumber: string;
      firstName: string;
      lastName: string;
      vcard: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaContact>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaUploadedDocument extends TLObject {
    nosoundVideo?: boolean;
    forceFile?: boolean;
    spoiler?: boolean;
    file: Raw.TypeInputFile;
    thumb?: Raw.TypeInputFile;
    mimeType: string;
    attributes: Vector<Raw.TypeDocumentAttribute>;
    stickers?: Vector<Raw.TypeInputDocument>;
    ttlSeconds?: int;
    constructor(params: {
      nosoundVideo?: boolean;
      forceFile?: boolean;
      spoiler?: boolean;
      file: Raw.TypeInputFile;
      thumb?: Raw.TypeInputFile;
      mimeType: string;
      attributes: Vector<Raw.TypeDocumentAttribute>;
      stickers?: Vector<Raw.TypeInputDocument>;
      ttlSeconds?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaUploadedDocument>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaDocument extends TLObject {
    spoiler?: boolean;
    id: Raw.TypeInputDocument;
    ttlSeconds?: int;
    query?: string;
    constructor(params: {
      spoiler?: boolean;
      id: Raw.TypeInputDocument;
      ttlSeconds?: int;
      query?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaDocument>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaVenue extends TLObject {
    geoPoint: Raw.TypeInputGeoPoint;
    title: string;
    address: string;
    provider: string;
    venueId: string;
    venueType: string;
    constructor(params: {
      geoPoint: Raw.TypeInputGeoPoint;
      title: string;
      address: string;
      provider: string;
      venueId: string;
      venueType: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaVenue>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaPhotoExternal extends TLObject {
    spoiler?: boolean;
    url: string;
    ttlSeconds?: int;
    constructor(params: { spoiler?: boolean; url: string; ttlSeconds?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaPhotoExternal>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaDocumentExternal extends TLObject {
    spoiler?: boolean;
    url: string;
    ttlSeconds?: int;
    constructor(params: { spoiler?: boolean; url: string; ttlSeconds?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaDocumentExternal>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaGame extends TLObject {
    id: Raw.TypeInputGame;
    constructor(params: { id: Raw.TypeInputGame });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaGame>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaInvoice extends TLObject {
    title: string;
    description: string;
    photo?: Raw.TypeInputWebDocument;
    invoice: Raw.TypeInvoice;
    payload: bytes;
    provider: string;
    providerData: Raw.TypeDataJSON;
    startParam?: string;
    extendedMedia?: Raw.TypeInputMedia;
    constructor(params: {
      title: string;
      description: string;
      photo?: Raw.TypeInputWebDocument;
      invoice: Raw.TypeInvoice;
      payload: bytes;
      provider: string;
      providerData: Raw.TypeDataJSON;
      startParam?: string;
      extendedMedia?: Raw.TypeInputMedia;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaInvoice>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaGeoLive extends TLObject {
    stopped?: boolean;
    geoPoint: Raw.TypeInputGeoPoint;
    heading?: int;
    period?: int;
    proximityNotificationRadius?: int;
    constructor(params: {
      stopped?: boolean;
      geoPoint: Raw.TypeInputGeoPoint;
      heading?: int;
      period?: int;
      proximityNotificationRadius?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaGeoLive>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaPoll extends TLObject {
    poll: Raw.TypePoll;
    correctAnswers?: Vector<bytes>;
    solution?: string;
    solutionEntities?: Vector<Raw.TypeMessageEntity>;
    constructor(params: {
      poll: Raw.TypePoll;
      correctAnswers?: Vector<bytes>;
      solution?: string;
      solutionEntities?: Vector<Raw.TypeMessageEntity>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaPoll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaDice extends TLObject {
    emoticon: string;
    constructor(params: { emoticon: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaDice>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaStory extends TLObject {
    peer: Raw.TypeInputPeer;
    id: int;
    constructor(params: { peer: Raw.TypeInputPeer; id: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaStory>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaWebPage extends TLObject {
    forceLargeMedia?: boolean;
    forceSmallMedia?: boolean;
    optional?: boolean;
    url: string;
    constructor(params: {
      forceLargeMedia?: boolean;
      forceSmallMedia?: boolean;
      optional?: boolean;
      url: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaWebPage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputChatPhotoEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputChatPhotoEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputChatUploadedPhoto extends TLObject {
    file?: Raw.TypeInputFile;
    video?: Raw.TypeInputFile;
    videoStartTs?: double;
    videoEmojiMarkup?: Raw.TypeVideoSize;
    constructor(params: {
      file?: Raw.TypeInputFile;
      video?: Raw.TypeInputFile;
      videoStartTs?: double;
      videoEmojiMarkup?: Raw.TypeVideoSize;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputChatUploadedPhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputChatPhoto extends TLObject {
    id: Raw.TypeInputPhoto;
    constructor(params: { id: Raw.TypeInputPhoto });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputChatPhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputGeoPointEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputGeoPointEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputGeoPoint extends TLObject {
    lat: double;
    long: double;
    accuracyRadius?: int;
    constructor(params: { lat: double; long: double; accuracyRadius?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputGeoPoint>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPhotoEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPhotoEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPhoto extends TLObject {
    id: long;
    accessHash: long;
    fileReference: bytes;
    constructor(params: { id: long; accessHash: long; fileReference: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputFileLocation extends TLObject {
    volumeId: long;
    localId: int;
    secret: long;
    fileReference: bytes;
    constructor(params: { volumeId: long; localId: int; secret: long; fileReference: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputFileLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputEncryptedFileLocation extends TLObject {
    id: long;
    accessHash: long;
    constructor(params: { id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputEncryptedFileLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputDocumentFileLocation extends TLObject {
    id: long;
    accessHash: long;
    fileReference: bytes;
    thumbSize: string;
    constructor(params: { id: long; accessHash: long; fileReference: bytes; thumbSize: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputDocumentFileLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputSecureFileLocation extends TLObject {
    id: long;
    accessHash: long;
    constructor(params: { id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputSecureFileLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputTakeoutFileLocation extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputTakeoutFileLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPhotoFileLocation extends TLObject {
    id: long;
    accessHash: long;
    fileReference: bytes;
    thumbSize: string;
    constructor(params: { id: long; accessHash: long; fileReference: bytes; thumbSize: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPhotoFileLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPhotoLegacyFileLocation extends TLObject {
    id: long;
    accessHash: long;
    fileReference: bytes;
    volumeId: long;
    localId: int;
    secret: long;
    constructor(params: {
      id: long;
      accessHash: long;
      fileReference: bytes;
      volumeId: long;
      localId: int;
      secret: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPhotoLegacyFileLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPeerPhotoFileLocation extends TLObject {
    big?: boolean;
    peer: Raw.TypeInputPeer;
    photoId: long;
    constructor(params: { big?: boolean; peer: Raw.TypeInputPeer; photoId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPeerPhotoFileLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetThumb extends TLObject {
    stickerset: Raw.TypeInputStickerSet;
    thumbVersion: int;
    constructor(params: { stickerset: Raw.TypeInputStickerSet; thumbVersion: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStickerSetThumb>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputGroupCallStream extends TLObject {
    call: Raw.TypeInputGroupCall;
    timeMs: long;
    scale: int;
    videoChannel?: int;
    videoQuality?: int;
    constructor(params: {
      call: Raw.TypeInputGroupCall;
      timeMs: long;
      scale: int;
      videoChannel?: int;
      videoQuality?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputGroupCallStream>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PeerUser extends TLObject {
    userId: long;
    constructor(params: { userId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PeerUser>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PeerChat extends TLObject {
    chatId: long;
    constructor(params: { chatId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PeerChat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PeerChannel extends TLObject {
    channelId: long;
    constructor(params: { channelId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PeerChannel>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UserEmpty extends TLObject {
    id: long;
    constructor(params: { id: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UserEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class User extends TLObject {
    self?: boolean;
    contact?: boolean;
    mutualContact?: boolean;
    deleted?: boolean;
    bot?: boolean;
    botChatHistory?: boolean;
    botNochats?: boolean;
    verified?: boolean;
    restricted?: boolean;
    min?: boolean;
    botInlineGeo?: boolean;
    support?: boolean;
    scam?: boolean;
    applyMinPhoto?: boolean;
    fake?: boolean;
    botAttachMenu?: boolean;
    premium?: boolean;
    attachMenuEnabled?: boolean;
    botCanEdit?: boolean;
    closeFriend?: boolean;
    storiesHidden?: boolean;
    storiesUnavailable?: boolean;
    contactRequirePremium?: boolean;
    botBusiness?: boolean;
    id: long;
    accessHash?: long;
    firstName?: string;
    lastName?: string;
    username?: string;
    phone?: string;
    photo?: Raw.TypeUserProfilePhoto;
    status?: Raw.TypeUserStatus;
    botInfoVersion?: int;
    restrictionReason?: Vector<Raw.TypeRestrictionReason>;
    botInlinePlaceholder?: string;
    langCode?: string;
    emojiStatus?: Raw.TypeEmojiStatus;
    usernames?: Vector<Raw.TypeUsername>;
    storiesMaxId?: int;
    color?: Raw.TypePeerColor;
    profileColor?: Raw.TypePeerColor;
    constructor(params: {
      self?: boolean;
      contact?: boolean;
      mutualContact?: boolean;
      deleted?: boolean;
      bot?: boolean;
      botChatHistory?: boolean;
      botNochats?: boolean;
      verified?: boolean;
      restricted?: boolean;
      min?: boolean;
      botInlineGeo?: boolean;
      support?: boolean;
      scam?: boolean;
      applyMinPhoto?: boolean;
      fake?: boolean;
      botAttachMenu?: boolean;
      premium?: boolean;
      attachMenuEnabled?: boolean;
      botCanEdit?: boolean;
      closeFriend?: boolean;
      storiesHidden?: boolean;
      storiesUnavailable?: boolean;
      contactRequirePremium?: boolean;
      botBusiness?: boolean;
      id: long;
      accessHash?: long;
      firstName?: string;
      lastName?: string;
      username?: string;
      phone?: string;
      photo?: Raw.TypeUserProfilePhoto;
      status?: Raw.TypeUserStatus;
      botInfoVersion?: int;
      restrictionReason?: Vector<Raw.TypeRestrictionReason>;
      botInlinePlaceholder?: string;
      langCode?: string;
      emojiStatus?: Raw.TypeEmojiStatus;
      usernames?: Vector<Raw.TypeUsername>;
      storiesMaxId?: int;
      color?: Raw.TypePeerColor;
      profileColor?: Raw.TypePeerColor;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.User>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UserProfilePhotoEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UserProfilePhotoEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UserProfilePhoto extends TLObject {
    hasVideo?: boolean;
    personal?: boolean;
    photoId: long;
    strippedThumb?: bytes;
    dcId: int;
    constructor(params: {
      hasVideo?: boolean;
      personal?: boolean;
      photoId: long;
      strippedThumb?: bytes;
      dcId: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UserProfilePhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UserStatusEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UserStatusEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UserStatusOnline extends TLObject {
    expires: int;
    constructor(params: { expires: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UserStatusOnline>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UserStatusOffline extends TLObject {
    wasOnline: int;
    constructor(params: { wasOnline: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UserStatusOffline>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UserStatusRecently extends TLObject {
    byMe?: boolean;
    constructor(params: { byMe?: boolean });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UserStatusRecently>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UserStatusLastWeek extends TLObject {
    byMe?: boolean;
    constructor(params: { byMe?: boolean });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UserStatusLastWeek>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UserStatusLastMonth extends TLObject {
    byMe?: boolean;
    constructor(params: { byMe?: boolean });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UserStatusLastMonth>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatEmpty extends TLObject {
    id: long;
    constructor(params: { id: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Chat extends TLObject {
    creator?: boolean;
    left?: boolean;
    deactivated?: boolean;
    callActive?: boolean;
    callNotEmpty?: boolean;
    noforwards?: boolean;
    id: long;
    title: string;
    photo: Raw.TypeChatPhoto;
    participantsCount: int;
    date: int;
    version: int;
    migratedTo?: Raw.TypeInputChannel;
    adminRights?: Raw.TypeChatAdminRights;
    defaultBannedRights?: Raw.TypeChatBannedRights;
    constructor(params: {
      creator?: boolean;
      left?: boolean;
      deactivated?: boolean;
      callActive?: boolean;
      callNotEmpty?: boolean;
      noforwards?: boolean;
      id: long;
      title: string;
      photo: Raw.TypeChatPhoto;
      participantsCount: int;
      date: int;
      version: int;
      migratedTo?: Raw.TypeInputChannel;
      adminRights?: Raw.TypeChatAdminRights;
      defaultBannedRights?: Raw.TypeChatBannedRights;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Chat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatForbidden extends TLObject {
    id: long;
    title: string;
    constructor(params: { id: long; title: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatForbidden>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Channel extends TLObject {
    creator?: boolean;
    left?: boolean;
    broadcast?: boolean;
    verified?: boolean;
    megagroup?: boolean;
    restricted?: boolean;
    signatures?: boolean;
    min?: boolean;
    scam?: boolean;
    hasLink?: boolean;
    hasGeo?: boolean;
    slowmodeEnabled?: boolean;
    callActive?: boolean;
    callNotEmpty?: boolean;
    fake?: boolean;
    gigagroup?: boolean;
    noforwards?: boolean;
    joinToSend?: boolean;
    joinRequest?: boolean;
    forum?: boolean;
    storiesHidden?: boolean;
    storiesHiddenMin?: boolean;
    storiesUnavailable?: boolean;
    id: long;
    accessHash?: long;
    title: string;
    username?: string;
    photo: Raw.TypeChatPhoto;
    date: int;
    restrictionReason?: Vector<Raw.TypeRestrictionReason>;
    adminRights?: Raw.TypeChatAdminRights;
    bannedRights?: Raw.TypeChatBannedRights;
    defaultBannedRights?: Raw.TypeChatBannedRights;
    participantsCount?: int;
    usernames?: Vector<Raw.TypeUsername>;
    storiesMaxId?: int;
    color?: Raw.TypePeerColor;
    profileColor?: Raw.TypePeerColor;
    emojiStatus?: Raw.TypeEmojiStatus;
    level?: int;
    constructor(params: {
      creator?: boolean;
      left?: boolean;
      broadcast?: boolean;
      verified?: boolean;
      megagroup?: boolean;
      restricted?: boolean;
      signatures?: boolean;
      min?: boolean;
      scam?: boolean;
      hasLink?: boolean;
      hasGeo?: boolean;
      slowmodeEnabled?: boolean;
      callActive?: boolean;
      callNotEmpty?: boolean;
      fake?: boolean;
      gigagroup?: boolean;
      noforwards?: boolean;
      joinToSend?: boolean;
      joinRequest?: boolean;
      forum?: boolean;
      storiesHidden?: boolean;
      storiesHiddenMin?: boolean;
      storiesUnavailable?: boolean;
      id: long;
      accessHash?: long;
      title: string;
      username?: string;
      photo: Raw.TypeChatPhoto;
      date: int;
      restrictionReason?: Vector<Raw.TypeRestrictionReason>;
      adminRights?: Raw.TypeChatAdminRights;
      bannedRights?: Raw.TypeChatBannedRights;
      defaultBannedRights?: Raw.TypeChatBannedRights;
      participantsCount?: int;
      usernames?: Vector<Raw.TypeUsername>;
      storiesMaxId?: int;
      color?: Raw.TypePeerColor;
      profileColor?: Raw.TypePeerColor;
      emojiStatus?: Raw.TypeEmojiStatus;
      level?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Channel>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelForbidden extends TLObject {
    broadcast?: boolean;
    megagroup?: boolean;
    id: long;
    accessHash: long;
    title: string;
    untilDate?: int;
    constructor(params: {
      broadcast?: boolean;
      megagroup?: boolean;
      id: long;
      accessHash: long;
      title: string;
      untilDate?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelForbidden>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatFull extends TLObject {
    canSetUsername?: boolean;
    hasScheduled?: boolean;
    translationsDisabled?: boolean;
    id: long;
    about: string;
    participants: Raw.TypeChatParticipants;
    chatPhoto?: Raw.TypePhoto;
    notifySettings: Raw.TypePeerNotifySettings;
    exportedInvite?: Raw.TypeExportedChatInvite;
    botInfo?: Vector<Raw.TypeBotInfo>;
    pinnedMsgId?: int;
    folderId?: int;
    call?: Raw.TypeInputGroupCall;
    ttlPeriod?: int;
    groupcallDefaultJoinAs?: Raw.TypePeer;
    themeEmoticon?: string;
    requestsPending?: int;
    recentRequesters?: Vector<long>;
    availableReactions?: Raw.TypeChatReactions;
    reactionsLimit?: int;
    constructor(params: {
      canSetUsername?: boolean;
      hasScheduled?: boolean;
      translationsDisabled?: boolean;
      id: long;
      about: string;
      participants: Raw.TypeChatParticipants;
      chatPhoto?: Raw.TypePhoto;
      notifySettings: Raw.TypePeerNotifySettings;
      exportedInvite?: Raw.TypeExportedChatInvite;
      botInfo?: Vector<Raw.TypeBotInfo>;
      pinnedMsgId?: int;
      folderId?: int;
      call?: Raw.TypeInputGroupCall;
      ttlPeriod?: int;
      groupcallDefaultJoinAs?: Raw.TypePeer;
      themeEmoticon?: string;
      requestsPending?: int;
      recentRequesters?: Vector<long>;
      availableReactions?: Raw.TypeChatReactions;
      reactionsLimit?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatFull>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelFull extends TLObject {
    canViewParticipants?: boolean;
    canSetUsername?: boolean;
    canSetStickers?: boolean;
    hiddenPrehistory?: boolean;
    canSetLocation?: boolean;
    hasScheduled?: boolean;
    canViewStats?: boolean;
    blocked?: boolean;
    canDeleteChannel?: boolean;
    antispam?: boolean;
    participantsHidden?: boolean;
    translationsDisabled?: boolean;
    storiesPinnedAvailable?: boolean;
    viewForumAsMessages?: boolean;
    restrictedSponsored?: boolean;
    canViewRevenue?: boolean;
    id: long;
    about: string;
    participantsCount?: int;
    adminsCount?: int;
    kickedCount?: int;
    bannedCount?: int;
    onlineCount?: int;
    readInboxMaxId: int;
    readOutboxMaxId: int;
    unreadCount: int;
    chatPhoto: Raw.TypePhoto;
    notifySettings: Raw.TypePeerNotifySettings;
    exportedInvite?: Raw.TypeExportedChatInvite;
    botInfo: Vector<Raw.TypeBotInfo>;
    migratedFromChatId?: long;
    migratedFromMaxId?: int;
    pinnedMsgId?: int;
    stickerset?: Raw.TypeStickerSet;
    availableMinId?: int;
    folderId?: int;
    linkedChatId?: long;
    location?: Raw.TypeChannelLocation;
    slowmodeSeconds?: int;
    slowmodeNextSendDate?: int;
    statsDc?: int;
    pts: int;
    call?: Raw.TypeInputGroupCall;
    ttlPeriod?: int;
    pendingSuggestions?: Vector<string>;
    groupcallDefaultJoinAs?: Raw.TypePeer;
    themeEmoticon?: string;
    requestsPending?: int;
    recentRequesters?: Vector<long>;
    defaultSendAs?: Raw.TypePeer;
    availableReactions?: Raw.TypeChatReactions;
    reactionsLimit?: int;
    stories?: Raw.TypePeerStories;
    wallpaper?: Raw.TypeWallPaper;
    boostsApplied?: int;
    boostsUnrestrict?: int;
    emojiset?: Raw.TypeStickerSet;
    constructor(params: {
      canViewParticipants?: boolean;
      canSetUsername?: boolean;
      canSetStickers?: boolean;
      hiddenPrehistory?: boolean;
      canSetLocation?: boolean;
      hasScheduled?: boolean;
      canViewStats?: boolean;
      blocked?: boolean;
      canDeleteChannel?: boolean;
      antispam?: boolean;
      participantsHidden?: boolean;
      translationsDisabled?: boolean;
      storiesPinnedAvailable?: boolean;
      viewForumAsMessages?: boolean;
      restrictedSponsored?: boolean;
      canViewRevenue?: boolean;
      id: long;
      about: string;
      participantsCount?: int;
      adminsCount?: int;
      kickedCount?: int;
      bannedCount?: int;
      onlineCount?: int;
      readInboxMaxId: int;
      readOutboxMaxId: int;
      unreadCount: int;
      chatPhoto: Raw.TypePhoto;
      notifySettings: Raw.TypePeerNotifySettings;
      exportedInvite?: Raw.TypeExportedChatInvite;
      botInfo: Vector<Raw.TypeBotInfo>;
      migratedFromChatId?: long;
      migratedFromMaxId?: int;
      pinnedMsgId?: int;
      stickerset?: Raw.TypeStickerSet;
      availableMinId?: int;
      folderId?: int;
      linkedChatId?: long;
      location?: Raw.TypeChannelLocation;
      slowmodeSeconds?: int;
      slowmodeNextSendDate?: int;
      statsDc?: int;
      pts: int;
      call?: Raw.TypeInputGroupCall;
      ttlPeriod?: int;
      pendingSuggestions?: Vector<string>;
      groupcallDefaultJoinAs?: Raw.TypePeer;
      themeEmoticon?: string;
      requestsPending?: int;
      recentRequesters?: Vector<long>;
      defaultSendAs?: Raw.TypePeer;
      availableReactions?: Raw.TypeChatReactions;
      reactionsLimit?: int;
      stories?: Raw.TypePeerStories;
      wallpaper?: Raw.TypeWallPaper;
      boostsApplied?: int;
      boostsUnrestrict?: int;
      emojiset?: Raw.TypeStickerSet;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelFull>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatParticipant extends TLObject {
    userId: long;
    inviterId: long;
    date: int;
    constructor(params: { userId: long; inviterId: long; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatParticipant>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatParticipantCreator extends TLObject {
    userId: long;
    constructor(params: { userId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatParticipantCreator>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatParticipantAdmin extends TLObject {
    userId: long;
    inviterId: long;
    date: int;
    constructor(params: { userId: long; inviterId: long; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatParticipantAdmin>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatParticipantsForbidden extends TLObject {
    chatId: long;
    selfParticipant?: Raw.TypeChatParticipant;
    constructor(params: { chatId: long; selfParticipant?: Raw.TypeChatParticipant });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatParticipantsForbidden>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatParticipants extends TLObject {
    chatId: long;
    participants: Vector<Raw.TypeChatParticipant>;
    version: int;
    constructor(params: {
      chatId: long;
      participants: Vector<Raw.TypeChatParticipant>;
      version: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatParticipants>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatPhotoEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatPhotoEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatPhoto extends TLObject {
    hasVideo?: boolean;
    photoId: long;
    strippedThumb?: bytes;
    dcId: int;
    constructor(params: { hasVideo?: boolean; photoId: long; strippedThumb?: bytes; dcId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatPhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEmpty extends TLObject {
    id: int;
    peerId?: Raw.TypePeer;
    constructor(params: { id: int; peerId?: Raw.TypePeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Message extends TLObject {
    out?: boolean;
    mentioned?: boolean;
    mediaUnread?: boolean;
    silent?: boolean;
    post?: boolean;
    fromScheduled?: boolean;
    legacy?: boolean;
    editHide?: boolean;
    pinned?: boolean;
    noforwards?: boolean;
    invertMedia?: boolean;
    offline?: boolean;
    id: int;
    fromId?: Raw.TypePeer;
    fromBoostsApplied?: int;
    peerId: Raw.TypePeer;
    savedPeerId?: Raw.TypePeer;
    fwdFrom?: Raw.TypeMessageFwdHeader;
    viaBotId?: long;
    viaBusinessBotId?: long;
    replyTo?: Raw.TypeMessageReplyHeader;
    date: int;
    message: string;
    media?: Raw.TypeMessageMedia;
    replyMarkup?: Raw.TypeReplyMarkup;
    entities?: Vector<Raw.TypeMessageEntity>;
    views?: int;
    forwards?: int;
    replies?: Raw.TypeMessageReplies;
    editDate?: int;
    postAuthor?: string;
    groupedId?: long;
    reactions?: Raw.TypeMessageReactions;
    restrictionReason?: Vector<Raw.TypeRestrictionReason>;
    ttlPeriod?: int;
    quickReplyShortcutId?: int;
    constructor(params: {
      out?: boolean;
      mentioned?: boolean;
      mediaUnread?: boolean;
      silent?: boolean;
      post?: boolean;
      fromScheduled?: boolean;
      legacy?: boolean;
      editHide?: boolean;
      pinned?: boolean;
      noforwards?: boolean;
      invertMedia?: boolean;
      offline?: boolean;
      id: int;
      fromId?: Raw.TypePeer;
      fromBoostsApplied?: int;
      peerId: Raw.TypePeer;
      savedPeerId?: Raw.TypePeer;
      fwdFrom?: Raw.TypeMessageFwdHeader;
      viaBotId?: long;
      viaBusinessBotId?: long;
      replyTo?: Raw.TypeMessageReplyHeader;
      date: int;
      message: string;
      media?: Raw.TypeMessageMedia;
      replyMarkup?: Raw.TypeReplyMarkup;
      entities?: Vector<Raw.TypeMessageEntity>;
      views?: int;
      forwards?: int;
      replies?: Raw.TypeMessageReplies;
      editDate?: int;
      postAuthor?: string;
      groupedId?: long;
      reactions?: Raw.TypeMessageReactions;
      restrictionReason?: Vector<Raw.TypeRestrictionReason>;
      ttlPeriod?: int;
      quickReplyShortcutId?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Message>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageService extends TLObject {
    out?: boolean;
    mentioned?: boolean;
    mediaUnread?: boolean;
    silent?: boolean;
    post?: boolean;
    legacy?: boolean;
    id: int;
    fromId?: Raw.TypePeer;
    peerId: Raw.TypePeer;
    replyTo?: Raw.TypeMessageReplyHeader;
    date: int;
    action: Raw.TypeMessageAction;
    ttlPeriod?: int;
    constructor(params: {
      out?: boolean;
      mentioned?: boolean;
      mediaUnread?: boolean;
      silent?: boolean;
      post?: boolean;
      legacy?: boolean;
      id: int;
      fromId?: Raw.TypePeer;
      peerId: Raw.TypePeer;
      replyTo?: Raw.TypeMessageReplyHeader;
      date: int;
      action: Raw.TypeMessageAction;
      ttlPeriod?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageService>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaPhoto extends TLObject {
    spoiler?: boolean;
    photo?: Raw.TypePhoto;
    ttlSeconds?: int;
    constructor(params: { spoiler?: boolean; photo?: Raw.TypePhoto; ttlSeconds?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaPhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaGeo extends TLObject {
    geo: Raw.TypeGeoPoint;
    constructor(params: { geo: Raw.TypeGeoPoint });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaGeo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaContact extends TLObject {
    phoneNumber: string;
    firstName: string;
    lastName: string;
    vcard: string;
    userId: long;
    constructor(params: {
      phoneNumber: string;
      firstName: string;
      lastName: string;
      vcard: string;
      userId: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaContact>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaUnsupported extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaUnsupported>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaDocument extends TLObject {
    nopremium?: boolean;
    spoiler?: boolean;
    video?: boolean;
    round?: boolean;
    voice?: boolean;
    document?: Raw.TypeDocument;
    altDocument?: Raw.TypeDocument;
    ttlSeconds?: int;
    constructor(params: {
      nopremium?: boolean;
      spoiler?: boolean;
      video?: boolean;
      round?: boolean;
      voice?: boolean;
      document?: Raw.TypeDocument;
      altDocument?: Raw.TypeDocument;
      ttlSeconds?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaDocument>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaWebPage extends TLObject {
    forceLargeMedia?: boolean;
    forceSmallMedia?: boolean;
    manual?: boolean;
    safe?: boolean;
    webpage: Raw.TypeWebPage;
    constructor(params: {
      forceLargeMedia?: boolean;
      forceSmallMedia?: boolean;
      manual?: boolean;
      safe?: boolean;
      webpage: Raw.TypeWebPage;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaWebPage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaVenue extends TLObject {
    geo: Raw.TypeGeoPoint;
    title: string;
    address: string;
    provider: string;
    venueId: string;
    venueType: string;
    constructor(params: {
      geo: Raw.TypeGeoPoint;
      title: string;
      address: string;
      provider: string;
      venueId: string;
      venueType: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaVenue>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaGame extends TLObject {
    game: Raw.TypeGame;
    constructor(params: { game: Raw.TypeGame });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaGame>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaInvoice extends TLObject {
    shippingAddressRequested?: boolean;
    test?: boolean;
    title: string;
    description: string;
    photo?: Raw.TypeWebDocument;
    receiptMsgId?: int;
    currency: string;
    totalAmount: long;
    startParam: string;
    extendedMedia?: Raw.TypeMessageExtendedMedia;
    constructor(params: {
      shippingAddressRequested?: boolean;
      test?: boolean;
      title: string;
      description: string;
      photo?: Raw.TypeWebDocument;
      receiptMsgId?: int;
      currency: string;
      totalAmount: long;
      startParam: string;
      extendedMedia?: Raw.TypeMessageExtendedMedia;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaInvoice>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaGeoLive extends TLObject {
    geo: Raw.TypeGeoPoint;
    heading?: int;
    period: int;
    proximityNotificationRadius?: int;
    constructor(params: {
      geo: Raw.TypeGeoPoint;
      heading?: int;
      period: int;
      proximityNotificationRadius?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaGeoLive>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaPoll extends TLObject {
    poll: Raw.TypePoll;
    results: Raw.TypePollResults;
    constructor(params: { poll: Raw.TypePoll; results: Raw.TypePollResults });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaPoll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaDice extends TLObject {
    value: int;
    emoticon: string;
    constructor(params: { value: int; emoticon: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaDice>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaStory extends TLObject {
    viaMention?: boolean;
    peer: Raw.TypePeer;
    id: int;
    story?: Raw.TypeStoryItem;
    constructor(params: {
      viaMention?: boolean;
      peer: Raw.TypePeer;
      id: int;
      story?: Raw.TypeStoryItem;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaStory>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaGiveaway extends TLObject {
    onlyNewSubscribers?: boolean;
    winnersAreVisible?: boolean;
    channels: Vector<long>;
    countriesIso2?: Vector<string>;
    prizeDescription?: string;
    quantity: int;
    months: int;
    untilDate: int;
    constructor(params: {
      onlyNewSubscribers?: boolean;
      winnersAreVisible?: boolean;
      channels: Vector<long>;
      countriesIso2?: Vector<string>;
      prizeDescription?: string;
      quantity: int;
      months: int;
      untilDate: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaGiveaway>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageMediaGiveawayResults extends TLObject {
    onlyNewSubscribers?: boolean;
    refunded?: boolean;
    channelId: long;
    additionalPeersCount?: int;
    launchMsgId: int;
    winnersCount: int;
    unclaimedCount: int;
    winners: Vector<long>;
    months: int;
    prizeDescription?: string;
    untilDate: int;
    constructor(params: {
      onlyNewSubscribers?: boolean;
      refunded?: boolean;
      channelId: long;
      additionalPeersCount?: int;
      launchMsgId: int;
      winnersCount: int;
      unclaimedCount: int;
      winners: Vector<long>;
      months: int;
      prizeDescription?: string;
      untilDate: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageMediaGiveawayResults>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionChatCreate extends TLObject {
    title: string;
    users: Vector<long>;
    constructor(params: { title: string; users: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionChatCreate>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionChatEditTitle extends TLObject {
    title: string;
    constructor(params: { title: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionChatEditTitle>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionChatEditPhoto extends TLObject {
    photo: Raw.TypePhoto;
    constructor(params: { photo: Raw.TypePhoto });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionChatEditPhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionChatDeletePhoto extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionChatDeletePhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionChatAddUser extends TLObject {
    users: Vector<long>;
    constructor(params: { users: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionChatAddUser>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionChatDeleteUser extends TLObject {
    userId: long;
    constructor(params: { userId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionChatDeleteUser>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionChatJoinedByLink extends TLObject {
    inviterId: long;
    constructor(params: { inviterId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionChatJoinedByLink>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionChannelCreate extends TLObject {
    title: string;
    constructor(params: { title: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionChannelCreate>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionChatMigrateTo extends TLObject {
    channelId: long;
    constructor(params: { channelId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionChatMigrateTo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionChannelMigrateFrom extends TLObject {
    title: string;
    chatId: long;
    constructor(params: { title: string; chatId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionChannelMigrateFrom>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionPinMessage extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionPinMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionHistoryClear extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionHistoryClear>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionGameScore extends TLObject {
    gameId: long;
    score: int;
    constructor(params: { gameId: long; score: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionGameScore>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionPaymentSentMe extends TLObject {
    recurringInit?: boolean;
    recurringUsed?: boolean;
    currency: string;
    totalAmount: long;
    payload: bytes;
    info?: Raw.TypePaymentRequestedInfo;
    shippingOptionId?: string;
    charge: Raw.TypePaymentCharge;
    constructor(params: {
      recurringInit?: boolean;
      recurringUsed?: boolean;
      currency: string;
      totalAmount: long;
      payload: bytes;
      info?: Raw.TypePaymentRequestedInfo;
      shippingOptionId?: string;
      charge: Raw.TypePaymentCharge;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionPaymentSentMe>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionPaymentSent extends TLObject {
    recurringInit?: boolean;
    recurringUsed?: boolean;
    currency: string;
    totalAmount: long;
    invoiceSlug?: string;
    constructor(params: {
      recurringInit?: boolean;
      recurringUsed?: boolean;
      currency: string;
      totalAmount: long;
      invoiceSlug?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionPaymentSent>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionPhoneCall extends TLObject {
    video?: boolean;
    callId: long;
    reason?: Raw.TypePhoneCallDiscardReason;
    duration?: int;
    constructor(params: {
      video?: boolean;
      callId: long;
      reason?: Raw.TypePhoneCallDiscardReason;
      duration?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionPhoneCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionScreenshotTaken extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionScreenshotTaken>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionCustomAction extends TLObject {
    message: string;
    constructor(params: { message: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionCustomAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionBotAllowed extends TLObject {
    attachMenu?: boolean;
    fromRequest?: boolean;
    domain?: string;
    app?: Raw.TypeBotApp;
    constructor(params: {
      attachMenu?: boolean;
      fromRequest?: boolean;
      domain?: string;
      app?: Raw.TypeBotApp;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionBotAllowed>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionSecureValuesSentMe extends TLObject {
    values: Vector<Raw.TypeSecureValue>;
    credentials: Raw.TypeSecureCredentialsEncrypted;
    constructor(params: {
      values: Vector<Raw.TypeSecureValue>;
      credentials: Raw.TypeSecureCredentialsEncrypted;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionSecureValuesSentMe>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionSecureValuesSent extends TLObject {
    types: Vector<Raw.TypeSecureValueType>;
    constructor(params: { types: Vector<Raw.TypeSecureValueType> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionSecureValuesSent>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionContactSignUp extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionContactSignUp>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionGeoProximityReached extends TLObject {
    fromId: Raw.TypePeer;
    toId: Raw.TypePeer;
    distance: int;
    constructor(params: { fromId: Raw.TypePeer; toId: Raw.TypePeer; distance: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionGeoProximityReached>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionGroupCall extends TLObject {
    call: Raw.TypeInputGroupCall;
    duration?: int;
    constructor(params: { call: Raw.TypeInputGroupCall; duration?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionGroupCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionInviteToGroupCall extends TLObject {
    call: Raw.TypeInputGroupCall;
    users: Vector<long>;
    constructor(params: { call: Raw.TypeInputGroupCall; users: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionInviteToGroupCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionSetMessagesTTL extends TLObject {
    period: int;
    autoSettingFrom?: long;
    constructor(params: { period: int; autoSettingFrom?: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionSetMessagesTTL>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionGroupCallScheduled extends TLObject {
    call: Raw.TypeInputGroupCall;
    scheduleDate: int;
    constructor(params: { call: Raw.TypeInputGroupCall; scheduleDate: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionGroupCallScheduled>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionSetChatTheme extends TLObject {
    emoticon: string;
    constructor(params: { emoticon: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionSetChatTheme>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionChatJoinedByRequest extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionChatJoinedByRequest>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionWebViewDataSentMe extends TLObject {
    text: string;
    data: string;
    constructor(params: { text: string; data: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionWebViewDataSentMe>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionWebViewDataSent extends TLObject {
    text: string;
    constructor(params: { text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionWebViewDataSent>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionGiftPremium extends TLObject {
    currency: string;
    amount: long;
    months: int;
    cryptoCurrency?: string;
    cryptoAmount?: long;
    constructor(params: {
      currency: string;
      amount: long;
      months: int;
      cryptoCurrency?: string;
      cryptoAmount?: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionGiftPremium>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionTopicCreate extends TLObject {
    title: string;
    iconColor: int;
    iconEmojiId?: long;
    constructor(params: { title: string; iconColor: int; iconEmojiId?: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionTopicCreate>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionTopicEdit extends TLObject {
    title?: string;
    iconEmojiId?: long;
    closed?: Bool;
    hidden?: Bool;
    constructor(params: { title?: string; iconEmojiId?: long; closed?: Bool; hidden?: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionTopicEdit>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionSuggestProfilePhoto extends TLObject {
    photo: Raw.TypePhoto;
    constructor(params: { photo: Raw.TypePhoto });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionSuggestProfilePhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionRequestedPeer extends TLObject {
    buttonId: int;
    peers: Vector<Raw.TypePeer>;
    constructor(params: { buttonId: int; peers: Vector<Raw.TypePeer> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionRequestedPeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionSetChatWallPaper extends TLObject {
    same?: boolean;
    forBoth?: boolean;
    wallpaper: Raw.TypeWallPaper;
    constructor(params: { same?: boolean; forBoth?: boolean; wallpaper: Raw.TypeWallPaper });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionSetChatWallPaper>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionGiftCode extends TLObject {
    viaGiveaway?: boolean;
    unclaimed?: boolean;
    boostPeer?: Raw.TypePeer;
    months: int;
    slug: string;
    currency?: string;
    amount?: long;
    cryptoCurrency?: string;
    cryptoAmount?: long;
    constructor(params: {
      viaGiveaway?: boolean;
      unclaimed?: boolean;
      boostPeer?: Raw.TypePeer;
      months: int;
      slug: string;
      currency?: string;
      amount?: long;
      cryptoCurrency?: string;
      cryptoAmount?: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionGiftCode>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionGiveawayLaunch extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionGiveawayLaunch>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionGiveawayResults extends TLObject {
    winnersCount: int;
    unclaimedCount: int;
    constructor(params: { winnersCount: int; unclaimedCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionGiveawayResults>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionBoostApply extends TLObject {
    boosts: int;
    constructor(params: { boosts: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionBoostApply>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageActionRequestedPeerSentMe extends TLObject {
    buttonId: int;
    peers: Vector<Raw.TypeRequestedPeer>;
    constructor(params: { buttonId: int; peers: Vector<Raw.TypeRequestedPeer> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageActionRequestedPeerSentMe>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Dialog extends TLObject {
    pinned?: boolean;
    unreadMark?: boolean;
    viewForumAsMessages?: boolean;
    peer: Raw.TypePeer;
    topMessage: int;
    readInboxMaxId: int;
    readOutboxMaxId: int;
    unreadCount: int;
    unreadMentionsCount: int;
    unreadReactionsCount: int;
    notifySettings: Raw.TypePeerNotifySettings;
    pts?: int;
    draft?: Raw.TypeDraftMessage;
    folderId?: int;
    ttlPeriod?: int;
    constructor(params: {
      pinned?: boolean;
      unreadMark?: boolean;
      viewForumAsMessages?: boolean;
      peer: Raw.TypePeer;
      topMessage: int;
      readInboxMaxId: int;
      readOutboxMaxId: int;
      unreadCount: int;
      unreadMentionsCount: int;
      unreadReactionsCount: int;
      notifySettings: Raw.TypePeerNotifySettings;
      pts?: int;
      draft?: Raw.TypeDraftMessage;
      folderId?: int;
      ttlPeriod?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Dialog>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DialogFolder extends TLObject {
    pinned?: boolean;
    folder: Raw.TypeFolder;
    peer: Raw.TypePeer;
    topMessage: int;
    unreadMutedPeersCount: int;
    unreadUnmutedPeersCount: int;
    unreadMutedMessagesCount: int;
    unreadUnmutedMessagesCount: int;
    constructor(params: {
      pinned?: boolean;
      folder: Raw.TypeFolder;
      peer: Raw.TypePeer;
      topMessage: int;
      unreadMutedPeersCount: int;
      unreadUnmutedPeersCount: int;
      unreadMutedMessagesCount: int;
      unreadUnmutedMessagesCount: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DialogFolder>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhotoEmpty extends TLObject {
    id: long;
    constructor(params: { id: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhotoEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Photo extends TLObject {
    hasStickers?: boolean;
    id: long;
    accessHash: long;
    fileReference: bytes;
    date: int;
    sizes: Vector<Raw.TypePhotoSize>;
    videoSizes?: Vector<Raw.TypeVideoSize>;
    dcId: int;
    constructor(params: {
      hasStickers?: boolean;
      id: long;
      accessHash: long;
      fileReference: bytes;
      date: int;
      sizes: Vector<Raw.TypePhotoSize>;
      videoSizes?: Vector<Raw.TypeVideoSize>;
      dcId: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Photo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhotoSizeEmpty extends TLObject {
    type: string;
    constructor(params: { type: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhotoSizeEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhotoSize extends TLObject {
    type: string;
    w: int;
    h: int;
    size: int;
    constructor(params: { type: string; w: int; h: int; size: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhotoSize>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhotoCachedSize extends TLObject {
    type: string;
    w: int;
    h: int;
    bytes: bytes;
    constructor(params: { type: string; w: int; h: int; bytes: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhotoCachedSize>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhotoStrippedSize extends TLObject {
    type: string;
    bytes: bytes;
    constructor(params: { type: string; bytes: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhotoStrippedSize>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhotoSizeProgressive extends TLObject {
    type: string;
    w: int;
    h: int;
    sizes: Vector<int>;
    constructor(params: { type: string; w: int; h: int; sizes: Vector<int> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhotoSizeProgressive>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhotoPathSize extends TLObject {
    type: string;
    bytes: bytes;
    constructor(params: { type: string; bytes: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhotoPathSize>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class GeoPointEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.GeoPointEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class GeoPoint extends TLObject {
    long: double;
    lat: double;
    accessHash: long;
    accuracyRadius?: int;
    constructor(params: { long: double; lat: double; accessHash: long; accuracyRadius?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.GeoPoint>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputNotifyPeer extends TLObject {
    peer: Raw.TypeInputPeer;
    constructor(params: { peer: Raw.TypeInputPeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputNotifyPeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputNotifyUsers extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputNotifyUsers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputNotifyChats extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputNotifyChats>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputNotifyBroadcasts extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputNotifyBroadcasts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputNotifyForumTopic extends TLObject {
    peer: Raw.TypeInputPeer;
    topMsgId: int;
    constructor(params: { peer: Raw.TypeInputPeer; topMsgId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputNotifyForumTopic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPeerNotifySettings extends TLObject {
    showPreviews?: Bool;
    silent?: Bool;
    muteUntil?: int;
    sound?: Raw.TypeNotificationSound;
    storiesMuted?: Bool;
    storiesHideSender?: Bool;
    storiesSound?: Raw.TypeNotificationSound;
    constructor(params: {
      showPreviews?: Bool;
      silent?: Bool;
      muteUntil?: int;
      sound?: Raw.TypeNotificationSound;
      storiesMuted?: Bool;
      storiesHideSender?: Bool;
      storiesSound?: Raw.TypeNotificationSound;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPeerNotifySettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PeerNotifySettings extends TLObject {
    showPreviews?: Bool;
    silent?: Bool;
    muteUntil?: int;
    iosSound?: Raw.TypeNotificationSound;
    androidSound?: Raw.TypeNotificationSound;
    otherSound?: Raw.TypeNotificationSound;
    storiesMuted?: Bool;
    storiesHideSender?: Bool;
    storiesIosSound?: Raw.TypeNotificationSound;
    storiesAndroidSound?: Raw.TypeNotificationSound;
    storiesOtherSound?: Raw.TypeNotificationSound;
    constructor(params: {
      showPreviews?: Bool;
      silent?: Bool;
      muteUntil?: int;
      iosSound?: Raw.TypeNotificationSound;
      androidSound?: Raw.TypeNotificationSound;
      otherSound?: Raw.TypeNotificationSound;
      storiesMuted?: Bool;
      storiesHideSender?: Bool;
      storiesIosSound?: Raw.TypeNotificationSound;
      storiesAndroidSound?: Raw.TypeNotificationSound;
      storiesOtherSound?: Raw.TypeNotificationSound;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PeerNotifySettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PeerSettings extends TLObject {
    reportSpam?: boolean;
    addContact?: boolean;
    blockContact?: boolean;
    shareContact?: boolean;
    needContactsException?: boolean;
    reportGeo?: boolean;
    autoarchived?: boolean;
    inviteMembers?: boolean;
    requestChatBroadcast?: boolean;
    businessBotPaused?: boolean;
    businessBotCanReply?: boolean;
    geoDistance?: int;
    requestChatTitle?: string;
    requestChatDate?: int;
    businessBotId?: long;
    businessBotManageUrl?: string;
    constructor(params: {
      reportSpam?: boolean;
      addContact?: boolean;
      blockContact?: boolean;
      shareContact?: boolean;
      needContactsException?: boolean;
      reportGeo?: boolean;
      autoarchived?: boolean;
      inviteMembers?: boolean;
      requestChatBroadcast?: boolean;
      businessBotPaused?: boolean;
      businessBotCanReply?: boolean;
      geoDistance?: int;
      requestChatTitle?: string;
      requestChatDate?: int;
      businessBotId?: long;
      businessBotManageUrl?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PeerSettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WallPaper extends TLObject {
    id: long;
    creator?: boolean;
    default?: boolean;
    pattern?: boolean;
    dark?: boolean;
    accessHash: long;
    slug: string;
    document: Raw.TypeDocument;
    settings?: Raw.TypeWallPaperSettings;
    constructor(params: {
      id: long;
      creator?: boolean;
      default?: boolean;
      pattern?: boolean;
      dark?: boolean;
      accessHash: long;
      slug: string;
      document: Raw.TypeDocument;
      settings?: Raw.TypeWallPaperSettings;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WallPaper>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WallPaperNoFile extends TLObject {
    id: long;
    default?: boolean;
    dark?: boolean;
    settings?: Raw.TypeWallPaperSettings;
    constructor(params: {
      id: long;
      default?: boolean;
      dark?: boolean;
      settings?: Raw.TypeWallPaperSettings;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WallPaperNoFile>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReportReasonSpam extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReportReasonSpam>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReportReasonViolence extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReportReasonViolence>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReportReasonPornography extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReportReasonPornography>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReportReasonChildAbuse extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReportReasonChildAbuse>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReportReasonOther extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReportReasonOther>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReportReasonCopyright extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReportReasonCopyright>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReportReasonGeoIrrelevant extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReportReasonGeoIrrelevant>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReportReasonFake extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReportReasonFake>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReportReasonIllegalDrugs extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReportReasonIllegalDrugs>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReportReasonPersonalDetails extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReportReasonPersonalDetails>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UserFull extends TLObject {
    blocked?: boolean;
    phoneCallsAvailable?: boolean;
    phoneCallsPrivate?: boolean;
    canPinMessage?: boolean;
    hasScheduled?: boolean;
    videoCallsAvailable?: boolean;
    voiceMessagesForbidden?: boolean;
    translationsDisabled?: boolean;
    storiesPinnedAvailable?: boolean;
    blockedMyStoriesFrom?: boolean;
    wallpaperOverridden?: boolean;
    contactRequirePremium?: boolean;
    readDatesPrivate?: boolean;
    sponsoredEnabled?: boolean;
    id: long;
    about?: string;
    settings: Raw.TypePeerSettings;
    personalPhoto?: Raw.TypePhoto;
    profilePhoto?: Raw.TypePhoto;
    fallbackPhoto?: Raw.TypePhoto;
    notifySettings: Raw.TypePeerNotifySettings;
    botInfo?: Raw.TypeBotInfo;
    pinnedMsgId?: int;
    commonChatsCount: int;
    folderId?: int;
    ttlPeriod?: int;
    themeEmoticon?: string;
    privateForwardName?: string;
    botGroupAdminRights?: Raw.TypeChatAdminRights;
    botBroadcastAdminRights?: Raw.TypeChatAdminRights;
    premiumGifts?: Vector<Raw.TypePremiumGiftOption>;
    wallpaper?: Raw.TypeWallPaper;
    stories?: Raw.TypePeerStories;
    businessWorkHours?: Raw.TypeBusinessWorkHours;
    businessLocation?: Raw.TypeBusinessLocation;
    businessGreetingMessage?: Raw.TypeBusinessGreetingMessage;
    businessAwayMessage?: Raw.TypeBusinessAwayMessage;
    businessIntro?: Raw.TypeBusinessIntro;
    birthday?: Raw.TypeBirthday;
    personalChannelId?: long;
    personalChannelMessage?: int;
    constructor(params: {
      blocked?: boolean;
      phoneCallsAvailable?: boolean;
      phoneCallsPrivate?: boolean;
      canPinMessage?: boolean;
      hasScheduled?: boolean;
      videoCallsAvailable?: boolean;
      voiceMessagesForbidden?: boolean;
      translationsDisabled?: boolean;
      storiesPinnedAvailable?: boolean;
      blockedMyStoriesFrom?: boolean;
      wallpaperOverridden?: boolean;
      contactRequirePremium?: boolean;
      readDatesPrivate?: boolean;
      sponsoredEnabled?: boolean;
      id: long;
      about?: string;
      settings: Raw.TypePeerSettings;
      personalPhoto?: Raw.TypePhoto;
      profilePhoto?: Raw.TypePhoto;
      fallbackPhoto?: Raw.TypePhoto;
      notifySettings: Raw.TypePeerNotifySettings;
      botInfo?: Raw.TypeBotInfo;
      pinnedMsgId?: int;
      commonChatsCount: int;
      folderId?: int;
      ttlPeriod?: int;
      themeEmoticon?: string;
      privateForwardName?: string;
      botGroupAdminRights?: Raw.TypeChatAdminRights;
      botBroadcastAdminRights?: Raw.TypeChatAdminRights;
      premiumGifts?: Vector<Raw.TypePremiumGiftOption>;
      wallpaper?: Raw.TypeWallPaper;
      stories?: Raw.TypePeerStories;
      businessWorkHours?: Raw.TypeBusinessWorkHours;
      businessLocation?: Raw.TypeBusinessLocation;
      businessGreetingMessage?: Raw.TypeBusinessGreetingMessage;
      businessAwayMessage?: Raw.TypeBusinessAwayMessage;
      businessIntro?: Raw.TypeBusinessIntro;
      birthday?: Raw.TypeBirthday;
      personalChannelId?: long;
      personalChannelMessage?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UserFull>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Contact extends TLObject {
    userId: long;
    mutual: Bool;
    constructor(params: { userId: long; mutual: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Contact>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ImportedContact extends TLObject {
    userId: long;
    clientId: long;
    constructor(params: { userId: long; clientId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ImportedContact>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ContactStatus extends TLObject {
    userId: long;
    status: Raw.TypeUserStatus;
    constructor(params: { userId: long; status: Raw.TypeUserStatus });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ContactStatus>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterPhotos extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterPhotos>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterVideo extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterVideo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterPhotoVideo extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterPhotoVideo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterDocument extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterDocument>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterUrl extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterUrl>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterGif extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterGif>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterVoice extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterVoice>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterMusic extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterMusic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterChatPhotos extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterChatPhotos>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterPhoneCalls extends TLObject {
    missed?: boolean;
    constructor(params: { missed?: boolean });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterPhoneCalls>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterRoundVoice extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterRoundVoice>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterRoundVideo extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterRoundVideo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterMyMentions extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterMyMentions>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterGeo extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterGeo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterContacts extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterContacts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagesFilterPinned extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagesFilterPinned>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateNewMessage extends TLObject {
    message: Raw.TypeMessage;
    pts: int;
    ptsCount: int;
    constructor(params: { message: Raw.TypeMessage; pts: int; ptsCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateNewMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateMessageID extends TLObject {
    id: int;
    randomId: long;
    constructor(params: { id: int; randomId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateMessageID>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDeleteMessages extends TLObject {
    messages: Vector<int>;
    pts: int;
    ptsCount: int;
    constructor(params: { messages: Vector<int>; pts: int; ptsCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDeleteMessages>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateUserTyping extends TLObject {
    userId: long;
    action: Raw.TypeSendMessageAction;
    constructor(params: { userId: long; action: Raw.TypeSendMessageAction });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateUserTyping>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChatUserTyping extends TLObject {
    chatId: long;
    fromId: Raw.TypePeer;
    action: Raw.TypeSendMessageAction;
    constructor(params: { chatId: long; fromId: Raw.TypePeer; action: Raw.TypeSendMessageAction });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChatUserTyping>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChatParticipants extends TLObject {
    participants: Raw.TypeChatParticipants;
    constructor(params: { participants: Raw.TypeChatParticipants });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChatParticipants>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateUserStatus extends TLObject {
    userId: long;
    status: Raw.TypeUserStatus;
    constructor(params: { userId: long; status: Raw.TypeUserStatus });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateUserStatus>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateUserName extends TLObject {
    userId: long;
    firstName: string;
    lastName: string;
    usernames: Vector<Raw.TypeUsername>;
    constructor(params: {
      userId: long;
      firstName: string;
      lastName: string;
      usernames: Vector<Raw.TypeUsername>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateUserName>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateNewAuthorization extends TLObject {
    unconfirmed?: boolean;
    hash: long;
    date?: int;
    device?: string;
    location?: string;
    constructor(params: {
      unconfirmed?: boolean;
      hash: long;
      date?: int;
      device?: string;
      location?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateNewAuthorization>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateNewEncryptedMessage extends TLObject {
    message: Raw.TypeEncryptedMessage;
    qts: int;
    constructor(params: { message: Raw.TypeEncryptedMessage; qts: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateNewEncryptedMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateEncryptedChatTyping extends TLObject {
    chatId: int;
    constructor(params: { chatId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateEncryptedChatTyping>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateEncryption extends TLObject {
    chat: Raw.TypeEncryptedChat;
    date: int;
    constructor(params: { chat: Raw.TypeEncryptedChat; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateEncryption>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateEncryptedMessagesRead extends TLObject {
    chatId: int;
    maxDate: int;
    date: int;
    constructor(params: { chatId: int; maxDate: int; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateEncryptedMessagesRead>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChatParticipantAdd extends TLObject {
    chatId: long;
    userId: long;
    inviterId: long;
    date: int;
    version: int;
    constructor(params: { chatId: long; userId: long; inviterId: long; date: int; version: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChatParticipantAdd>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChatParticipantDelete extends TLObject {
    chatId: long;
    userId: long;
    version: int;
    constructor(params: { chatId: long; userId: long; version: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChatParticipantDelete>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDcOptions extends TLObject {
    dcOptions: Vector<Raw.TypeDcOption>;
    constructor(params: { dcOptions: Vector<Raw.TypeDcOption> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDcOptions>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateNotifySettings extends TLObject {
    peer: Raw.TypeNotifyPeer;
    notifySettings: Raw.TypePeerNotifySettings;
    constructor(params: { peer: Raw.TypeNotifyPeer; notifySettings: Raw.TypePeerNotifySettings });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateNotifySettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateServiceNotification extends TLObject {
    popup?: boolean;
    invertMedia?: boolean;
    inboxDate?: int;
    type: string;
    message: string;
    media: Raw.TypeMessageMedia;
    entities: Vector<Raw.TypeMessageEntity>;
    constructor(params: {
      popup?: boolean;
      invertMedia?: boolean;
      inboxDate?: int;
      type: string;
      message: string;
      media: Raw.TypeMessageMedia;
      entities: Vector<Raw.TypeMessageEntity>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateServiceNotification>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePrivacy extends TLObject {
    key: Raw.TypePrivacyKey;
    rules: Vector<Raw.TypePrivacyRule>;
    constructor(params: { key: Raw.TypePrivacyKey; rules: Vector<Raw.TypePrivacyRule> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePrivacy>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateUserPhone extends TLObject {
    userId: long;
    phone: string;
    constructor(params: { userId: long; phone: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateUserPhone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateReadHistoryInbox extends TLObject {
    folderId?: int;
    peer: Raw.TypePeer;
    maxId: int;
    stillUnreadCount: int;
    pts: int;
    ptsCount: int;
    constructor(params: {
      folderId?: int;
      peer: Raw.TypePeer;
      maxId: int;
      stillUnreadCount: int;
      pts: int;
      ptsCount: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateReadHistoryInbox>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateReadHistoryOutbox extends TLObject {
    peer: Raw.TypePeer;
    maxId: int;
    pts: int;
    ptsCount: int;
    constructor(params: { peer: Raw.TypePeer; maxId: int; pts: int; ptsCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateReadHistoryOutbox>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateWebPage extends TLObject {
    webpage: Raw.TypeWebPage;
    pts: int;
    ptsCount: int;
    constructor(params: { webpage: Raw.TypeWebPage; pts: int; ptsCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateWebPage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateReadMessagesContents extends TLObject {
    messages: Vector<int>;
    pts: int;
    ptsCount: int;
    date?: int;
    constructor(params: { messages: Vector<int>; pts: int; ptsCount: int; date?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateReadMessagesContents>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannelTooLong extends TLObject {
    channelId: long;
    pts?: int;
    constructor(params: { channelId: long; pts?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannelTooLong>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannel extends TLObject {
    channelId: long;
    constructor(params: { channelId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannel>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateNewChannelMessage extends TLObject {
    message: Raw.TypeMessage;
    pts: int;
    ptsCount: int;
    constructor(params: { message: Raw.TypeMessage; pts: int; ptsCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateNewChannelMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateReadChannelInbox extends TLObject {
    folderId?: int;
    channelId: long;
    maxId: int;
    stillUnreadCount: int;
    pts: int;
    constructor(params: {
      folderId?: int;
      channelId: long;
      maxId: int;
      stillUnreadCount: int;
      pts: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateReadChannelInbox>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDeleteChannelMessages extends TLObject {
    channelId: long;
    messages: Vector<int>;
    pts: int;
    ptsCount: int;
    constructor(params: { channelId: long; messages: Vector<int>; pts: int; ptsCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDeleteChannelMessages>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannelMessageViews extends TLObject {
    channelId: long;
    id: int;
    views: int;
    constructor(params: { channelId: long; id: int; views: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannelMessageViews>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChatParticipantAdmin extends TLObject {
    chatId: long;
    userId: long;
    isAdmin: Bool;
    version: int;
    constructor(params: { chatId: long; userId: long; isAdmin: Bool; version: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChatParticipantAdmin>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateNewStickerSet extends TLObject {
    stickerset: Raw.messages.TypeStickerSet;
    constructor(params: { stickerset: Raw.messages.TypeStickerSet });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateNewStickerSet>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateStickerSetsOrder extends TLObject {
    masks?: boolean;
    emojis?: boolean;
    order: Vector<long>;
    constructor(params: { masks?: boolean; emojis?: boolean; order: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateStickerSetsOrder>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateStickerSets extends TLObject {
    masks?: boolean;
    emojis?: boolean;
    constructor(params: { masks?: boolean; emojis?: boolean });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateStickerSets>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateSavedGifs extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateSavedGifs>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotInlineQuery extends TLObject {
    queryId: long;
    userId: long;
    query: string;
    geo?: Raw.TypeGeoPoint;
    peerType?: Raw.TypeInlineQueryPeerType;
    offset: string;
    constructor(params: {
      queryId: long;
      userId: long;
      query: string;
      geo?: Raw.TypeGeoPoint;
      peerType?: Raw.TypeInlineQueryPeerType;
      offset: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotInlineQuery>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotInlineSend extends TLObject {
    userId: long;
    query: string;
    geo?: Raw.TypeGeoPoint;
    id: string;
    msgId?: Raw.TypeInputBotInlineMessageID;
    constructor(params: {
      userId: long;
      query: string;
      geo?: Raw.TypeGeoPoint;
      id: string;
      msgId?: Raw.TypeInputBotInlineMessageID;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotInlineSend>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateEditChannelMessage extends TLObject {
    message: Raw.TypeMessage;
    pts: int;
    ptsCount: int;
    constructor(params: { message: Raw.TypeMessage; pts: int; ptsCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateEditChannelMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotCallbackQuery extends TLObject {
    queryId: long;
    userId: long;
    peer: Raw.TypePeer;
    msgId: int;
    chatInstance: long;
    data?: bytes;
    gameShortName?: string;
    constructor(params: {
      queryId: long;
      userId: long;
      peer: Raw.TypePeer;
      msgId: int;
      chatInstance: long;
      data?: bytes;
      gameShortName?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotCallbackQuery>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateEditMessage extends TLObject {
    message: Raw.TypeMessage;
    pts: int;
    ptsCount: int;
    constructor(params: { message: Raw.TypeMessage; pts: int; ptsCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateEditMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateInlineBotCallbackQuery extends TLObject {
    queryId: long;
    userId: long;
    msgId: Raw.TypeInputBotInlineMessageID;
    chatInstance: long;
    data?: bytes;
    gameShortName?: string;
    constructor(params: {
      queryId: long;
      userId: long;
      msgId: Raw.TypeInputBotInlineMessageID;
      chatInstance: long;
      data?: bytes;
      gameShortName?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateInlineBotCallbackQuery>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateReadChannelOutbox extends TLObject {
    channelId: long;
    maxId: int;
    constructor(params: { channelId: long; maxId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateReadChannelOutbox>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDraftMessage extends TLObject {
    peer: Raw.TypePeer;
    topMsgId?: int;
    draft: Raw.TypeDraftMessage;
    constructor(params: { peer: Raw.TypePeer; topMsgId?: int; draft: Raw.TypeDraftMessage });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDraftMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateReadFeaturedStickers extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateReadFeaturedStickers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateRecentStickers extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateRecentStickers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateConfig extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateConfig>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePtsChanged extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePtsChanged>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannelWebPage extends TLObject {
    channelId: long;
    webpage: Raw.TypeWebPage;
    pts: int;
    ptsCount: int;
    constructor(params: { channelId: long; webpage: Raw.TypeWebPage; pts: int; ptsCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannelWebPage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDialogPinned extends TLObject {
    pinned?: boolean;
    folderId?: int;
    peer: Raw.TypeDialogPeer;
    constructor(params: { pinned?: boolean; folderId?: int; peer: Raw.TypeDialogPeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDialogPinned>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePinnedDialogs extends TLObject {
    folderId?: int;
    order?: Vector<Raw.TypeDialogPeer>;
    constructor(params: { folderId?: int; order?: Vector<Raw.TypeDialogPeer> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePinnedDialogs>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotWebhookJSON extends TLObject {
    data: Raw.TypeDataJSON;
    constructor(params: { data: Raw.TypeDataJSON });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotWebhookJSON>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotWebhookJSONQuery extends TLObject {
    queryId: long;
    data: Raw.TypeDataJSON;
    timeout: int;
    constructor(params: { queryId: long; data: Raw.TypeDataJSON; timeout: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotWebhookJSONQuery>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotShippingQuery extends TLObject {
    queryId: long;
    userId: long;
    payload: bytes;
    shippingAddress: Raw.TypePostAddress;
    constructor(params: {
      queryId: long;
      userId: long;
      payload: bytes;
      shippingAddress: Raw.TypePostAddress;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotShippingQuery>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotPrecheckoutQuery extends TLObject {
    queryId: long;
    userId: long;
    payload: bytes;
    info?: Raw.TypePaymentRequestedInfo;
    shippingOptionId?: string;
    currency: string;
    totalAmount: long;
    constructor(params: {
      queryId: long;
      userId: long;
      payload: bytes;
      info?: Raw.TypePaymentRequestedInfo;
      shippingOptionId?: string;
      currency: string;
      totalAmount: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotPrecheckoutQuery>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePhoneCall extends TLObject {
    phoneCall: Raw.TypePhoneCall;
    constructor(params: { phoneCall: Raw.TypePhoneCall });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePhoneCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateLangPackTooLong extends TLObject {
    langCode: string;
    constructor(params: { langCode: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateLangPackTooLong>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateLangPack extends TLObject {
    difference: Raw.TypeLangPackDifference;
    constructor(params: { difference: Raw.TypeLangPackDifference });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateLangPack>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateFavedStickers extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateFavedStickers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannelReadMessagesContents extends TLObject {
    channelId: long;
    topMsgId?: int;
    messages: Vector<int>;
    constructor(params: { channelId: long; topMsgId?: int; messages: Vector<int> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannelReadMessagesContents>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateContactsReset extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateContactsReset>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannelAvailableMessages extends TLObject {
    channelId: long;
    availableMinId: int;
    constructor(params: { channelId: long; availableMinId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannelAvailableMessages>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDialogUnreadMark extends TLObject {
    unread?: boolean;
    peer: Raw.TypeDialogPeer;
    constructor(params: { unread?: boolean; peer: Raw.TypeDialogPeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDialogUnreadMark>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateMessagePoll extends TLObject {
    pollId: long;
    poll?: Raw.TypePoll;
    results: Raw.TypePollResults;
    constructor(params: { pollId: long; poll?: Raw.TypePoll; results: Raw.TypePollResults });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateMessagePoll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChatDefaultBannedRights extends TLObject {
    peer: Raw.TypePeer;
    defaultBannedRights: Raw.TypeChatBannedRights;
    version: int;
    constructor(params: {
      peer: Raw.TypePeer;
      defaultBannedRights: Raw.TypeChatBannedRights;
      version: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChatDefaultBannedRights>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateFolderPeers extends TLObject {
    folderPeers: Vector<Raw.TypeFolderPeer>;
    pts: int;
    ptsCount: int;
    constructor(params: { folderPeers: Vector<Raw.TypeFolderPeer>; pts: int; ptsCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateFolderPeers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePeerSettings extends TLObject {
    peer: Raw.TypePeer;
    settings: Raw.TypePeerSettings;
    constructor(params: { peer: Raw.TypePeer; settings: Raw.TypePeerSettings });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePeerSettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePeerLocated extends TLObject {
    peers: Vector<Raw.TypePeerLocated>;
    constructor(params: { peers: Vector<Raw.TypePeerLocated> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePeerLocated>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateNewScheduledMessage extends TLObject {
    message: Raw.TypeMessage;
    constructor(params: { message: Raw.TypeMessage });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateNewScheduledMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDeleteScheduledMessages extends TLObject {
    peer: Raw.TypePeer;
    messages: Vector<int>;
    constructor(params: { peer: Raw.TypePeer; messages: Vector<int> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDeleteScheduledMessages>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateTheme extends TLObject {
    theme: Raw.TypeTheme;
    constructor(params: { theme: Raw.TypeTheme });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateTheme>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateGeoLiveViewed extends TLObject {
    peer: Raw.TypePeer;
    msgId: int;
    constructor(params: { peer: Raw.TypePeer; msgId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateGeoLiveViewed>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateLoginToken extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateLoginToken>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateMessagePollVote extends TLObject {
    pollId: long;
    peer: Raw.TypePeer;
    options: Vector<bytes>;
    qts: int;
    constructor(params: { pollId: long; peer: Raw.TypePeer; options: Vector<bytes>; qts: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateMessagePollVote>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDialogFilter extends TLObject {
    id: int;
    filter?: Raw.TypeDialogFilter;
    constructor(params: { id: int; filter?: Raw.TypeDialogFilter });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDialogFilter>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDialogFilterOrder extends TLObject {
    order: Vector<int>;
    constructor(params: { order: Vector<int> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDialogFilterOrder>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDialogFilters extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDialogFilters>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePhoneCallSignalingData extends TLObject {
    phoneCallId: long;
    data: bytes;
    constructor(params: { phoneCallId: long; data: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePhoneCallSignalingData>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannelMessageForwards extends TLObject {
    channelId: long;
    id: int;
    forwards: int;
    constructor(params: { channelId: long; id: int; forwards: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannelMessageForwards>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateReadChannelDiscussionInbox extends TLObject {
    channelId: long;
    topMsgId: int;
    readMaxId: int;
    broadcastId?: long;
    broadcastPost?: int;
    constructor(params: {
      channelId: long;
      topMsgId: int;
      readMaxId: int;
      broadcastId?: long;
      broadcastPost?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateReadChannelDiscussionInbox>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateReadChannelDiscussionOutbox extends TLObject {
    channelId: long;
    topMsgId: int;
    readMaxId: int;
    constructor(params: { channelId: long; topMsgId: int; readMaxId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateReadChannelDiscussionOutbox>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePeerBlocked extends TLObject {
    blocked?: boolean;
    blockedMyStoriesFrom?: boolean;
    peerId: Raw.TypePeer;
    constructor(params: {
      blocked?: boolean;
      blockedMyStoriesFrom?: boolean;
      peerId: Raw.TypePeer;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePeerBlocked>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannelUserTyping extends TLObject {
    channelId: long;
    topMsgId?: int;
    fromId: Raw.TypePeer;
    action: Raw.TypeSendMessageAction;
    constructor(params: {
      channelId: long;
      topMsgId?: int;
      fromId: Raw.TypePeer;
      action: Raw.TypeSendMessageAction;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannelUserTyping>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePinnedMessages extends TLObject {
    pinned?: boolean;
    peer: Raw.TypePeer;
    messages: Vector<int>;
    pts: int;
    ptsCount: int;
    constructor(params: {
      pinned?: boolean;
      peer: Raw.TypePeer;
      messages: Vector<int>;
      pts: int;
      ptsCount: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePinnedMessages>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePinnedChannelMessages extends TLObject {
    pinned?: boolean;
    channelId: long;
    messages: Vector<int>;
    pts: int;
    ptsCount: int;
    constructor(params: {
      pinned?: boolean;
      channelId: long;
      messages: Vector<int>;
      pts: int;
      ptsCount: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePinnedChannelMessages>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChat extends TLObject {
    chatId: long;
    constructor(params: { chatId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateGroupCallParticipants extends TLObject {
    call: Raw.TypeInputGroupCall;
    participants: Vector<Raw.TypeGroupCallParticipant>;
    version: int;
    constructor(params: {
      call: Raw.TypeInputGroupCall;
      participants: Vector<Raw.TypeGroupCallParticipant>;
      version: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateGroupCallParticipants>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateGroupCall extends TLObject {
    chatId: long;
    call: Raw.TypeGroupCall;
    constructor(params: { chatId: long; call: Raw.TypeGroupCall });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateGroupCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePeerHistoryTTL extends TLObject {
    peer: Raw.TypePeer;
    ttlPeriod?: int;
    constructor(params: { peer: Raw.TypePeer; ttlPeriod?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePeerHistoryTTL>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChatParticipant extends TLObject {
    chatId: long;
    date: int;
    actorId: long;
    userId: long;
    prevParticipant?: Raw.TypeChatParticipant;
    newParticipant?: Raw.TypeChatParticipant;
    invite?: Raw.TypeExportedChatInvite;
    qts: int;
    constructor(params: {
      chatId: long;
      date: int;
      actorId: long;
      userId: long;
      prevParticipant?: Raw.TypeChatParticipant;
      newParticipant?: Raw.TypeChatParticipant;
      invite?: Raw.TypeExportedChatInvite;
      qts: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChatParticipant>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannelParticipant extends TLObject {
    viaChatlist?: boolean;
    channelId: long;
    date: int;
    actorId: long;
    userId: long;
    prevParticipant?: Raw.TypeChannelParticipant;
    newParticipant?: Raw.TypeChannelParticipant;
    invite?: Raw.TypeExportedChatInvite;
    qts: int;
    constructor(params: {
      viaChatlist?: boolean;
      channelId: long;
      date: int;
      actorId: long;
      userId: long;
      prevParticipant?: Raw.TypeChannelParticipant;
      newParticipant?: Raw.TypeChannelParticipant;
      invite?: Raw.TypeExportedChatInvite;
      qts: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannelParticipant>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotStopped extends TLObject {
    userId: long;
    date: int;
    stopped: Bool;
    qts: int;
    constructor(params: { userId: long; date: int; stopped: Bool; qts: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotStopped>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateGroupCallConnection extends TLObject {
    presentation?: boolean;
    params: Raw.TypeDataJSON;
    constructor(params: { presentation?: boolean; params: Raw.TypeDataJSON });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateGroupCallConnection>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotCommands extends TLObject {
    peer: Raw.TypePeer;
    botId: long;
    commands: Vector<Raw.TypeBotCommand>;
    constructor(params: { peer: Raw.TypePeer; botId: long; commands: Vector<Raw.TypeBotCommand> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotCommands>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePendingJoinRequests extends TLObject {
    peer: Raw.TypePeer;
    requestsPending: int;
    recentRequesters: Vector<long>;
    constructor(params: {
      peer: Raw.TypePeer;
      requestsPending: int;
      recentRequesters: Vector<long>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePendingJoinRequests>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotChatInviteRequester extends TLObject {
    peer: Raw.TypePeer;
    date: int;
    userId: long;
    about: string;
    invite: Raw.TypeExportedChatInvite;
    qts: int;
    constructor(params: {
      peer: Raw.TypePeer;
      date: int;
      userId: long;
      about: string;
      invite: Raw.TypeExportedChatInvite;
      qts: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotChatInviteRequester>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateMessageReactions extends TLObject {
    peer: Raw.TypePeer;
    msgId: int;
    topMsgId?: int;
    reactions: Raw.TypeMessageReactions;
    constructor(params: {
      peer: Raw.TypePeer;
      msgId: int;
      topMsgId?: int;
      reactions: Raw.TypeMessageReactions;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateMessageReactions>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateAttachMenuBots extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateAttachMenuBots>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateWebViewResultSent extends TLObject {
    queryId: long;
    constructor(params: { queryId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateWebViewResultSent>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotMenuButton extends TLObject {
    botId: long;
    button: Raw.TypeBotMenuButton;
    constructor(params: { botId: long; button: Raw.TypeBotMenuButton });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotMenuButton>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateSavedRingtones extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateSavedRingtones>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateTranscribedAudio extends TLObject {
    pending?: boolean;
    peer: Raw.TypePeer;
    msgId: int;
    transcriptionId: long;
    text: string;
    constructor(params: {
      pending?: boolean;
      peer: Raw.TypePeer;
      msgId: int;
      transcriptionId: long;
      text: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateTranscribedAudio>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateReadFeaturedEmojiStickers extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateReadFeaturedEmojiStickers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateUserEmojiStatus extends TLObject {
    userId: long;
    emojiStatus: Raw.TypeEmojiStatus;
    constructor(params: { userId: long; emojiStatus: Raw.TypeEmojiStatus });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateUserEmojiStatus>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateRecentEmojiStatuses extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateRecentEmojiStatuses>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateRecentReactions extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateRecentReactions>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateMoveStickerSetToTop extends TLObject {
    masks?: boolean;
    emojis?: boolean;
    stickerset: long;
    constructor(params: { masks?: boolean; emojis?: boolean; stickerset: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateMoveStickerSetToTop>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateMessageExtendedMedia extends TLObject {
    peer: Raw.TypePeer;
    msgId: int;
    extendedMedia: Raw.TypeMessageExtendedMedia;
    constructor(params: {
      peer: Raw.TypePeer;
      msgId: int;
      extendedMedia: Raw.TypeMessageExtendedMedia;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateMessageExtendedMedia>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannelPinnedTopic extends TLObject {
    pinned?: boolean;
    channelId: long;
    topicId: int;
    constructor(params: { pinned?: boolean; channelId: long; topicId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannelPinnedTopic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannelPinnedTopics extends TLObject {
    channelId: long;
    order?: Vector<int>;
    constructor(params: { channelId: long; order?: Vector<int> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannelPinnedTopics>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateUser extends TLObject {
    userId: long;
    constructor(params: { userId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateUser>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateAutoSaveSettings extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateAutoSaveSettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateStory extends TLObject {
    peer: Raw.TypePeer;
    story: Raw.TypeStoryItem;
    constructor(params: { peer: Raw.TypePeer; story: Raw.TypeStoryItem });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateStory>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateReadStories extends TLObject {
    peer: Raw.TypePeer;
    maxId: int;
    constructor(params: { peer: Raw.TypePeer; maxId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateReadStories>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateStoryID extends TLObject {
    id: int;
    randomId: long;
    constructor(params: { id: int; randomId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateStoryID>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateStoriesStealthMode extends TLObject {
    stealthMode: Raw.TypeStoriesStealthMode;
    constructor(params: { stealthMode: Raw.TypeStoriesStealthMode });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateStoriesStealthMode>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateSentStoryReaction extends TLObject {
    peer: Raw.TypePeer;
    storyId: int;
    reaction: Raw.TypeReaction;
    constructor(params: { peer: Raw.TypePeer; storyId: int; reaction: Raw.TypeReaction });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateSentStoryReaction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotChatBoost extends TLObject {
    peer: Raw.TypePeer;
    boost: Raw.TypeBoost;
    qts: int;
    constructor(params: { peer: Raw.TypePeer; boost: Raw.TypeBoost; qts: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotChatBoost>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateChannelViewForumAsMessages extends TLObject {
    channelId: long;
    enabled: Bool;
    constructor(params: { channelId: long; enabled: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateChannelViewForumAsMessages>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePeerWallpaper extends TLObject {
    wallpaperOverridden?: boolean;
    peer: Raw.TypePeer;
    wallpaper?: Raw.TypeWallPaper;
    constructor(params: {
      wallpaperOverridden?: boolean;
      peer: Raw.TypePeer;
      wallpaper?: Raw.TypeWallPaper;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePeerWallpaper>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotMessageReaction extends TLObject {
    peer: Raw.TypePeer;
    msgId: int;
    date: int;
    actor: Raw.TypePeer;
    oldReactions: Vector<Raw.TypeReaction>;
    newReactions: Vector<Raw.TypeReaction>;
    qts: int;
    constructor(params: {
      peer: Raw.TypePeer;
      msgId: int;
      date: int;
      actor: Raw.TypePeer;
      oldReactions: Vector<Raw.TypeReaction>;
      newReactions: Vector<Raw.TypeReaction>;
      qts: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotMessageReaction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotMessageReactions extends TLObject {
    peer: Raw.TypePeer;
    msgId: int;
    date: int;
    reactions: Vector<Raw.TypeReactionCount>;
    qts: int;
    constructor(params: {
      peer: Raw.TypePeer;
      msgId: int;
      date: int;
      reactions: Vector<Raw.TypeReactionCount>;
      qts: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotMessageReactions>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateSavedDialogPinned extends TLObject {
    pinned?: boolean;
    peer: Raw.TypeDialogPeer;
    constructor(params: { pinned?: boolean; peer: Raw.TypeDialogPeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateSavedDialogPinned>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatePinnedSavedDialogs extends TLObject {
    order?: Vector<Raw.TypeDialogPeer>;
    constructor(params: { order?: Vector<Raw.TypeDialogPeer> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatePinnedSavedDialogs>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateSavedReactionTags extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateSavedReactionTags>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateSmsJob extends TLObject {
    jobId: string;
    constructor(params: { jobId: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateSmsJob>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateQuickReplies extends TLObject {
    quickReplies: Vector<Raw.TypeQuickReply>;
    constructor(params: { quickReplies: Vector<Raw.TypeQuickReply> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateQuickReplies>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateNewQuickReply extends TLObject {
    quickReply: Raw.TypeQuickReply;
    constructor(params: { quickReply: Raw.TypeQuickReply });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateNewQuickReply>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDeleteQuickReply extends TLObject {
    shortcutId: int;
    constructor(params: { shortcutId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDeleteQuickReply>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateQuickReplyMessage extends TLObject {
    message: Raw.TypeMessage;
    constructor(params: { message: Raw.TypeMessage });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateQuickReplyMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateDeleteQuickReplyMessages extends TLObject {
    shortcutId: int;
    messages: Vector<int>;
    constructor(params: { shortcutId: int; messages: Vector<int> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateDeleteQuickReplyMessages>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotBusinessConnect extends TLObject {
    connection: Raw.TypeBotBusinessConnection;
    qts: int;
    constructor(params: { connection: Raw.TypeBotBusinessConnection; qts: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotBusinessConnect>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotNewBusinessMessage extends TLObject {
    connectionId: string;
    message: Raw.TypeMessage;
    replyToMessage?: Raw.TypeMessage;
    qts: int;
    constructor(params: {
      connectionId: string;
      message: Raw.TypeMessage;
      replyToMessage?: Raw.TypeMessage;
      qts: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotNewBusinessMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotEditBusinessMessage extends TLObject {
    connectionId: string;
    message: Raw.TypeMessage;
    replyToMessage?: Raw.TypeMessage;
    qts: int;
    constructor(params: {
      connectionId: string;
      message: Raw.TypeMessage;
      replyToMessage?: Raw.TypeMessage;
      qts: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotEditBusinessMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateBotDeleteBusinessMessage extends TLObject {
    connectionId: string;
    peer: Raw.TypePeer;
    messages: Vector<int>;
    qts: int;
    constructor(params: {
      connectionId: string;
      peer: Raw.TypePeer;
      messages: Vector<int>;
      qts: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateBotDeleteBusinessMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateNewStoryReaction extends TLObject {
    storyId: int;
    peer: Raw.TypePeer;
    reaction: Raw.TypeReaction;
    constructor(params: { storyId: int; peer: Raw.TypePeer; reaction: Raw.TypeReaction });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateNewStoryReaction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatesTooLong extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatesTooLong>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateShortMessage extends TLObject {
    out?: boolean;
    mentioned?: boolean;
    mediaUnread?: boolean;
    silent?: boolean;
    id: int;
    userId: long;
    message: string;
    pts: int;
    ptsCount: int;
    date: int;
    fwdFrom?: Raw.TypeMessageFwdHeader;
    viaBotId?: long;
    replyTo?: Raw.TypeMessageReplyHeader;
    entities?: Vector<Raw.TypeMessageEntity>;
    ttlPeriod?: int;
    constructor(params: {
      out?: boolean;
      mentioned?: boolean;
      mediaUnread?: boolean;
      silent?: boolean;
      id: int;
      userId: long;
      message: string;
      pts: int;
      ptsCount: int;
      date: int;
      fwdFrom?: Raw.TypeMessageFwdHeader;
      viaBotId?: long;
      replyTo?: Raw.TypeMessageReplyHeader;
      entities?: Vector<Raw.TypeMessageEntity>;
      ttlPeriod?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateShortMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateShortChatMessage extends TLObject {
    out?: boolean;
    mentioned?: boolean;
    mediaUnread?: boolean;
    silent?: boolean;
    id: int;
    fromId: long;
    chatId: long;
    message: string;
    pts: int;
    ptsCount: int;
    date: int;
    fwdFrom?: Raw.TypeMessageFwdHeader;
    viaBotId?: long;
    replyTo?: Raw.TypeMessageReplyHeader;
    entities?: Vector<Raw.TypeMessageEntity>;
    ttlPeriod?: int;
    constructor(params: {
      out?: boolean;
      mentioned?: boolean;
      mediaUnread?: boolean;
      silent?: boolean;
      id: int;
      fromId: long;
      chatId: long;
      message: string;
      pts: int;
      ptsCount: int;
      date: int;
      fwdFrom?: Raw.TypeMessageFwdHeader;
      viaBotId?: long;
      replyTo?: Raw.TypeMessageReplyHeader;
      entities?: Vector<Raw.TypeMessageEntity>;
      ttlPeriod?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateShortChatMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateShort extends TLObject {
    update: Raw.TypeUpdate;
    date: int;
    constructor(params: { update: Raw.TypeUpdate; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateShort>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdatesCombined extends TLObject {
    updates: Vector<Raw.TypeUpdate>;
    users: Vector<Raw.TypeUser>;
    chats: Vector<Raw.TypeChat>;
    date: int;
    seqStart: int;
    seq: int;
    constructor(params: {
      updates: Vector<Raw.TypeUpdate>;
      users: Vector<Raw.TypeUser>;
      chats: Vector<Raw.TypeChat>;
      date: int;
      seqStart: int;
      seq: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdatesCombined>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Updates extends TLObject {
    updates: Vector<Raw.TypeUpdate>;
    users: Vector<Raw.TypeUser>;
    chats: Vector<Raw.TypeChat>;
    date: int;
    seq: int;
    constructor(params: {
      updates: Vector<Raw.TypeUpdate>;
      users: Vector<Raw.TypeUser>;
      chats: Vector<Raw.TypeChat>;
      date: int;
      seq: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Updates>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UpdateShortSentMessage extends TLObject {
    out?: boolean;
    id: int;
    pts: int;
    ptsCount: int;
    date: int;
    media?: Raw.TypeMessageMedia;
    entities?: Vector<Raw.TypeMessageEntity>;
    ttlPeriod?: int;
    constructor(params: {
      out?: boolean;
      id: int;
      pts: int;
      ptsCount: int;
      date: int;
      media?: Raw.TypeMessageMedia;
      entities?: Vector<Raw.TypeMessageEntity>;
      ttlPeriod?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UpdateShortSentMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DcOption extends TLObject {
    ipv6?: boolean;
    mediaOnly?: boolean;
    tcpoOnly?: boolean;
    cdn?: boolean;
    static?: boolean;
    thisPortOnly?: boolean;
    id: int;
    ipAddress: string;
    port: int;
    secret?: bytes;
    constructor(params: {
      ipv6?: boolean;
      mediaOnly?: boolean;
      tcpoOnly?: boolean;
      cdn?: boolean;
      static?: boolean;
      thisPortOnly?: boolean;
      id: int;
      ipAddress: string;
      port: int;
      secret?: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DcOption>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Config extends TLObject {
    defaultP2pContacts?: boolean;
    preloadFeaturedStickers?: boolean;
    revokePmInbox?: boolean;
    blockedMode?: boolean;
    forceTryIpv6?: boolean;
    date: int;
    expires: int;
    testMode: Bool;
    thisDc: int;
    dcOptions: Vector<Raw.TypeDcOption>;
    dcTxtDomainName: string;
    chatSizeMax: int;
    megagroupSizeMax: int;
    forwardedCountMax: int;
    onlineUpdatePeriodMs: int;
    offlineBlurTimeoutMs: int;
    offlineIdleTimeoutMs: int;
    onlineCloudTimeoutMs: int;
    notifyCloudDelayMs: int;
    notifyDefaultDelayMs: int;
    pushChatPeriodMs: int;
    pushChatLimit: int;
    editTimeLimit: int;
    revokeTimeLimit: int;
    revokePmTimeLimit: int;
    ratingEDecay: int;
    stickersRecentLimit: int;
    channelsReadMediaPeriod: int;
    tmpSessions?: int;
    callReceiveTimeoutMs: int;
    callRingTimeoutMs: int;
    callConnectTimeoutMs: int;
    callPacketTimeoutMs: int;
    meUrlPrefix: string;
    autoupdateUrlPrefix?: string;
    gifSearchUsername?: string;
    venueSearchUsername?: string;
    imgSearchUsername?: string;
    staticMapsProvider?: string;
    captionLengthMax: int;
    messageLengthMax: int;
    webfileDcId: int;
    suggestedLangCode?: string;
    langPackVersion?: int;
    baseLangPackVersion?: int;
    reactionsDefault?: Raw.TypeReaction;
    autologinToken?: string;
    constructor(params: {
      defaultP2pContacts?: boolean;
      preloadFeaturedStickers?: boolean;
      revokePmInbox?: boolean;
      blockedMode?: boolean;
      forceTryIpv6?: boolean;
      date: int;
      expires: int;
      testMode: Bool;
      thisDc: int;
      dcOptions: Vector<Raw.TypeDcOption>;
      dcTxtDomainName: string;
      chatSizeMax: int;
      megagroupSizeMax: int;
      forwardedCountMax: int;
      onlineUpdatePeriodMs: int;
      offlineBlurTimeoutMs: int;
      offlineIdleTimeoutMs: int;
      onlineCloudTimeoutMs: int;
      notifyCloudDelayMs: int;
      notifyDefaultDelayMs: int;
      pushChatPeriodMs: int;
      pushChatLimit: int;
      editTimeLimit: int;
      revokeTimeLimit: int;
      revokePmTimeLimit: int;
      ratingEDecay: int;
      stickersRecentLimit: int;
      channelsReadMediaPeriod: int;
      tmpSessions?: int;
      callReceiveTimeoutMs: int;
      callRingTimeoutMs: int;
      callConnectTimeoutMs: int;
      callPacketTimeoutMs: int;
      meUrlPrefix: string;
      autoupdateUrlPrefix?: string;
      gifSearchUsername?: string;
      venueSearchUsername?: string;
      imgSearchUsername?: string;
      staticMapsProvider?: string;
      captionLengthMax: int;
      messageLengthMax: int;
      webfileDcId: int;
      suggestedLangCode?: string;
      langPackVersion?: int;
      baseLangPackVersion?: int;
      reactionsDefault?: Raw.TypeReaction;
      autologinToken?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Config>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class NearestDc extends TLObject {
    country: string;
    thisDc: int;
    nearestDc: int;
    constructor(params: { country: string; thisDc: int; nearestDc: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.NearestDc>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EncryptedChatEmpty extends TLObject {
    id: int;
    constructor(params: { id: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EncryptedChatEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EncryptedChatWaiting extends TLObject {
    id: int;
    accessHash: long;
    date: int;
    adminId: long;
    participantId: long;
    constructor(params: {
      id: int;
      accessHash: long;
      date: int;
      adminId: long;
      participantId: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EncryptedChatWaiting>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EncryptedChatRequested extends TLObject {
    folderId?: int;
    id: int;
    accessHash: long;
    date: int;
    adminId: long;
    participantId: long;
    gA: bytes;
    constructor(params: {
      folderId?: int;
      id: int;
      accessHash: long;
      date: int;
      adminId: long;
      participantId: long;
      gA: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EncryptedChatRequested>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EncryptedChat extends TLObject {
    id: int;
    accessHash: long;
    date: int;
    adminId: long;
    participantId: long;
    gAOrB: bytes;
    keyFingerprint: long;
    constructor(params: {
      id: int;
      accessHash: long;
      date: int;
      adminId: long;
      participantId: long;
      gAOrB: bytes;
      keyFingerprint: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EncryptedChat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EncryptedChatDiscarded extends TLObject {
    historyDeleted?: boolean;
    id: int;
    constructor(params: { historyDeleted?: boolean; id: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EncryptedChatDiscarded>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputEncryptedChat extends TLObject {
    chatId: int;
    accessHash: long;
    constructor(params: { chatId: int; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputEncryptedChat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EncryptedFileEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EncryptedFileEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EncryptedFile extends TLObject {
    id: long;
    accessHash: long;
    size: long;
    dcId: int;
    keyFingerprint: int;
    constructor(params: { id: long; accessHash: long; size: long; dcId: int; keyFingerprint: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EncryptedFile>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputEncryptedFileEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputEncryptedFileEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputEncryptedFileUploaded extends TLObject {
    id: long;
    parts: int;
    md5Checksum: string;
    keyFingerprint: int;
    constructor(params: { id: long; parts: int; md5Checksum: string; keyFingerprint: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputEncryptedFileUploaded>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputEncryptedFile extends TLObject {
    id: long;
    accessHash: long;
    constructor(params: { id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputEncryptedFile>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputEncryptedFileBigUploaded extends TLObject {
    id: long;
    parts: int;
    keyFingerprint: int;
    constructor(params: { id: long; parts: int; keyFingerprint: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputEncryptedFileBigUploaded>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EncryptedMessage extends TLObject {
    randomId: long;
    chatId: int;
    date: int;
    bytes: bytes;
    file: Raw.TypeEncryptedFile;
    constructor(params: {
      randomId: long;
      chatId: int;
      date: int;
      bytes: bytes;
      file: Raw.TypeEncryptedFile;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EncryptedMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EncryptedMessageService extends TLObject {
    randomId: long;
    chatId: int;
    date: int;
    bytes: bytes;
    constructor(params: { randomId: long; chatId: int; date: int; bytes: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EncryptedMessageService>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputDocumentEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputDocumentEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputDocument extends TLObject {
    id: long;
    accessHash: long;
    fileReference: bytes;
    constructor(params: { id: long; accessHash: long; fileReference: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputDocument>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentEmpty extends TLObject {
    id: long;
    constructor(params: { id: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Document extends TLObject {
    id: long;
    accessHash: long;
    fileReference: bytes;
    date: int;
    mimeType: string;
    size: long;
    thumbs?: Vector<Raw.TypePhotoSize>;
    videoThumbs?: Vector<Raw.TypeVideoSize>;
    dcId: int;
    attributes: Vector<Raw.TypeDocumentAttribute>;
    constructor(params: {
      id: long;
      accessHash: long;
      fileReference: bytes;
      date: int;
      mimeType: string;
      size: long;
      thumbs?: Vector<Raw.TypePhotoSize>;
      videoThumbs?: Vector<Raw.TypeVideoSize>;
      dcId: int;
      attributes: Vector<Raw.TypeDocumentAttribute>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Document>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class NotifyPeer extends TLObject {
    peer: Raw.TypePeer;
    constructor(params: { peer: Raw.TypePeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.NotifyPeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class NotifyUsers extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.NotifyUsers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class NotifyChats extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.NotifyChats>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class NotifyBroadcasts extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.NotifyBroadcasts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class NotifyForumTopic extends TLObject {
    peer: Raw.TypePeer;
    topMsgId: int;
    constructor(params: { peer: Raw.TypePeer; topMsgId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.NotifyForumTopic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageTypingAction extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageTypingAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageCancelAction extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageCancelAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageRecordVideoAction extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageRecordVideoAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageUploadVideoAction extends TLObject {
    progress: int;
    constructor(params: { progress: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageUploadVideoAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageRecordAudioAction extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageRecordAudioAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageUploadAudioAction extends TLObject {
    progress: int;
    constructor(params: { progress: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageUploadAudioAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageUploadPhotoAction extends TLObject {
    progress: int;
    constructor(params: { progress: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageUploadPhotoAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageUploadDocumentAction extends TLObject {
    progress: int;
    constructor(params: { progress: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageUploadDocumentAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageGeoLocationAction extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageGeoLocationAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageChooseContactAction extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageChooseContactAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageGamePlayAction extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageGamePlayAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageRecordRoundAction extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageRecordRoundAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageUploadRoundAction extends TLObject {
    progress: int;
    constructor(params: { progress: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageUploadRoundAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SpeakingInGroupCallAction extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SpeakingInGroupCallAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageHistoryImportAction extends TLObject {
    progress: int;
    constructor(params: { progress: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageHistoryImportAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageChooseStickerAction extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageChooseStickerAction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageEmojiInteraction extends TLObject {
    emoticon: string;
    msgId: int;
    interaction: Raw.TypeDataJSON;
    constructor(params: { emoticon: string; msgId: int; interaction: Raw.TypeDataJSON });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageEmojiInteraction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageEmojiInteractionSeen extends TLObject {
    emoticon: string;
    constructor(params: { emoticon: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageEmojiInteractionSeen>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyKeyStatusTimestamp extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyKeyStatusTimestamp>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyKeyChatInvite extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyKeyChatInvite>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyKeyPhoneCall extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyKeyPhoneCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyKeyPhoneP2P extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyKeyPhoneP2P>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyKeyForwards extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyKeyForwards>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyKeyProfilePhoto extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyKeyProfilePhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyKeyPhoneNumber extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyKeyPhoneNumber>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyKeyAddedByPhone extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyKeyAddedByPhone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyKeyVoiceMessages extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyKeyVoiceMessages>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyKeyAbout extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyKeyAbout>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyKeyBirthday extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyKeyBirthday>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyKeyStatusTimestamp extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyKeyStatusTimestamp>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyKeyChatInvite extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyKeyChatInvite>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyKeyPhoneCall extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyKeyPhoneCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyKeyPhoneP2P extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyKeyPhoneP2P>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyKeyForwards extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyKeyForwards>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyKeyProfilePhoto extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyKeyProfilePhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyKeyPhoneNumber extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyKeyPhoneNumber>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyKeyAddedByPhone extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyKeyAddedByPhone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyKeyVoiceMessages extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyKeyVoiceMessages>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyKeyAbout extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyKeyAbout>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyKeyBirthday extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyKeyBirthday>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyValueAllowContacts extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyValueAllowContacts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyValueAllowAll extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyValueAllowAll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyValueAllowUsers extends TLObject {
    users: Vector<Raw.TypeInputUser>;
    constructor(params: { users: Vector<Raw.TypeInputUser> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyValueAllowUsers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyValueDisallowContacts extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyValueDisallowContacts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyValueDisallowAll extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyValueDisallowAll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyValueDisallowUsers extends TLObject {
    users: Vector<Raw.TypeInputUser>;
    constructor(params: { users: Vector<Raw.TypeInputUser> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyValueDisallowUsers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyValueAllowChatParticipants extends TLObject {
    chats: Vector<long>;
    constructor(params: { chats: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.InputPrivacyValueAllowChatParticipants>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyValueDisallowChatParticipants extends TLObject {
    chats: Vector<long>;
    constructor(params: { chats: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.InputPrivacyValueDisallowChatParticipants>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyValueAllowCloseFriends extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyValueAllowCloseFriends>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPrivacyValueAllowPremium extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPrivacyValueAllowPremium>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyValueAllowContacts extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyValueAllowContacts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyValueAllowAll extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyValueAllowAll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyValueAllowUsers extends TLObject {
    users: Vector<long>;
    constructor(params: { users: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyValueAllowUsers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyValueDisallowContacts extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyValueDisallowContacts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyValueDisallowAll extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyValueDisallowAll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyValueDisallowUsers extends TLObject {
    users: Vector<long>;
    constructor(params: { users: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyValueDisallowUsers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyValueAllowChatParticipants extends TLObject {
    chats: Vector<long>;
    constructor(params: { chats: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyValueAllowChatParticipants>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyValueDisallowChatParticipants extends TLObject {
    chats: Vector<long>;
    constructor(params: { chats: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyValueDisallowChatParticipants>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyValueAllowCloseFriends extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyValueAllowCloseFriends>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrivacyValueAllowPremium extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrivacyValueAllowPremium>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AccountDaysTTL extends TLObject {
    days: int;
    constructor(params: { days: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AccountDaysTTL>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeImageSize extends TLObject {
    w: int;
    h: int;
    constructor(params: { w: int; h: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeImageSize>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeAnimated extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeAnimated>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeSticker extends TLObject {
    mask?: boolean;
    alt: string;
    stickerset: Raw.TypeInputStickerSet;
    maskCoords?: Raw.TypeMaskCoords;
    constructor(params: {
      mask?: boolean;
      alt: string;
      stickerset: Raw.TypeInputStickerSet;
      maskCoords?: Raw.TypeMaskCoords;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeSticker>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeVideo extends TLObject {
    roundMessage?: boolean;
    supportsStreaming?: boolean;
    nosound?: boolean;
    duration: double;
    w: int;
    h: int;
    preloadPrefixSize?: int;
    constructor(params: {
      roundMessage?: boolean;
      supportsStreaming?: boolean;
      nosound?: boolean;
      duration: double;
      w: int;
      h: int;
      preloadPrefixSize?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeVideo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeAudio extends TLObject {
    voice?: boolean;
    duration: int;
    title?: string;
    performer?: string;
    waveform?: bytes;
    constructor(params: {
      voice?: boolean;
      duration: int;
      title?: string;
      performer?: string;
      waveform?: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeAudio>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeFilename extends TLObject {
    fileName: string;
    constructor(params: { fileName: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeFilename>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeHasStickers extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeHasStickers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeCustomEmoji extends TLObject {
    free?: boolean;
    textColor?: boolean;
    alt: string;
    stickerset: Raw.TypeInputStickerSet;
    constructor(params: {
      free?: boolean;
      textColor?: boolean;
      alt: string;
      stickerset: Raw.TypeInputStickerSet;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeCustomEmoji>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StickerPack extends TLObject {
    emoticon: string;
    documents: Vector<long>;
    constructor(params: { emoticon: string; documents: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StickerPack>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebPageEmpty extends TLObject {
    id: long;
    url?: string;
    constructor(params: { id: long; url?: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebPageEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebPagePending extends TLObject {
    id: long;
    url?: string;
    date: int;
    constructor(params: { id: long; url?: string; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebPagePending>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebPage extends TLObject {
    hasLargeMedia?: boolean;
    id: long;
    url: string;
    displayUrl: string;
    hash: int;
    type?: string;
    siteName?: string;
    title?: string;
    description?: string;
    photo?: Raw.TypePhoto;
    embedUrl?: string;
    embedType?: string;
    embedWidth?: int;
    embedHeight?: int;
    duration?: int;
    author?: string;
    document?: Raw.TypeDocument;
    cachedPage?: Raw.TypePage;
    attributes?: Vector<Raw.TypeWebPageAttribute>;
    constructor(params: {
      hasLargeMedia?: boolean;
      id: long;
      url: string;
      displayUrl: string;
      hash: int;
      type?: string;
      siteName?: string;
      title?: string;
      description?: string;
      photo?: Raw.TypePhoto;
      embedUrl?: string;
      embedType?: string;
      embedWidth?: int;
      embedHeight?: int;
      duration?: int;
      author?: string;
      document?: Raw.TypeDocument;
      cachedPage?: Raw.TypePage;
      attributes?: Vector<Raw.TypeWebPageAttribute>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebPage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebPageNotModified extends TLObject {
    cachedPageViews?: int;
    constructor(params: { cachedPageViews?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebPageNotModified>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Authorization extends TLObject {
    current?: boolean;
    officialApp?: boolean;
    passwordPending?: boolean;
    encryptedRequestsDisabled?: boolean;
    callRequestsDisabled?: boolean;
    unconfirmed?: boolean;
    hash: long;
    deviceModel: string;
    platform: string;
    systemVersion: string;
    apiId: int;
    appName: string;
    appVersion: string;
    dateCreated: int;
    dateActive: int;
    ip: string;
    country: string;
    region: string;
    constructor(params: {
      current?: boolean;
      officialApp?: boolean;
      passwordPending?: boolean;
      encryptedRequestsDisabled?: boolean;
      callRequestsDisabled?: boolean;
      unconfirmed?: boolean;
      hash: long;
      deviceModel: string;
      platform: string;
      systemVersion: string;
      apiId: int;
      appName: string;
      appVersion: string;
      dateCreated: int;
      dateActive: int;
      ip: string;
      country: string;
      region: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Authorization>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReceivedNotifyMessage extends TLObject {
    id: int;
    flags: int;
    constructor(params: { id: int; flags: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReceivedNotifyMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatInviteExported extends TLObject {
    revoked?: boolean;
    permanent?: boolean;
    requestNeeded?: boolean;
    link: string;
    adminId: long;
    date: int;
    startDate?: int;
    expireDate?: int;
    usageLimit?: int;
    usage?: int;
    requested?: int;
    title?: string;
    constructor(params: {
      revoked?: boolean;
      permanent?: boolean;
      requestNeeded?: boolean;
      link: string;
      adminId: long;
      date: int;
      startDate?: int;
      expireDate?: int;
      usageLimit?: int;
      usage?: int;
      requested?: int;
      title?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatInviteExported>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatInvitePublicJoinRequests extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatInvitePublicJoinRequests>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatInviteAlready extends TLObject {
    chat: Raw.TypeChat;
    constructor(params: { chat: Raw.TypeChat });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatInviteAlready>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatInvite extends TLObject {
    channel?: boolean;
    broadcast?: boolean;
    public?: boolean;
    megagroup?: boolean;
    requestNeeded?: boolean;
    verified?: boolean;
    scam?: boolean;
    fake?: boolean;
    title: string;
    about?: string;
    photo: Raw.TypePhoto;
    participantsCount: int;
    participants?: Vector<Raw.TypeUser>;
    color: int;
    constructor(params: {
      channel?: boolean;
      broadcast?: boolean;
      public?: boolean;
      megagroup?: boolean;
      requestNeeded?: boolean;
      verified?: boolean;
      scam?: boolean;
      fake?: boolean;
      title: string;
      about?: string;
      photo: Raw.TypePhoto;
      participantsCount: int;
      participants?: Vector<Raw.TypeUser>;
      color: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatInvite>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatInvitePeek extends TLObject {
    chat: Raw.TypeChat;
    expires: int;
    constructor(params: { chat: Raw.TypeChat; expires: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatInvitePeek>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStickerSetEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetID extends TLObject {
    id: long;
    accessHash: long;
    constructor(params: { id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStickerSetID>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetShortName extends TLObject {
    shortName: string;
    constructor(params: { shortName: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStickerSetShortName>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetAnimatedEmoji extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStickerSetAnimatedEmoji>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetDice extends TLObject {
    emoticon: string;
    constructor(params: { emoticon: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStickerSetDice>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetAnimatedEmojiAnimations extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.InputStickerSetAnimatedEmojiAnimations>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetPremiumGifts extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStickerSetPremiumGifts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetEmojiGenericAnimations extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.InputStickerSetEmojiGenericAnimations>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetEmojiDefaultStatuses extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStickerSetEmojiDefaultStatuses>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetEmojiDefaultTopicIcons extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.InputStickerSetEmojiDefaultTopicIcons>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetEmojiChannelDefaultStatuses extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.InputStickerSetEmojiChannelDefaultStatuses>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StickerSet extends TLObject {
    archived?: boolean;
    official?: boolean;
    masks?: boolean;
    emojis?: boolean;
    textColor?: boolean;
    channelEmojiStatus?: boolean;
    creator?: boolean;
    installedDate?: int;
    id: long;
    accessHash: long;
    title: string;
    shortName: string;
    thumbs?: Vector<Raw.TypePhotoSize>;
    thumbDcId?: int;
    thumbVersion?: int;
    thumbDocumentId?: long;
    count: int;
    hash: int;
    constructor(params: {
      archived?: boolean;
      official?: boolean;
      masks?: boolean;
      emojis?: boolean;
      textColor?: boolean;
      channelEmojiStatus?: boolean;
      creator?: boolean;
      installedDate?: int;
      id: long;
      accessHash: long;
      title: string;
      shortName: string;
      thumbs?: Vector<Raw.TypePhotoSize>;
      thumbDcId?: int;
      thumbVersion?: int;
      thumbDocumentId?: long;
      count: int;
      hash: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StickerSet>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotCommand extends TLObject {
    command: string;
    description: string;
    constructor(params: { command: string; description: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotCommand>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotInfo extends TLObject {
    userId?: long;
    description?: string;
    descriptionPhoto?: Raw.TypePhoto;
    descriptionDocument?: Raw.TypeDocument;
    commands?: Vector<Raw.TypeBotCommand>;
    menuButton?: Raw.TypeBotMenuButton;
    constructor(params: {
      userId?: long;
      description?: string;
      descriptionPhoto?: Raw.TypePhoto;
      descriptionDocument?: Raw.TypeDocument;
      commands?: Vector<Raw.TypeBotCommand>;
      menuButton?: Raw.TypeBotMenuButton;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotInfo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButton extends TLObject {
    text: string;
    constructor(params: { text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButton>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonUrl extends TLObject {
    text: string;
    url: string;
    constructor(params: { text: string; url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonUrl>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonCallback extends TLObject {
    requiresPassword?: boolean;
    text: string;
    data: bytes;
    constructor(params: { requiresPassword?: boolean; text: string; data: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonCallback>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonRequestPhone extends TLObject {
    text: string;
    constructor(params: { text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonRequestPhone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonRequestGeoLocation extends TLObject {
    text: string;
    constructor(params: { text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonRequestGeoLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonSwitchInline extends TLObject {
    samePeer?: boolean;
    text: string;
    query: string;
    peerTypes?: Vector<Raw.TypeInlineQueryPeerType>;
    constructor(params: {
      samePeer?: boolean;
      text: string;
      query: string;
      peerTypes?: Vector<Raw.TypeInlineQueryPeerType>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonSwitchInline>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonGame extends TLObject {
    text: string;
    constructor(params: { text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonGame>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonBuy extends TLObject {
    text: string;
    constructor(params: { text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonBuy>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonUrlAuth extends TLObject {
    text: string;
    fwdText?: string;
    url: string;
    buttonId: int;
    constructor(params: { text: string; fwdText?: string; url: string; buttonId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonUrlAuth>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputKeyboardButtonUrlAuth extends TLObject {
    requestWriteAccess?: boolean;
    text: string;
    fwdText?: string;
    url: string;
    bot: Raw.TypeInputUser;
    constructor(params: {
      requestWriteAccess?: boolean;
      text: string;
      fwdText?: string;
      url: string;
      bot: Raw.TypeInputUser;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputKeyboardButtonUrlAuth>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonRequestPoll extends TLObject {
    quiz?: Bool;
    text: string;
    constructor(params: { quiz?: Bool; text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonRequestPoll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputKeyboardButtonUserProfile extends TLObject {
    text: string;
    userId: Raw.TypeInputUser;
    constructor(params: { text: string; userId: Raw.TypeInputUser });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputKeyboardButtonUserProfile>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonUserProfile extends TLObject {
    text: string;
    userId: long;
    constructor(params: { text: string; userId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonUserProfile>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonWebView extends TLObject {
    text: string;
    url: string;
    constructor(params: { text: string; url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonWebView>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonSimpleWebView extends TLObject {
    text: string;
    url: string;
    constructor(params: { text: string; url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonSimpleWebView>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonRequestPeer extends TLObject {
    text: string;
    buttonId: int;
    peerType: Raw.TypeRequestPeerType;
    maxQuantity: int;
    constructor(params: {
      text: string;
      buttonId: int;
      peerType: Raw.TypeRequestPeerType;
      maxQuantity: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonRequestPeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputKeyboardButtonRequestPeer extends TLObject {
    nameRequested?: boolean;
    usernameRequested?: boolean;
    photoRequested?: boolean;
    text: string;
    buttonId: int;
    peerType: Raw.TypeRequestPeerType;
    maxQuantity: int;
    constructor(params: {
      nameRequested?: boolean;
      usernameRequested?: boolean;
      photoRequested?: boolean;
      text: string;
      buttonId: int;
      peerType: Raw.TypeRequestPeerType;
      maxQuantity: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputKeyboardButtonRequestPeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class KeyboardButtonRow extends TLObject {
    buttons: Vector<Raw.TypeKeyboardButton>;
    constructor(params: { buttons: Vector<Raw.TypeKeyboardButton> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.KeyboardButtonRow>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReplyKeyboardHide extends TLObject {
    selective?: boolean;
    constructor(params: { selective?: boolean });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReplyKeyboardHide>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReplyKeyboardForceReply extends TLObject {
    singleUse?: boolean;
    selective?: boolean;
    placeholder?: string;
    constructor(params: { singleUse?: boolean; selective?: boolean; placeholder?: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReplyKeyboardForceReply>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReplyKeyboardMarkup extends TLObject {
    resize?: boolean;
    singleUse?: boolean;
    selective?: boolean;
    persistent?: boolean;
    rows: Vector<Raw.TypeKeyboardButtonRow>;
    placeholder?: string;
    constructor(params: {
      resize?: boolean;
      singleUse?: boolean;
      selective?: boolean;
      persistent?: boolean;
      rows: Vector<Raw.TypeKeyboardButtonRow>;
      placeholder?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReplyKeyboardMarkup>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReplyInlineMarkup extends TLObject {
    rows: Vector<Raw.TypeKeyboardButtonRow>;
    constructor(params: { rows: Vector<Raw.TypeKeyboardButtonRow> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReplyInlineMarkup>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityUnknown extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityUnknown>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityMention extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityMention>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityHashtag extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityHashtag>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityBotCommand extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityBotCommand>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityUrl extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityUrl>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityEmail extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityEmail>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityBold extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityBold>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityItalic extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityItalic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityCode extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityCode>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityPre extends TLObject {
    offset: int;
    length: int;
    language: string;
    constructor(params: { offset: int; length: int; language: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityPre>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityTextUrl extends TLObject {
    offset: int;
    length: int;
    url: string;
    constructor(params: { offset: int; length: int; url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityTextUrl>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityMentionName extends TLObject {
    offset: int;
    length: int;
    userId: long;
    constructor(params: { offset: int; length: int; userId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityMentionName>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessageEntityMentionName extends TLObject {
    offset: int;
    length: int;
    userId: Raw.TypeInputUser;
    constructor(params: { offset: int; length: int; userId: Raw.TypeInputUser });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessageEntityMentionName>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityPhone extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityPhone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityCashtag extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityCashtag>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityUnderline extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityUnderline>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityStrike extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityStrike>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityBankCard extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityBankCard>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntitySpoiler extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntitySpoiler>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityCustomEmoji extends TLObject {
    offset: int;
    length: int;
    documentId: long;
    constructor(params: { offset: int; length: int; documentId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityCustomEmoji>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageEntityBlockquote extends TLObject {
    offset: int;
    length: int;
    constructor(params: { offset: int; length: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageEntityBlockquote>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputChannelEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputChannelEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputChannel extends TLObject {
    channelId: long;
    accessHash: long;
    constructor(params: { channelId: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputChannel>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputChannelFromMessage extends TLObject {
    peer: Raw.TypeInputPeer;
    msgId: int;
    channelId: long;
    constructor(params: { peer: Raw.TypeInputPeer; msgId: int; channelId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputChannelFromMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageRange extends TLObject {
    minId: int;
    maxId: int;
    constructor(params: { minId: int; maxId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageRange>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelMessagesFilterEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelMessagesFilterEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelMessagesFilter extends TLObject {
    excludeNewMessages?: boolean;
    ranges: Vector<Raw.TypeMessageRange>;
    constructor(params: { excludeNewMessages?: boolean; ranges: Vector<Raw.TypeMessageRange> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelMessagesFilter>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipant extends TLObject {
    userId: long;
    date: int;
    constructor(params: { userId: long; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipant>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantSelf extends TLObject {
    viaRequest?: boolean;
    userId: long;
    inviterId: long;
    date: int;
    constructor(params: { viaRequest?: boolean; userId: long; inviterId: long; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantSelf>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantCreator extends TLObject {
    userId: long;
    adminRights: Raw.TypeChatAdminRights;
    rank?: string;
    constructor(params: { userId: long; adminRights: Raw.TypeChatAdminRights; rank?: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantCreator>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantAdmin extends TLObject {
    canEdit?: boolean;
    self?: boolean;
    userId: long;
    inviterId?: long;
    promotedBy: long;
    date: int;
    adminRights: Raw.TypeChatAdminRights;
    rank?: string;
    constructor(params: {
      canEdit?: boolean;
      self?: boolean;
      userId: long;
      inviterId?: long;
      promotedBy: long;
      date: int;
      adminRights: Raw.TypeChatAdminRights;
      rank?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantAdmin>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantBanned extends TLObject {
    left?: boolean;
    peer: Raw.TypePeer;
    kickedBy: long;
    date: int;
    bannedRights: Raw.TypeChatBannedRights;
    constructor(params: {
      left?: boolean;
      peer: Raw.TypePeer;
      kickedBy: long;
      date: int;
      bannedRights: Raw.TypeChatBannedRights;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantBanned>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantLeft extends TLObject {
    peer: Raw.TypePeer;
    constructor(params: { peer: Raw.TypePeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantLeft>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantsRecent extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantsRecent>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantsAdmins extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantsAdmins>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantsKicked extends TLObject {
    q: string;
    constructor(params: { q: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantsKicked>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantsBots extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantsBots>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantsBanned extends TLObject {
    q: string;
    constructor(params: { q: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantsBanned>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantsSearch extends TLObject {
    q: string;
    constructor(params: { q: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantsSearch>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantsContacts extends TLObject {
    q: string;
    constructor(params: { q: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantsContacts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelParticipantsMentions extends TLObject {
    q?: string;
    topMsgId?: int;
    constructor(params: { q?: string; topMsgId?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelParticipantsMentions>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineMessageMediaAuto extends TLObject {
    invertMedia?: boolean;
    message: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      invertMedia?: boolean;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineMessageMediaAuto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineMessageText extends TLObject {
    noWebpage?: boolean;
    invertMedia?: boolean;
    message: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      noWebpage?: boolean;
      invertMedia?: boolean;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineMessageText>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineMessageMediaGeo extends TLObject {
    geoPoint: Raw.TypeInputGeoPoint;
    heading?: int;
    period?: int;
    proximityNotificationRadius?: int;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      geoPoint: Raw.TypeInputGeoPoint;
      heading?: int;
      period?: int;
      proximityNotificationRadius?: int;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineMessageMediaGeo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineMessageMediaVenue extends TLObject {
    geoPoint: Raw.TypeInputGeoPoint;
    title: string;
    address: string;
    provider: string;
    venueId: string;
    venueType: string;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      geoPoint: Raw.TypeInputGeoPoint;
      title: string;
      address: string;
      provider: string;
      venueId: string;
      venueType: string;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineMessageMediaVenue>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineMessageMediaContact extends TLObject {
    phoneNumber: string;
    firstName: string;
    lastName: string;
    vcard: string;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      phoneNumber: string;
      firstName: string;
      lastName: string;
      vcard: string;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineMessageMediaContact>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineMessageGame extends TLObject {
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: { replyMarkup?: Raw.TypeReplyMarkup });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineMessageGame>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineMessageMediaInvoice extends TLObject {
    title: string;
    description: string;
    photo?: Raw.TypeInputWebDocument;
    invoice: Raw.TypeInvoice;
    payload: bytes;
    provider: string;
    providerData: Raw.TypeDataJSON;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      title: string;
      description: string;
      photo?: Raw.TypeInputWebDocument;
      invoice: Raw.TypeInvoice;
      payload: bytes;
      provider: string;
      providerData: Raw.TypeDataJSON;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineMessageMediaInvoice>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineMessageMediaWebPage extends TLObject {
    invertMedia?: boolean;
    forceLargeMedia?: boolean;
    forceSmallMedia?: boolean;
    optional?: boolean;
    message: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    url: string;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      invertMedia?: boolean;
      forceLargeMedia?: boolean;
      forceSmallMedia?: boolean;
      optional?: boolean;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      url: string;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineMessageMediaWebPage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineResult extends TLObject {
    id: string;
    type: string;
    title?: string;
    description?: string;
    url?: string;
    thumb?: Raw.TypeInputWebDocument;
    content?: Raw.TypeInputWebDocument;
    sendMessage: Raw.TypeInputBotInlineMessage;
    constructor(params: {
      id: string;
      type: string;
      title?: string;
      description?: string;
      url?: string;
      thumb?: Raw.TypeInputWebDocument;
      content?: Raw.TypeInputWebDocument;
      sendMessage: Raw.TypeInputBotInlineMessage;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineResult>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineResultPhoto extends TLObject {
    id: string;
    type: string;
    photo: Raw.TypeInputPhoto;
    sendMessage: Raw.TypeInputBotInlineMessage;
    constructor(params: {
      id: string;
      type: string;
      photo: Raw.TypeInputPhoto;
      sendMessage: Raw.TypeInputBotInlineMessage;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineResultPhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineResultDocument extends TLObject {
    id: string;
    type: string;
    title?: string;
    description?: string;
    document: Raw.TypeInputDocument;
    sendMessage: Raw.TypeInputBotInlineMessage;
    constructor(params: {
      id: string;
      type: string;
      title?: string;
      description?: string;
      document: Raw.TypeInputDocument;
      sendMessage: Raw.TypeInputBotInlineMessage;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineResultDocument>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineResultGame extends TLObject {
    id: string;
    shortName: string;
    sendMessage: Raw.TypeInputBotInlineMessage;
    constructor(params: {
      id: string;
      shortName: string;
      sendMessage: Raw.TypeInputBotInlineMessage;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineResultGame>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotInlineMessageMediaAuto extends TLObject {
    invertMedia?: boolean;
    message: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      invertMedia?: boolean;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotInlineMessageMediaAuto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotInlineMessageText extends TLObject {
    noWebpage?: boolean;
    invertMedia?: boolean;
    message: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      noWebpage?: boolean;
      invertMedia?: boolean;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotInlineMessageText>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotInlineMessageMediaGeo extends TLObject {
    geo: Raw.TypeGeoPoint;
    heading?: int;
    period?: int;
    proximityNotificationRadius?: int;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      geo: Raw.TypeGeoPoint;
      heading?: int;
      period?: int;
      proximityNotificationRadius?: int;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotInlineMessageMediaGeo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotInlineMessageMediaVenue extends TLObject {
    geo: Raw.TypeGeoPoint;
    title: string;
    address: string;
    provider: string;
    venueId: string;
    venueType: string;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      geo: Raw.TypeGeoPoint;
      title: string;
      address: string;
      provider: string;
      venueId: string;
      venueType: string;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotInlineMessageMediaVenue>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotInlineMessageMediaContact extends TLObject {
    phoneNumber: string;
    firstName: string;
    lastName: string;
    vcard: string;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      phoneNumber: string;
      firstName: string;
      lastName: string;
      vcard: string;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotInlineMessageMediaContact>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotInlineMessageMediaInvoice extends TLObject {
    shippingAddressRequested?: boolean;
    test?: boolean;
    title: string;
    description: string;
    photo?: Raw.TypeWebDocument;
    currency: string;
    totalAmount: long;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      shippingAddressRequested?: boolean;
      test?: boolean;
      title: string;
      description: string;
      photo?: Raw.TypeWebDocument;
      currency: string;
      totalAmount: long;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotInlineMessageMediaInvoice>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotInlineMessageMediaWebPage extends TLObject {
    invertMedia?: boolean;
    forceLargeMedia?: boolean;
    forceSmallMedia?: boolean;
    manual?: boolean;
    safe?: boolean;
    message: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    url: string;
    replyMarkup?: Raw.TypeReplyMarkup;
    constructor(params: {
      invertMedia?: boolean;
      forceLargeMedia?: boolean;
      forceSmallMedia?: boolean;
      manual?: boolean;
      safe?: boolean;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      url: string;
      replyMarkup?: Raw.TypeReplyMarkup;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotInlineMessageMediaWebPage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotInlineResult extends TLObject {
    id: string;
    type: string;
    title?: string;
    description?: string;
    url?: string;
    thumb?: Raw.TypeWebDocument;
    content?: Raw.TypeWebDocument;
    sendMessage: Raw.TypeBotInlineMessage;
    constructor(params: {
      id: string;
      type: string;
      title?: string;
      description?: string;
      url?: string;
      thumb?: Raw.TypeWebDocument;
      content?: Raw.TypeWebDocument;
      sendMessage: Raw.TypeBotInlineMessage;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotInlineResult>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotInlineMediaResult extends TLObject {
    id: string;
    type: string;
    photo?: Raw.TypePhoto;
    document?: Raw.TypeDocument;
    title?: string;
    description?: string;
    sendMessage: Raw.TypeBotInlineMessage;
    constructor(params: {
      id: string;
      type: string;
      photo?: Raw.TypePhoto;
      document?: Raw.TypeDocument;
      title?: string;
      description?: string;
      sendMessage: Raw.TypeBotInlineMessage;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotInlineMediaResult>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ExportedMessageLink extends TLObject {
    link: string;
    html: string;
    constructor(params: { link: string; html: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ExportedMessageLink>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageFwdHeader extends TLObject {
    imported?: boolean;
    savedOut?: boolean;
    fromId?: Raw.TypePeer;
    fromName?: string;
    date: int;
    channelPost?: int;
    postAuthor?: string;
    savedFromPeer?: Raw.TypePeer;
    savedFromMsgId?: int;
    savedFromId?: Raw.TypePeer;
    savedFromName?: string;
    savedDate?: int;
    psaType?: string;
    constructor(params: {
      imported?: boolean;
      savedOut?: boolean;
      fromId?: Raw.TypePeer;
      fromName?: string;
      date: int;
      channelPost?: int;
      postAuthor?: string;
      savedFromPeer?: Raw.TypePeer;
      savedFromMsgId?: int;
      savedFromId?: Raw.TypePeer;
      savedFromName?: string;
      savedDate?: int;
      psaType?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageFwdHeader>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineMessageID extends TLObject {
    dcId: int;
    id: long;
    accessHash: long;
    constructor(params: { dcId: int; id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineMessageID>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotInlineMessageID64 extends TLObject {
    dcId: int;
    ownerId: long;
    id: int;
    accessHash: long;
    constructor(params: { dcId: int; ownerId: long; id: int; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotInlineMessageID64>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InlineBotSwitchPM extends TLObject {
    text: string;
    startParam: string;
    constructor(params: { text: string; startParam: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InlineBotSwitchPM>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TopPeer extends TLObject {
    peer: Raw.TypePeer;
    rating: double;
    constructor(params: { peer: Raw.TypePeer; rating: double });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TopPeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TopPeerCategoryBotsPM extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TopPeerCategoryBotsPM>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TopPeerCategoryBotsInline extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TopPeerCategoryBotsInline>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TopPeerCategoryCorrespondents extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TopPeerCategoryCorrespondents>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TopPeerCategoryGroups extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TopPeerCategoryGroups>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TopPeerCategoryChannels extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TopPeerCategoryChannels>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TopPeerCategoryPhoneCalls extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TopPeerCategoryPhoneCalls>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TopPeerCategoryForwardUsers extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TopPeerCategoryForwardUsers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TopPeerCategoryForwardChats extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TopPeerCategoryForwardChats>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TopPeerCategoryPeers extends TLObject {
    category: Raw.TypeTopPeerCategory;
    count: int;
    peers: Vector<Raw.TypeTopPeer>;
    constructor(params: {
      category: Raw.TypeTopPeerCategory;
      count: int;
      peers: Vector<Raw.TypeTopPeer>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TopPeerCategoryPeers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DraftMessageEmpty extends TLObject {
    date?: int;
    constructor(params: { date?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DraftMessageEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DraftMessage extends TLObject {
    noWebpage?: boolean;
    invertMedia?: boolean;
    replyTo?: Raw.TypeInputReplyTo;
    message: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    media?: Raw.TypeInputMedia;
    date: int;
    constructor(params: {
      noWebpage?: boolean;
      invertMedia?: boolean;
      replyTo?: Raw.TypeInputReplyTo;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      media?: Raw.TypeInputMedia;
      date: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DraftMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StickerSetCovered extends TLObject {
    set: Raw.TypeStickerSet;
    cover: Raw.TypeDocument;
    constructor(params: { set: Raw.TypeStickerSet; cover: Raw.TypeDocument });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StickerSetCovered>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StickerSetMultiCovered extends TLObject {
    set: Raw.TypeStickerSet;
    covers: Vector<Raw.TypeDocument>;
    constructor(params: { set: Raw.TypeStickerSet; covers: Vector<Raw.TypeDocument> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StickerSetMultiCovered>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StickerSetFullCovered extends TLObject {
    set: Raw.TypeStickerSet;
    packs: Vector<Raw.TypeStickerPack>;
    keywords: Vector<Raw.TypeStickerKeyword>;
    documents: Vector<Raw.TypeDocument>;
    constructor(params: {
      set: Raw.TypeStickerSet;
      packs: Vector<Raw.TypeStickerPack>;
      keywords: Vector<Raw.TypeStickerKeyword>;
      documents: Vector<Raw.TypeDocument>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StickerSetFullCovered>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StickerSetNoCovered extends TLObject {
    set: Raw.TypeStickerSet;
    constructor(params: { set: Raw.TypeStickerSet });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StickerSetNoCovered>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MaskCoords extends TLObject {
    n: int;
    x: double;
    y: double;
    zoom: double;
    constructor(params: { n: int; x: double; y: double; zoom: double });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MaskCoords>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickeredMediaPhoto extends TLObject {
    id: Raw.TypeInputPhoto;
    constructor(params: { id: Raw.TypeInputPhoto });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStickeredMediaPhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickeredMediaDocument extends TLObject {
    id: Raw.TypeInputDocument;
    constructor(params: { id: Raw.TypeInputDocument });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStickeredMediaDocument>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Game extends TLObject {
    id: long;
    accessHash: long;
    shortName: string;
    title: string;
    description: string;
    photo: Raw.TypePhoto;
    document?: Raw.TypeDocument;
    constructor(params: {
      id: long;
      accessHash: long;
      shortName: string;
      title: string;
      description: string;
      photo: Raw.TypePhoto;
      document?: Raw.TypeDocument;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Game>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputGameID extends TLObject {
    id: long;
    accessHash: long;
    constructor(params: { id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputGameID>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputGameShortName extends TLObject {
    botId: Raw.TypeInputUser;
    shortName: string;
    constructor(params: { botId: Raw.TypeInputUser; shortName: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputGameShortName>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class HighScore extends TLObject {
    pos: int;
    userId: long;
    score: int;
    constructor(params: { pos: int; userId: long; score: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.HighScore>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextPlain extends TLObject {
    text: string;
    constructor(params: { text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextPlain>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextBold extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextBold>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextItalic extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextItalic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextUnderline extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextUnderline>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextStrike extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextStrike>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextFixed extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextFixed>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextUrl extends TLObject {
    text: Raw.TypeRichText;
    url: string;
    webpageId: long;
    constructor(params: { text: Raw.TypeRichText; url: string; webpageId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextUrl>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextEmail extends TLObject {
    text: Raw.TypeRichText;
    email: string;
    constructor(params: { text: Raw.TypeRichText; email: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextEmail>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextConcat extends TLObject {
    texts: Vector<Raw.TypeRichText>;
    constructor(params: { texts: Vector<Raw.TypeRichText> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextConcat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextSubscript extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextSubscript>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextSuperscript extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextSuperscript>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextMarked extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextMarked>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextPhone extends TLObject {
    text: Raw.TypeRichText;
    phone: string;
    constructor(params: { text: Raw.TypeRichText; phone: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextPhone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextImage extends TLObject {
    documentId: long;
    w: int;
    h: int;
    constructor(params: { documentId: long; w: int; h: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextImage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextAnchor extends TLObject {
    text: Raw.TypeRichText;
    name: string;
    constructor(params: { text: Raw.TypeRichText; name: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextAnchor>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockUnsupported extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockUnsupported>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockTitle extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockTitle>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockSubtitle extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockSubtitle>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockAuthorDate extends TLObject {
    author: Raw.TypeRichText;
    publishedDate: int;
    constructor(params: { author: Raw.TypeRichText; publishedDate: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockAuthorDate>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockHeader extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockHeader>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockSubheader extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockSubheader>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockParagraph extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockParagraph>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockPreformatted extends TLObject {
    text: Raw.TypeRichText;
    language: string;
    constructor(params: { text: Raw.TypeRichText; language: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockPreformatted>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockFooter extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockFooter>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockDivider extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockDivider>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockAnchor extends TLObject {
    name: string;
    constructor(params: { name: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockAnchor>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockList extends TLObject {
    items: Vector<Raw.TypePageListItem>;
    constructor(params: { items: Vector<Raw.TypePageListItem> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockList>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockBlockquote extends TLObject {
    text: Raw.TypeRichText;
    caption: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText; caption: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockBlockquote>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockPullquote extends TLObject {
    text: Raw.TypeRichText;
    caption: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText; caption: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockPullquote>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockPhoto extends TLObject {
    photoId: long;
    caption: Raw.TypePageCaption;
    url?: string;
    webpageId?: long;
    constructor(params: {
      photoId: long;
      caption: Raw.TypePageCaption;
      url?: string;
      webpageId?: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockPhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockVideo extends TLObject {
    autoplay?: boolean;
    loop?: boolean;
    videoId: long;
    caption: Raw.TypePageCaption;
    constructor(params: {
      autoplay?: boolean;
      loop?: boolean;
      videoId: long;
      caption: Raw.TypePageCaption;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockVideo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockCover extends TLObject {
    cover: Raw.TypePageBlock;
    constructor(params: { cover: Raw.TypePageBlock });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockCover>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockEmbed extends TLObject {
    fullWidth?: boolean;
    allowScrolling?: boolean;
    url?: string;
    html?: string;
    posterPhotoId?: long;
    w?: int;
    h?: int;
    caption: Raw.TypePageCaption;
    constructor(params: {
      fullWidth?: boolean;
      allowScrolling?: boolean;
      url?: string;
      html?: string;
      posterPhotoId?: long;
      w?: int;
      h?: int;
      caption: Raw.TypePageCaption;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockEmbed>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockEmbedPost extends TLObject {
    url: string;
    webpageId: long;
    authorPhotoId: long;
    author: string;
    date: int;
    blocks: Vector<Raw.TypePageBlock>;
    caption: Raw.TypePageCaption;
    constructor(params: {
      url: string;
      webpageId: long;
      authorPhotoId: long;
      author: string;
      date: int;
      blocks: Vector<Raw.TypePageBlock>;
      caption: Raw.TypePageCaption;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockEmbedPost>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockCollage extends TLObject {
    items: Vector<Raw.TypePageBlock>;
    caption: Raw.TypePageCaption;
    constructor(params: { items: Vector<Raw.TypePageBlock>; caption: Raw.TypePageCaption });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockCollage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockSlideshow extends TLObject {
    items: Vector<Raw.TypePageBlock>;
    caption: Raw.TypePageCaption;
    constructor(params: { items: Vector<Raw.TypePageBlock>; caption: Raw.TypePageCaption });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockSlideshow>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockChannel extends TLObject {
    channel: Raw.TypeChat;
    constructor(params: { channel: Raw.TypeChat });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockChannel>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockAudio extends TLObject {
    audioId: long;
    caption: Raw.TypePageCaption;
    constructor(params: { audioId: long; caption: Raw.TypePageCaption });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockAudio>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockKicker extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockKicker>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockTable extends TLObject {
    bordered?: boolean;
    striped?: boolean;
    title: Raw.TypeRichText;
    rows: Vector<Raw.TypePageTableRow>;
    constructor(params: {
      bordered?: boolean;
      striped?: boolean;
      title: Raw.TypeRichText;
      rows: Vector<Raw.TypePageTableRow>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockTable>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockOrderedList extends TLObject {
    items: Vector<Raw.TypePageListOrderedItem>;
    constructor(params: { items: Vector<Raw.TypePageListOrderedItem> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockOrderedList>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockDetails extends TLObject {
    open?: boolean;
    blocks: Vector<Raw.TypePageBlock>;
    title: Raw.TypeRichText;
    constructor(params: {
      open?: boolean;
      blocks: Vector<Raw.TypePageBlock>;
      title: Raw.TypeRichText;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockDetails>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockRelatedArticles extends TLObject {
    title: Raw.TypeRichText;
    articles: Vector<Raw.TypePageRelatedArticle>;
    constructor(params: { title: Raw.TypeRichText; articles: Vector<Raw.TypePageRelatedArticle> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockRelatedArticles>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageBlockMap extends TLObject {
    geo: Raw.TypeGeoPoint;
    zoom: int;
    w: int;
    h: int;
    caption: Raw.TypePageCaption;
    constructor(params: {
      geo: Raw.TypeGeoPoint;
      zoom: int;
      w: int;
      h: int;
      caption: Raw.TypePageCaption;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageBlockMap>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneCallDiscardReasonMissed extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneCallDiscardReasonMissed>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneCallDiscardReasonDisconnect extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneCallDiscardReasonDisconnect>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneCallDiscardReasonHangup extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneCallDiscardReasonHangup>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneCallDiscardReasonBusy extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneCallDiscardReasonBusy>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DataJSON extends TLObject {
    data: string;
    constructor(params: { data: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DataJSON>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class LabeledPrice extends TLObject {
    label: string;
    amount: long;
    constructor(params: { label: string; amount: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.LabeledPrice>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Invoice extends TLObject {
    test?: boolean;
    nameRequested?: boolean;
    phoneRequested?: boolean;
    emailRequested?: boolean;
    shippingAddressRequested?: boolean;
    flexible?: boolean;
    phoneToProvider?: boolean;
    emailToProvider?: boolean;
    recurring?: boolean;
    currency: string;
    prices: Vector<Raw.TypeLabeledPrice>;
    maxTipAmount?: long;
    suggestedTipAmounts?: Vector<long>;
    termsUrl?: string;
    constructor(params: {
      test?: boolean;
      nameRequested?: boolean;
      phoneRequested?: boolean;
      emailRequested?: boolean;
      shippingAddressRequested?: boolean;
      flexible?: boolean;
      phoneToProvider?: boolean;
      emailToProvider?: boolean;
      recurring?: boolean;
      currency: string;
      prices: Vector<Raw.TypeLabeledPrice>;
      maxTipAmount?: long;
      suggestedTipAmounts?: Vector<long>;
      termsUrl?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Invoice>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PaymentCharge extends TLObject {
    id: string;
    providerChargeId: string;
    constructor(params: { id: string; providerChargeId: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PaymentCharge>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PostAddress extends TLObject {
    streetLine1: string;
    streetLine2: string;
    city: string;
    state: string;
    countryIso2: string;
    postCode: string;
    constructor(params: {
      streetLine1: string;
      streetLine2: string;
      city: string;
      state: string;
      countryIso2: string;
      postCode: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PostAddress>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PaymentRequestedInfo extends TLObject {
    name?: string;
    phone?: string;
    email?: string;
    shippingAddress?: Raw.TypePostAddress;
    constructor(params: {
      name?: string;
      phone?: string;
      email?: string;
      shippingAddress?: Raw.TypePostAddress;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PaymentRequestedInfo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PaymentSavedCredentialsCard extends TLObject {
    id: string;
    title: string;
    constructor(params: { id: string; title: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PaymentSavedCredentialsCard>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebDocument extends TLObject {
    url: string;
    accessHash: long;
    size: int;
    mimeType: string;
    attributes: Vector<Raw.TypeDocumentAttribute>;
    constructor(params: {
      url: string;
      accessHash: long;
      size: int;
      mimeType: string;
      attributes: Vector<Raw.TypeDocumentAttribute>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebDocument>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebDocumentNoProxy extends TLObject {
    url: string;
    size: int;
    mimeType: string;
    attributes: Vector<Raw.TypeDocumentAttribute>;
    constructor(params: {
      url: string;
      size: int;
      mimeType: string;
      attributes: Vector<Raw.TypeDocumentAttribute>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebDocumentNoProxy>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputWebDocument extends TLObject {
    url: string;
    size: int;
    mimeType: string;
    attributes: Vector<Raw.TypeDocumentAttribute>;
    constructor(params: {
      url: string;
      size: int;
      mimeType: string;
      attributes: Vector<Raw.TypeDocumentAttribute>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputWebDocument>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputWebFileLocation extends TLObject {
    url: string;
    accessHash: long;
    constructor(params: { url: string; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputWebFileLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputWebFileGeoPointLocation extends TLObject {
    geoPoint: Raw.TypeInputGeoPoint;
    accessHash: long;
    w: int;
    h: int;
    zoom: int;
    scale: int;
    constructor(params: {
      geoPoint: Raw.TypeInputGeoPoint;
      accessHash: long;
      w: int;
      h: int;
      zoom: int;
      scale: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputWebFileGeoPointLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputWebFileAudioAlbumThumbLocation extends TLObject {
    small?: boolean;
    document?: Raw.TypeInputDocument;
    title?: string;
    performer?: string;
    constructor(params: {
      small?: boolean;
      document?: Raw.TypeInputDocument;
      title?: string;
      performer?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputWebFileAudioAlbumThumbLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPaymentCredentialsSaved extends TLObject {
    id: string;
    tmpPassword: bytes;
    constructor(params: { id: string; tmpPassword: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPaymentCredentialsSaved>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPaymentCredentials extends TLObject {
    save?: boolean;
    data: Raw.TypeDataJSON;
    constructor(params: { save?: boolean; data: Raw.TypeDataJSON });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPaymentCredentials>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPaymentCredentialsApplePay extends TLObject {
    paymentData: Raw.TypeDataJSON;
    constructor(params: { paymentData: Raw.TypeDataJSON });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPaymentCredentialsApplePay>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPaymentCredentialsGooglePay extends TLObject {
    paymentToken: Raw.TypeDataJSON;
    constructor(params: { paymentToken: Raw.TypeDataJSON });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPaymentCredentialsGooglePay>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ShippingOption extends TLObject {
    id: string;
    title: string;
    prices: Vector<Raw.TypeLabeledPrice>;
    constructor(params: { id: string; title: string; prices: Vector<Raw.TypeLabeledPrice> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ShippingOption>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStickerSetItem extends TLObject {
    document: Raw.TypeInputDocument;
    emoji: string;
    maskCoords?: Raw.TypeMaskCoords;
    keywords?: string;
    constructor(params: {
      document: Raw.TypeInputDocument;
      emoji: string;
      maskCoords?: Raw.TypeMaskCoords;
      keywords?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStickerSetItem>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputPhoneCall extends TLObject {
    id: long;
    accessHash: long;
    constructor(params: { id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputPhoneCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneCallEmpty extends TLObject {
    id: long;
    constructor(params: { id: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneCallEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneCallWaiting extends TLObject {
    video?: boolean;
    id: long;
    accessHash: long;
    date: int;
    adminId: long;
    participantId: long;
    protocol: Raw.TypePhoneCallProtocol;
    receiveDate?: int;
    constructor(params: {
      video?: boolean;
      id: long;
      accessHash: long;
      date: int;
      adminId: long;
      participantId: long;
      protocol: Raw.TypePhoneCallProtocol;
      receiveDate?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneCallWaiting>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneCallRequested extends TLObject {
    video?: boolean;
    id: long;
    accessHash: long;
    date: int;
    adminId: long;
    participantId: long;
    gAHash: bytes;
    protocol: Raw.TypePhoneCallProtocol;
    constructor(params: {
      video?: boolean;
      id: long;
      accessHash: long;
      date: int;
      adminId: long;
      participantId: long;
      gAHash: bytes;
      protocol: Raw.TypePhoneCallProtocol;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneCallRequested>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneCallAccepted extends TLObject {
    video?: boolean;
    id: long;
    accessHash: long;
    date: int;
    adminId: long;
    participantId: long;
    gB: bytes;
    protocol: Raw.TypePhoneCallProtocol;
    constructor(params: {
      video?: boolean;
      id: long;
      accessHash: long;
      date: int;
      adminId: long;
      participantId: long;
      gB: bytes;
      protocol: Raw.TypePhoneCallProtocol;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneCallAccepted>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneCall extends TLObject {
    p2pAllowed?: boolean;
    video?: boolean;
    id: long;
    accessHash: long;
    date: int;
    adminId: long;
    participantId: long;
    gAOrB: bytes;
    keyFingerprint: long;
    protocol: Raw.TypePhoneCallProtocol;
    connections: Vector<Raw.TypePhoneConnection>;
    startDate: int;
    customParameters?: Raw.TypeDataJSON;
    constructor(params: {
      p2pAllowed?: boolean;
      video?: boolean;
      id: long;
      accessHash: long;
      date: int;
      adminId: long;
      participantId: long;
      gAOrB: bytes;
      keyFingerprint: long;
      protocol: Raw.TypePhoneCallProtocol;
      connections: Vector<Raw.TypePhoneConnection>;
      startDate: int;
      customParameters?: Raw.TypeDataJSON;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneCallDiscarded extends TLObject {
    needRating?: boolean;
    needDebug?: boolean;
    video?: boolean;
    id: long;
    reason?: Raw.TypePhoneCallDiscardReason;
    duration?: int;
    constructor(params: {
      needRating?: boolean;
      needDebug?: boolean;
      video?: boolean;
      id: long;
      reason?: Raw.TypePhoneCallDiscardReason;
      duration?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneCallDiscarded>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneConnection extends TLObject {
    tcp?: boolean;
    id: long;
    ip: string;
    ipv6: string;
    port: int;
    peerTag: bytes;
    constructor(params: {
      tcp?: boolean;
      id: long;
      ip: string;
      ipv6: string;
      port: int;
      peerTag: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneConnection>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneConnectionWebrtc extends TLObject {
    turn?: boolean;
    stun?: boolean;
    id: long;
    ip: string;
    ipv6: string;
    port: int;
    username: string;
    password: string;
    constructor(params: {
      turn?: boolean;
      stun?: boolean;
      id: long;
      ip: string;
      ipv6: string;
      port: int;
      username: string;
      password: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneConnectionWebrtc>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhoneCallProtocol extends TLObject {
    udpP2p?: boolean;
    udpReflector?: boolean;
    minLayer: int;
    maxLayer: int;
    libraryVersions: Vector<string>;
    constructor(params: {
      udpP2p?: boolean;
      udpReflector?: boolean;
      minLayer: int;
      maxLayer: int;
      libraryVersions: Vector<string>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhoneCallProtocol>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class CdnPublicKey extends TLObject {
    dcId: int;
    publicKey: string;
    constructor(params: { dcId: int; publicKey: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.CdnPublicKey>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class CdnConfig extends TLObject {
    publicKeys: Vector<Raw.TypeCdnPublicKey>;
    constructor(params: { publicKeys: Vector<Raw.TypeCdnPublicKey> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.CdnConfig>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class LangPackString extends TLObject {
    key: string;
    value: string;
    constructor(params: { key: string; value: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.LangPackString>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class LangPackStringPluralized extends TLObject {
    key: string;
    zeroValue?: string;
    oneValue?: string;
    twoValue?: string;
    fewValue?: string;
    manyValue?: string;
    otherValue: string;
    constructor(params: {
      key: string;
      zeroValue?: string;
      oneValue?: string;
      twoValue?: string;
      fewValue?: string;
      manyValue?: string;
      otherValue: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.LangPackStringPluralized>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class LangPackStringDeleted extends TLObject {
    key: string;
    constructor(params: { key: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.LangPackStringDeleted>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class LangPackDifference extends TLObject {
    langCode: string;
    fromVersion: int;
    version: int;
    strings: Vector<Raw.TypeLangPackString>;
    constructor(params: {
      langCode: string;
      fromVersion: int;
      version: int;
      strings: Vector<Raw.TypeLangPackString>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.LangPackDifference>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class LangPackLanguage extends TLObject {
    official?: boolean;
    rtl?: boolean;
    beta?: boolean;
    name: string;
    nativeName: string;
    langCode: string;
    baseLangCode?: string;
    pluralCode: string;
    stringsCount: int;
    translatedCount: int;
    translationsUrl: string;
    constructor(params: {
      official?: boolean;
      rtl?: boolean;
      beta?: boolean;
      name: string;
      nativeName: string;
      langCode: string;
      baseLangCode?: string;
      pluralCode: string;
      stringsCount: int;
      translatedCount: int;
      translationsUrl: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.LangPackLanguage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeTitle extends TLObject {
    prevValue: string;
    newValue: string;
    constructor(params: { prevValue: string; newValue: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeTitle>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeAbout extends TLObject {
    prevValue: string;
    newValue: string;
    constructor(params: { prevValue: string; newValue: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeAbout>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeUsername extends TLObject {
    prevValue: string;
    newValue: string;
    constructor(params: { prevValue: string; newValue: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeUsername>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangePhoto extends TLObject {
    prevPhoto: Raw.TypePhoto;
    newPhoto: Raw.TypePhoto;
    constructor(params: { prevPhoto: Raw.TypePhoto; newPhoto: Raw.TypePhoto });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangePhoto>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionToggleInvites extends TLObject {
    newValue: Bool;
    constructor(params: { newValue: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionToggleInvites>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionToggleSignatures extends TLObject {
    newValue: Bool;
    constructor(params: { newValue: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionToggleSignatures>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionUpdatePinned extends TLObject {
    message: Raw.TypeMessage;
    constructor(params: { message: Raw.TypeMessage });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionUpdatePinned>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionEditMessage extends TLObject {
    prevMessage: Raw.TypeMessage;
    newMessage: Raw.TypeMessage;
    constructor(params: { prevMessage: Raw.TypeMessage; newMessage: Raw.TypeMessage });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionEditMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionDeleteMessage extends TLObject {
    message: Raw.TypeMessage;
    constructor(params: { message: Raw.TypeMessage });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionDeleteMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionParticipantJoin extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionParticipantJoin>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionParticipantLeave extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionParticipantLeave>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionParticipantInvite extends TLObject {
    participant: Raw.TypeChannelParticipant;
    constructor(params: { participant: Raw.TypeChannelParticipant });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionParticipantInvite>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionParticipantToggleBan extends TLObject {
    prevParticipant: Raw.TypeChannelParticipant;
    newParticipant: Raw.TypeChannelParticipant;
    constructor(params: {
      prevParticipant: Raw.TypeChannelParticipant;
      newParticipant: Raw.TypeChannelParticipant;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionParticipantToggleBan>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionParticipantToggleAdmin extends TLObject {
    prevParticipant: Raw.TypeChannelParticipant;
    newParticipant: Raw.TypeChannelParticipant;
    constructor(params: {
      prevParticipant: Raw.TypeChannelParticipant;
      newParticipant: Raw.TypeChannelParticipant;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionParticipantToggleAdmin>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeStickerSet extends TLObject {
    prevStickerset: Raw.TypeInputStickerSet;
    newStickerset: Raw.TypeInputStickerSet;
    constructor(params: {
      prevStickerset: Raw.TypeInputStickerSet;
      newStickerset: Raw.TypeInputStickerSet;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeStickerSet>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionTogglePreHistoryHidden extends TLObject {
    newValue: Bool;
    constructor(params: { newValue: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionTogglePreHistoryHidden>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionDefaultBannedRights extends TLObject {
    prevBannedRights: Raw.TypeChatBannedRights;
    newBannedRights: Raw.TypeChatBannedRights;
    constructor(params: {
      prevBannedRights: Raw.TypeChatBannedRights;
      newBannedRights: Raw.TypeChatBannedRights;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionDefaultBannedRights>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionStopPoll extends TLObject {
    message: Raw.TypeMessage;
    constructor(params: { message: Raw.TypeMessage });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelAdminLogEventActionStopPoll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeLinkedChat extends TLObject {
    prevValue: long;
    newValue: long;
    constructor(params: { prevValue: long; newValue: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeLinkedChat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeLocation extends TLObject {
    prevValue: Raw.TypeChannelLocation;
    newValue: Raw.TypeChannelLocation;
    constructor(params: { prevValue: Raw.TypeChannelLocation; newValue: Raw.TypeChannelLocation });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionToggleSlowMode extends TLObject {
    prevValue: int;
    newValue: int;
    constructor(params: { prevValue: int; newValue: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionToggleSlowMode>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionStartGroupCall extends TLObject {
    call: Raw.TypeInputGroupCall;
    constructor(params: { call: Raw.TypeInputGroupCall });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionStartGroupCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionDiscardGroupCall extends TLObject {
    call: Raw.TypeInputGroupCall;
    constructor(params: { call: Raw.TypeInputGroupCall });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionDiscardGroupCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionParticipantMute extends TLObject {
    participant: Raw.TypeGroupCallParticipant;
    constructor(params: { participant: Raw.TypeGroupCallParticipant });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionParticipantMute>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionParticipantUnmute extends TLObject {
    participant: Raw.TypeGroupCallParticipant;
    constructor(params: { participant: Raw.TypeGroupCallParticipant });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionParticipantUnmute>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionToggleGroupCallSetting extends TLObject {
    joinMuted: Bool;
    constructor(params: { joinMuted: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionToggleGroupCallSetting>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionParticipantJoinByInvite extends TLObject {
    viaChatlist?: boolean;
    invite: Raw.TypeExportedChatInvite;
    constructor(params: { viaChatlist?: boolean; invite: Raw.TypeExportedChatInvite });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionParticipantJoinByInvite>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionExportedInviteDelete extends TLObject {
    invite: Raw.TypeExportedChatInvite;
    constructor(params: { invite: Raw.TypeExportedChatInvite });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionExportedInviteDelete>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionExportedInviteRevoke extends TLObject {
    invite: Raw.TypeExportedChatInvite;
    constructor(params: { invite: Raw.TypeExportedChatInvite });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionExportedInviteRevoke>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionExportedInviteEdit extends TLObject {
    prevInvite: Raw.TypeExportedChatInvite;
    newInvite: Raw.TypeExportedChatInvite;
    constructor(params: {
      prevInvite: Raw.TypeExportedChatInvite;
      newInvite: Raw.TypeExportedChatInvite;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionExportedInviteEdit>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionParticipantVolume extends TLObject {
    participant: Raw.TypeGroupCallParticipant;
    constructor(params: { participant: Raw.TypeGroupCallParticipant });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionParticipantVolume>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeHistoryTTL extends TLObject {
    prevValue: int;
    newValue: int;
    constructor(params: { prevValue: int; newValue: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeHistoryTTL>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionParticipantJoinByRequest extends TLObject {
    invite: Raw.TypeExportedChatInvite;
    approvedBy: long;
    constructor(params: { invite: Raw.TypeExportedChatInvite; approvedBy: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionParticipantJoinByRequest>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionToggleNoForwards extends TLObject {
    newValue: Bool;
    constructor(params: { newValue: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionToggleNoForwards>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionSendMessage extends TLObject {
    message: Raw.TypeMessage;
    constructor(params: { message: Raw.TypeMessage });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionSendMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeAvailableReactions extends TLObject {
    prevValue: Raw.TypeChatReactions;
    newValue: Raw.TypeChatReactions;
    constructor(params: { prevValue: Raw.TypeChatReactions; newValue: Raw.TypeChatReactions });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeAvailableReactions>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeUsernames extends TLObject {
    prevValue: Vector<string>;
    newValue: Vector<string>;
    constructor(params: { prevValue: Vector<string>; newValue: Vector<string> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeUsernames>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionToggleForum extends TLObject {
    newValue: Bool;
    constructor(params: { newValue: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionToggleForum>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionCreateTopic extends TLObject {
    topic: Raw.TypeForumTopic;
    constructor(params: { topic: Raw.TypeForumTopic });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionCreateTopic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionEditTopic extends TLObject {
    prevTopic: Raw.TypeForumTopic;
    newTopic: Raw.TypeForumTopic;
    constructor(params: { prevTopic: Raw.TypeForumTopic; newTopic: Raw.TypeForumTopic });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelAdminLogEventActionEditTopic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionDeleteTopic extends TLObject {
    topic: Raw.TypeForumTopic;
    constructor(params: { topic: Raw.TypeForumTopic });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionDeleteTopic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionPinTopic extends TLObject {
    prevTopic?: Raw.TypeForumTopic;
    newTopic?: Raw.TypeForumTopic;
    constructor(params: { prevTopic?: Raw.TypeForumTopic; newTopic?: Raw.TypeForumTopic });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelAdminLogEventActionPinTopic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionToggleAntiSpam extends TLObject {
    newValue: Bool;
    constructor(params: { newValue: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionToggleAntiSpam>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangePeerColor extends TLObject {
    prevValue: Raw.TypePeerColor;
    newValue: Raw.TypePeerColor;
    constructor(params: { prevValue: Raw.TypePeerColor; newValue: Raw.TypePeerColor });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangePeerColor>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeProfilePeerColor extends TLObject {
    prevValue: Raw.TypePeerColor;
    newValue: Raw.TypePeerColor;
    constructor(params: { prevValue: Raw.TypePeerColor; newValue: Raw.TypePeerColor });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeProfilePeerColor>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeWallpaper extends TLObject {
    prevValue: Raw.TypeWallPaper;
    newValue: Raw.TypeWallPaper;
    constructor(params: { prevValue: Raw.TypeWallPaper; newValue: Raw.TypeWallPaper });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeWallpaper>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeEmojiStatus extends TLObject {
    prevValue: Raw.TypeEmojiStatus;
    newValue: Raw.TypeEmojiStatus;
    constructor(params: { prevValue: Raw.TypeEmojiStatus; newValue: Raw.TypeEmojiStatus });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeEmojiStatus>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventActionChangeEmojiStickerSet extends TLObject {
    prevStickerset: Raw.TypeInputStickerSet;
    newStickerset: Raw.TypeInputStickerSet;
    constructor(params: {
      prevStickerset: Raw.TypeInputStickerSet;
      newStickerset: Raw.TypeInputStickerSet;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.ChannelAdminLogEventActionChangeEmojiStickerSet>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEvent extends TLObject {
    id: long;
    date: int;
    userId: long;
    action: Raw.TypeChannelAdminLogEventAction;
    constructor(params: {
      id: long;
      date: int;
      userId: long;
      action: Raw.TypeChannelAdminLogEventAction;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelAdminLogEvent>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelAdminLogEventsFilter extends TLObject {
    join?: boolean;
    leave?: boolean;
    invite?: boolean;
    ban?: boolean;
    unban?: boolean;
    kick?: boolean;
    unkick?: boolean;
    promote?: boolean;
    demote?: boolean;
    info?: boolean;
    settings?: boolean;
    pinned?: boolean;
    edit?: boolean;
    delete?: boolean;
    groupCall?: boolean;
    invites?: boolean;
    send?: boolean;
    forums?: boolean;
    constructor(params: {
      join?: boolean;
      leave?: boolean;
      invite?: boolean;
      ban?: boolean;
      unban?: boolean;
      kick?: boolean;
      unkick?: boolean;
      promote?: boolean;
      demote?: boolean;
      info?: boolean;
      settings?: boolean;
      pinned?: boolean;
      edit?: boolean;
      delete?: boolean;
      groupCall?: boolean;
      invites?: boolean;
      send?: boolean;
      forums?: boolean;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelAdminLogEventsFilter>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PopularContact extends TLObject {
    clientId: long;
    importers: int;
    constructor(params: { clientId: long; importers: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PopularContact>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RecentMeUrlUnknown extends TLObject {
    url: string;
    constructor(params: { url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RecentMeUrlUnknown>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RecentMeUrlUser extends TLObject {
    url: string;
    userId: long;
    constructor(params: { url: string; userId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RecentMeUrlUser>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RecentMeUrlChat extends TLObject {
    url: string;
    chatId: long;
    constructor(params: { url: string; chatId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RecentMeUrlChat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RecentMeUrlChatInvite extends TLObject {
    url: string;
    chatInvite: Raw.TypeChatInvite;
    constructor(params: { url: string; chatInvite: Raw.TypeChatInvite });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RecentMeUrlChatInvite>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RecentMeUrlStickerSet extends TLObject {
    url: string;
    set: Raw.TypeStickerSetCovered;
    constructor(params: { url: string; set: Raw.TypeStickerSetCovered });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RecentMeUrlStickerSet>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputSingleMedia extends TLObject {
    media: Raw.TypeInputMedia;
    randomId: long;
    message: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    constructor(params: {
      media: Raw.TypeInputMedia;
      randomId: long;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputSingleMedia>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebAuthorization extends TLObject {
    hash: long;
    botId: long;
    domain: string;
    browser: string;
    platform: string;
    dateCreated: int;
    dateActive: int;
    ip: string;
    region: string;
    constructor(params: {
      hash: long;
      botId: long;
      domain: string;
      browser: string;
      platform: string;
      dateCreated: int;
      dateActive: int;
      ip: string;
      region: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebAuthorization>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessageID extends TLObject {
    id: int;
    constructor(params: { id: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessageID>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessageReplyTo extends TLObject {
    id: int;
    constructor(params: { id: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessageReplyTo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessagePinned extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessagePinned>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMessageCallbackQuery extends TLObject {
    id: int;
    queryId: long;
    constructor(params: { id: int; queryId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMessageCallbackQuery>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputDialogPeer extends TLObject {
    peer: Raw.TypeInputPeer;
    constructor(params: { peer: Raw.TypeInputPeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputDialogPeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputDialogPeerFolder extends TLObject {
    folderId: int;
    constructor(params: { folderId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputDialogPeerFolder>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DialogPeer extends TLObject {
    peer: Raw.TypePeer;
    constructor(params: { peer: Raw.TypePeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DialogPeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DialogPeerFolder extends TLObject {
    folderId: int;
    constructor(params: { folderId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DialogPeerFolder>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class FileHash extends TLObject {
    offset: long;
    limit: int;
    hash: bytes;
    constructor(params: { offset: long; limit: int; hash: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.FileHash>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputClientProxy extends TLObject {
    address: string;
    port: int;
    constructor(params: { address: string; port: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputClientProxy>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputSecureFileUploaded extends TLObject {
    id: long;
    parts: int;
    md5Checksum: string;
    fileHash: bytes;
    secret: bytes;
    constructor(params: {
      id: long;
      parts: int;
      md5Checksum: string;
      fileHash: bytes;
      secret: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputSecureFileUploaded>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputSecureFile extends TLObject {
    id: long;
    accessHash: long;
    constructor(params: { id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputSecureFile>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureFileEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureFileEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureFile extends TLObject {
    id: long;
    accessHash: long;
    size: long;
    dcId: int;
    date: int;
    fileHash: bytes;
    secret: bytes;
    constructor(params: {
      id: long;
      accessHash: long;
      size: long;
      dcId: int;
      date: int;
      fileHash: bytes;
      secret: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureFile>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureData extends TLObject {
    data: bytes;
    dataHash: bytes;
    secret: bytes;
    constructor(params: { data: bytes; dataHash: bytes; secret: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureData>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecurePlainPhone extends TLObject {
    phone: string;
    constructor(params: { phone: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecurePlainPhone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecurePlainEmail extends TLObject {
    email: string;
    constructor(params: { email: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecurePlainEmail>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypePersonalDetails extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypePersonalDetails>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypePassport extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypePassport>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypeDriverLicense extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypeDriverLicense>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypeIdentityCard extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypeIdentityCard>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypeInternalPassport extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypeInternalPassport>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypeAddress extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypeAddress>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypeUtilityBill extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypeUtilityBill>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypeBankStatement extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypeBankStatement>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypeRentalAgreement extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypeRentalAgreement>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypePassportRegistration extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypePassportRegistration>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypeTemporaryRegistration extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypeTemporaryRegistration>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypePhone extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypePhone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueTypeEmail extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueTypeEmail>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValue extends TLObject {
    type: Raw.TypeSecureValueType;
    data?: Raw.TypeSecureData;
    frontSide?: Raw.TypeSecureFile;
    reverseSide?: Raw.TypeSecureFile;
    selfie?: Raw.TypeSecureFile;
    translation?: Vector<Raw.TypeSecureFile>;
    files?: Vector<Raw.TypeSecureFile>;
    plainData?: Raw.TypeSecurePlainData;
    hash: bytes;
    constructor(params: {
      type: Raw.TypeSecureValueType;
      data?: Raw.TypeSecureData;
      frontSide?: Raw.TypeSecureFile;
      reverseSide?: Raw.TypeSecureFile;
      selfie?: Raw.TypeSecureFile;
      translation?: Vector<Raw.TypeSecureFile>;
      files?: Vector<Raw.TypeSecureFile>;
      plainData?: Raw.TypeSecurePlainData;
      hash: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValue>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputSecureValue extends TLObject {
    type: Raw.TypeSecureValueType;
    data?: Raw.TypeSecureData;
    frontSide?: Raw.TypeInputSecureFile;
    reverseSide?: Raw.TypeInputSecureFile;
    selfie?: Raw.TypeInputSecureFile;
    translation?: Vector<Raw.TypeInputSecureFile>;
    files?: Vector<Raw.TypeInputSecureFile>;
    plainData?: Raw.TypeSecurePlainData;
    constructor(params: {
      type: Raw.TypeSecureValueType;
      data?: Raw.TypeSecureData;
      frontSide?: Raw.TypeInputSecureFile;
      reverseSide?: Raw.TypeInputSecureFile;
      selfie?: Raw.TypeInputSecureFile;
      translation?: Vector<Raw.TypeInputSecureFile>;
      files?: Vector<Raw.TypeInputSecureFile>;
      plainData?: Raw.TypeSecurePlainData;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputSecureValue>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueHash extends TLObject {
    type: Raw.TypeSecureValueType;
    hash: bytes;
    constructor(params: { type: Raw.TypeSecureValueType; hash: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueHash>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueErrorData extends TLObject {
    type: Raw.TypeSecureValueType;
    dataHash: bytes;
    field: string;
    text: string;
    constructor(params: {
      type: Raw.TypeSecureValueType;
      dataHash: bytes;
      field: string;
      text: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueErrorData>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueErrorFrontSide extends TLObject {
    type: Raw.TypeSecureValueType;
    fileHash: bytes;
    text: string;
    constructor(params: { type: Raw.TypeSecureValueType; fileHash: bytes; text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueErrorFrontSide>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueErrorReverseSide extends TLObject {
    type: Raw.TypeSecureValueType;
    fileHash: bytes;
    text: string;
    constructor(params: { type: Raw.TypeSecureValueType; fileHash: bytes; text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueErrorReverseSide>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueErrorSelfie extends TLObject {
    type: Raw.TypeSecureValueType;
    fileHash: bytes;
    text: string;
    constructor(params: { type: Raw.TypeSecureValueType; fileHash: bytes; text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueErrorSelfie>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueErrorFile extends TLObject {
    type: Raw.TypeSecureValueType;
    fileHash: bytes;
    text: string;
    constructor(params: { type: Raw.TypeSecureValueType; fileHash: bytes; text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueErrorFile>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueErrorFiles extends TLObject {
    type: Raw.TypeSecureValueType;
    fileHash: Vector<bytes>;
    text: string;
    constructor(params: { type: Raw.TypeSecureValueType; fileHash: Vector<bytes>; text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueErrorFiles>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueError extends TLObject {
    type: Raw.TypeSecureValueType;
    hash: bytes;
    text: string;
    constructor(params: { type: Raw.TypeSecureValueType; hash: bytes; text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueError>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueErrorTranslationFile extends TLObject {
    type: Raw.TypeSecureValueType;
    fileHash: bytes;
    text: string;
    constructor(params: { type: Raw.TypeSecureValueType; fileHash: bytes; text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueErrorTranslationFile>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureValueErrorTranslationFiles extends TLObject {
    type: Raw.TypeSecureValueType;
    fileHash: Vector<bytes>;
    text: string;
    constructor(params: { type: Raw.TypeSecureValueType; fileHash: Vector<bytes>; text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureValueErrorTranslationFiles>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureCredentialsEncrypted extends TLObject {
    data: bytes;
    hash: bytes;
    secret: bytes;
    constructor(params: { data: bytes; hash: bytes; secret: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureCredentialsEncrypted>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SavedPhoneContact extends TLObject {
    phone: string;
    firstName: string;
    lastName: string;
    date: int;
    constructor(params: { phone: string; firstName: string; lastName: string; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SavedPhoneContact>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PasswordKdfAlgoUnknown extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PasswordKdfAlgoUnknown>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow extends TLObject {
    salt1: bytes;
    salt2: bytes;
    g: int;
    p: bytes;
    constructor(params: { salt1: bytes; salt2: bytes; g: int; p: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecurePasswordKdfAlgoUnknown extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecurePasswordKdfAlgoUnknown>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000 extends TLObject {
    salt: bytes;
    constructor(params: { salt: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecurePasswordKdfAlgoSHA512 extends TLObject {
    salt: bytes;
    constructor(params: { salt: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecurePasswordKdfAlgoSHA512>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureSecretSettings extends TLObject {
    secureAlgo: Raw.TypeSecurePasswordKdfAlgo;
    secureSecret: bytes;
    secureSecretId: long;
    constructor(params: {
      secureAlgo: Raw.TypeSecurePasswordKdfAlgo;
      secureSecret: bytes;
      secureSecretId: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureSecretSettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputCheckPasswordEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputCheckPasswordEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputCheckPasswordSRP extends TLObject {
    srpId: long;
    a: bytes;
    m1: bytes;
    constructor(params: { srpId: long; a: bytes; m1: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputCheckPasswordSRP>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureRequiredType extends TLObject {
    nativeNames?: boolean;
    selfieRequired?: boolean;
    translationRequired?: boolean;
    type: Raw.TypeSecureValueType;
    constructor(params: {
      nativeNames?: boolean;
      selfieRequired?: boolean;
      translationRequired?: boolean;
      type: Raw.TypeSecureValueType;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureRequiredType>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SecureRequiredTypeOneOf extends TLObject {
    types: Vector<Raw.TypeSecureRequiredType>;
    constructor(params: { types: Vector<Raw.TypeSecureRequiredType> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SecureRequiredTypeOneOf>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputAppEvent extends TLObject {
    time: double;
    type: string;
    peer: long;
    data: Raw.TypeJSONValue;
    constructor(params: { time: double; type: string; peer: long; data: Raw.TypeJSONValue });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputAppEvent>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class JsonObjectValue extends TLObject {
    key: string;
    value: Raw.TypeJSONValue;
    constructor(params: { key: string; value: Raw.TypeJSONValue });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.JsonObjectValue>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class JsonNull extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.JsonNull>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class JsonBool extends TLObject {
    value: Bool;
    constructor(params: { value: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.JsonBool>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class JsonNumber extends TLObject {
    value: double;
    constructor(params: { value: double });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.JsonNumber>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class JsonString extends TLObject {
    value: string;
    constructor(params: { value: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.JsonString>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class JsonArray extends TLObject {
    value: Vector<Raw.TypeJSONValue>;
    constructor(params: { value: Vector<Raw.TypeJSONValue> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.JsonArray>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class JsonObject extends TLObject {
    value: Vector<Raw.TypeJSONObjectValue>;
    constructor(params: { value: Vector<Raw.TypeJSONObjectValue> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.JsonObject>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageTableCell extends TLObject {
    header?: boolean;
    alignCenter?: boolean;
    alignRight?: boolean;
    valignMiddle?: boolean;
    valignBottom?: boolean;
    text?: Raw.TypeRichText;
    colspan?: int;
    rowspan?: int;
    constructor(params: {
      header?: boolean;
      alignCenter?: boolean;
      alignRight?: boolean;
      valignMiddle?: boolean;
      valignBottom?: boolean;
      text?: Raw.TypeRichText;
      colspan?: int;
      rowspan?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageTableCell>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageTableRow extends TLObject {
    cells: Vector<Raw.TypePageTableCell>;
    constructor(params: { cells: Vector<Raw.TypePageTableCell> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageTableRow>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageCaption extends TLObject {
    text: Raw.TypeRichText;
    credit: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText; credit: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageCaption>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageListItemText extends TLObject {
    text: Raw.TypeRichText;
    constructor(params: { text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageListItemText>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageListItemBlocks extends TLObject {
    blocks: Vector<Raw.TypePageBlock>;
    constructor(params: { blocks: Vector<Raw.TypePageBlock> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageListItemBlocks>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageListOrderedItemText extends TLObject {
    num: string;
    text: Raw.TypeRichText;
    constructor(params: { num: string; text: Raw.TypeRichText });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageListOrderedItemText>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageListOrderedItemBlocks extends TLObject {
    num: string;
    blocks: Vector<Raw.TypePageBlock>;
    constructor(params: { num: string; blocks: Vector<Raw.TypePageBlock> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageListOrderedItemBlocks>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PageRelatedArticle extends TLObject {
    url: string;
    webpageId: long;
    title?: string;
    description?: string;
    photoId?: long;
    author?: string;
    publishedDate?: int;
    constructor(params: {
      url: string;
      webpageId: long;
      title?: string;
      description?: string;
      photoId?: long;
      author?: string;
      publishedDate?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PageRelatedArticle>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Page extends TLObject {
    part?: boolean;
    rtl?: boolean;
    v2?: boolean;
    url: string;
    blocks: Vector<Raw.TypePageBlock>;
    photos: Vector<Raw.TypePhoto>;
    documents: Vector<Raw.TypeDocument>;
    views?: int;
    constructor(params: {
      part?: boolean;
      rtl?: boolean;
      v2?: boolean;
      url: string;
      blocks: Vector<Raw.TypePageBlock>;
      photos: Vector<Raw.TypePhoto>;
      documents: Vector<Raw.TypeDocument>;
      views?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Page>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PollAnswer extends TLObject {
    text: Raw.TypeTextWithEntities;
    option: bytes;
    constructor(params: { text: Raw.TypeTextWithEntities; option: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PollAnswer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Poll extends TLObject {
    id: long;
    closed?: boolean;
    publicVoters?: boolean;
    multipleChoice?: boolean;
    quiz?: boolean;
    question: Raw.TypeTextWithEntities;
    answers: Vector<Raw.TypePollAnswer>;
    closePeriod?: int;
    closeDate?: int;
    constructor(params: {
      id: long;
      closed?: boolean;
      publicVoters?: boolean;
      multipleChoice?: boolean;
      quiz?: boolean;
      question: Raw.TypeTextWithEntities;
      answers: Vector<Raw.TypePollAnswer>;
      closePeriod?: int;
      closeDate?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Poll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PollAnswerVoters extends TLObject {
    chosen?: boolean;
    correct?: boolean;
    option: bytes;
    voters: int;
    constructor(params: { chosen?: boolean; correct?: boolean; option: bytes; voters: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PollAnswerVoters>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PollResults extends TLObject {
    min?: boolean;
    results?: Vector<Raw.TypePollAnswerVoters>;
    totalVoters?: int;
    recentVoters?: Vector<Raw.TypePeer>;
    solution?: string;
    solutionEntities?: Vector<Raw.TypeMessageEntity>;
    constructor(params: {
      min?: boolean;
      results?: Vector<Raw.TypePollAnswerVoters>;
      totalVoters?: int;
      recentVoters?: Vector<Raw.TypePeer>;
      solution?: string;
      solutionEntities?: Vector<Raw.TypeMessageEntity>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PollResults>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatOnlines extends TLObject {
    onlines: int;
    constructor(params: { onlines: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatOnlines>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StatsURL extends TLObject {
    url: string;
    constructor(params: { url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StatsURL>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatAdminRights extends TLObject {
    changeInfo?: boolean;
    postMessages?: boolean;
    editMessages?: boolean;
    deleteMessages?: boolean;
    banUsers?: boolean;
    inviteUsers?: boolean;
    pinMessages?: boolean;
    addAdmins?: boolean;
    anonymous?: boolean;
    manageCall?: boolean;
    other?: boolean;
    manageTopics?: boolean;
    postStories?: boolean;
    editStories?: boolean;
    deleteStories?: boolean;
    constructor(params: {
      changeInfo?: boolean;
      postMessages?: boolean;
      editMessages?: boolean;
      deleteMessages?: boolean;
      banUsers?: boolean;
      inviteUsers?: boolean;
      pinMessages?: boolean;
      addAdmins?: boolean;
      anonymous?: boolean;
      manageCall?: boolean;
      other?: boolean;
      manageTopics?: boolean;
      postStories?: boolean;
      editStories?: boolean;
      deleteStories?: boolean;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatAdminRights>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatBannedRights extends TLObject {
    viewMessages?: boolean;
    sendMessages?: boolean;
    sendMedia?: boolean;
    sendStickers?: boolean;
    sendGifs?: boolean;
    sendGames?: boolean;
    sendInline?: boolean;
    embedLinks?: boolean;
    sendPolls?: boolean;
    changeInfo?: boolean;
    inviteUsers?: boolean;
    pinMessages?: boolean;
    manageTopics?: boolean;
    sendPhotos?: boolean;
    sendVideos?: boolean;
    sendRoundvideos?: boolean;
    sendAudios?: boolean;
    sendVoices?: boolean;
    sendDocs?: boolean;
    sendPlain?: boolean;
    untilDate: int;
    constructor(params: {
      viewMessages?: boolean;
      sendMessages?: boolean;
      sendMedia?: boolean;
      sendStickers?: boolean;
      sendGifs?: boolean;
      sendGames?: boolean;
      sendInline?: boolean;
      embedLinks?: boolean;
      sendPolls?: boolean;
      changeInfo?: boolean;
      inviteUsers?: boolean;
      pinMessages?: boolean;
      manageTopics?: boolean;
      sendPhotos?: boolean;
      sendVideos?: boolean;
      sendRoundvideos?: boolean;
      sendAudios?: boolean;
      sendVoices?: boolean;
      sendDocs?: boolean;
      sendPlain?: boolean;
      untilDate: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatBannedRights>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputWallPaper extends TLObject {
    id: long;
    accessHash: long;
    constructor(params: { id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputWallPaper>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputWallPaperSlug extends TLObject {
    slug: string;
    constructor(params: { slug: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputWallPaperSlug>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputWallPaperNoFile extends TLObject {
    id: long;
    constructor(params: { id: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputWallPaperNoFile>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class CodeSettings extends TLObject {
    allowFlashcall?: boolean;
    currentNumber?: boolean;
    allowAppHash?: boolean;
    allowMissedCall?: boolean;
    allowFirebase?: boolean;
    unknownNumber?: boolean;
    logoutTokens?: Vector<bytes>;
    token?: string;
    appSandbox?: Bool;
    constructor(params: {
      allowFlashcall?: boolean;
      currentNumber?: boolean;
      allowAppHash?: boolean;
      allowMissedCall?: boolean;
      allowFirebase?: boolean;
      unknownNumber?: boolean;
      logoutTokens?: Vector<bytes>;
      token?: string;
      appSandbox?: Bool;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.CodeSettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WallPaperSettings extends TLObject {
    blur?: boolean;
    motion?: boolean;
    backgroundColor?: int;
    secondBackgroundColor?: int;
    thirdBackgroundColor?: int;
    fourthBackgroundColor?: int;
    intensity?: int;
    rotation?: int;
    emoticon?: string;
    constructor(params: {
      blur?: boolean;
      motion?: boolean;
      backgroundColor?: int;
      secondBackgroundColor?: int;
      thirdBackgroundColor?: int;
      fourthBackgroundColor?: int;
      intensity?: int;
      rotation?: int;
      emoticon?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WallPaperSettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AutoDownloadSettings extends TLObject {
    disabled?: boolean;
    videoPreloadLarge?: boolean;
    audioPreloadNext?: boolean;
    phonecallsLessData?: boolean;
    storiesPreload?: boolean;
    photoSizeMax: int;
    videoSizeMax: long;
    fileSizeMax: long;
    videoUploadMaxbitrate: int;
    smallQueueActiveOperationsMax: int;
    largeQueueActiveOperationsMax: int;
    constructor(params: {
      disabled?: boolean;
      videoPreloadLarge?: boolean;
      audioPreloadNext?: boolean;
      phonecallsLessData?: boolean;
      storiesPreload?: boolean;
      photoSizeMax: int;
      videoSizeMax: long;
      fileSizeMax: long;
      videoUploadMaxbitrate: int;
      smallQueueActiveOperationsMax: int;
      largeQueueActiveOperationsMax: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AutoDownloadSettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmojiKeyword extends TLObject {
    keyword: string;
    emoticons: Vector<string>;
    constructor(params: { keyword: string; emoticons: Vector<string> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmojiKeyword>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmojiKeywordDeleted extends TLObject {
    keyword: string;
    emoticons: Vector<string>;
    constructor(params: { keyword: string; emoticons: Vector<string> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmojiKeywordDeleted>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmojiKeywordsDifference extends TLObject {
    langCode: string;
    fromVersion: int;
    version: int;
    keywords: Vector<Raw.TypeEmojiKeyword>;
    constructor(params: {
      langCode: string;
      fromVersion: int;
      version: int;
      keywords: Vector<Raw.TypeEmojiKeyword>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmojiKeywordsDifference>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmojiURL extends TLObject {
    url: string;
    constructor(params: { url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmojiURL>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmojiLanguage extends TLObject {
    langCode: string;
    constructor(params: { langCode: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmojiLanguage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Folder extends TLObject {
    autofillNewBroadcasts?: boolean;
    autofillPublicGroups?: boolean;
    autofillNewCorrespondents?: boolean;
    id: int;
    title: string;
    photo?: Raw.TypeChatPhoto;
    constructor(params: {
      autofillNewBroadcasts?: boolean;
      autofillPublicGroups?: boolean;
      autofillNewCorrespondents?: boolean;
      id: int;
      title: string;
      photo?: Raw.TypeChatPhoto;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Folder>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputFolderPeer extends TLObject {
    peer: Raw.TypeInputPeer;
    folderId: int;
    constructor(params: { peer: Raw.TypeInputPeer; folderId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputFolderPeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class FolderPeer extends TLObject {
    peer: Raw.TypePeer;
    folderId: int;
    constructor(params: { peer: Raw.TypePeer; folderId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.FolderPeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UrlAuthResultRequest extends TLObject {
    requestWriteAccess?: boolean;
    bot: Raw.TypeUser;
    domain: string;
    constructor(params: { requestWriteAccess?: boolean; bot: Raw.TypeUser; domain: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UrlAuthResultRequest>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UrlAuthResultAccepted extends TLObject {
    url: string;
    constructor(params: { url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UrlAuthResultAccepted>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class UrlAuthResultDefault extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.UrlAuthResultDefault>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelLocationEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelLocationEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChannelLocation extends TLObject {
    geoPoint: Raw.TypeGeoPoint;
    address: string;
    constructor(params: { geoPoint: Raw.TypeGeoPoint; address: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChannelLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PeerLocated extends TLObject {
    peer: Raw.TypePeer;
    expires: int;
    distance: int;
    constructor(params: { peer: Raw.TypePeer; expires: int; distance: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PeerLocated>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PeerSelfLocated extends TLObject {
    expires: int;
    constructor(params: { expires: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PeerSelfLocated>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RestrictionReason extends TLObject {
    platform: string;
    reason: string;
    text: string;
    constructor(params: { platform: string; reason: string; text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RestrictionReason>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputTheme extends TLObject {
    id: long;
    accessHash: long;
    constructor(params: { id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputTheme>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputThemeSlug extends TLObject {
    slug: string;
    constructor(params: { slug: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputThemeSlug>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Theme extends TLObject {
    creator?: boolean;
    default?: boolean;
    forChat?: boolean;
    id: long;
    accessHash: long;
    slug: string;
    title: string;
    document?: Raw.TypeDocument;
    settings?: Vector<Raw.TypeThemeSettings>;
    emoticon?: string;
    installsCount?: int;
    constructor(params: {
      creator?: boolean;
      default?: boolean;
      forChat?: boolean;
      id: long;
      accessHash: long;
      slug: string;
      title: string;
      document?: Raw.TypeDocument;
      settings?: Vector<Raw.TypeThemeSettings>;
      emoticon?: string;
      installsCount?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Theme>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BaseThemeClassic extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BaseThemeClassic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BaseThemeDay extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BaseThemeDay>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BaseThemeNight extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BaseThemeNight>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BaseThemeTinted extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BaseThemeTinted>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BaseThemeArctic extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BaseThemeArctic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputThemeSettings extends TLObject {
    messageColorsAnimated?: boolean;
    baseTheme: Raw.TypeBaseTheme;
    accentColor: int;
    outboxAccentColor?: int;
    messageColors?: Vector<int>;
    wallpaper?: Raw.TypeInputWallPaper;
    wallpaperSettings?: Raw.TypeWallPaperSettings;
    constructor(params: {
      messageColorsAnimated?: boolean;
      baseTheme: Raw.TypeBaseTheme;
      accentColor: int;
      outboxAccentColor?: int;
      messageColors?: Vector<int>;
      wallpaper?: Raw.TypeInputWallPaper;
      wallpaperSettings?: Raw.TypeWallPaperSettings;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputThemeSettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ThemeSettings extends TLObject {
    messageColorsAnimated?: boolean;
    baseTheme: Raw.TypeBaseTheme;
    accentColor: int;
    outboxAccentColor?: int;
    messageColors?: Vector<int>;
    wallpaper?: Raw.TypeWallPaper;
    constructor(params: {
      messageColorsAnimated?: boolean;
      baseTheme: Raw.TypeBaseTheme;
      accentColor: int;
      outboxAccentColor?: int;
      messageColors?: Vector<int>;
      wallpaper?: Raw.TypeWallPaper;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ThemeSettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebPageAttributeTheme extends TLObject {
    documents?: Vector<Raw.TypeDocument>;
    settings?: Raw.TypeThemeSettings;
    constructor(params: { documents?: Vector<Raw.TypeDocument>; settings?: Raw.TypeThemeSettings });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebPageAttributeTheme>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebPageAttributeStory extends TLObject {
    peer: Raw.TypePeer;
    id: int;
    story?: Raw.TypeStoryItem;
    constructor(params: { peer: Raw.TypePeer; id: int; story?: Raw.TypeStoryItem });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebPageAttributeStory>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebPageAttributeStickerSet extends TLObject {
    emojis?: boolean;
    textColor?: boolean;
    stickers: Vector<Raw.TypeDocument>;
    constructor(params: {
      emojis?: boolean;
      textColor?: boolean;
      stickers: Vector<Raw.TypeDocument>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebPageAttributeStickerSet>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BankCardOpenUrl extends TLObject {
    url: string;
    name: string;
    constructor(params: { url: string; name: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BankCardOpenUrl>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DialogFilter extends TLObject {
    contacts?: boolean;
    nonContacts?: boolean;
    groups?: boolean;
    broadcasts?: boolean;
    bots?: boolean;
    excludeMuted?: boolean;
    excludeRead?: boolean;
    excludeArchived?: boolean;
    id: int;
    title: string;
    emoticon?: string;
    color?: int;
    pinnedPeers: Vector<Raw.TypeInputPeer>;
    includePeers: Vector<Raw.TypeInputPeer>;
    excludePeers: Vector<Raw.TypeInputPeer>;
    constructor(params: {
      contacts?: boolean;
      nonContacts?: boolean;
      groups?: boolean;
      broadcasts?: boolean;
      bots?: boolean;
      excludeMuted?: boolean;
      excludeRead?: boolean;
      excludeArchived?: boolean;
      id: int;
      title: string;
      emoticon?: string;
      color?: int;
      pinnedPeers: Vector<Raw.TypeInputPeer>;
      includePeers: Vector<Raw.TypeInputPeer>;
      excludePeers: Vector<Raw.TypeInputPeer>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DialogFilter>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DialogFilterDefault extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DialogFilterDefault>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DialogFilterChatlist extends TLObject {
    hasMyInvites?: boolean;
    id: int;
    title: string;
    emoticon?: string;
    color?: int;
    pinnedPeers: Vector<Raw.TypeInputPeer>;
    includePeers: Vector<Raw.TypeInputPeer>;
    constructor(params: {
      hasMyInvites?: boolean;
      id: int;
      title: string;
      emoticon?: string;
      color?: int;
      pinnedPeers: Vector<Raw.TypeInputPeer>;
      includePeers: Vector<Raw.TypeInputPeer>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DialogFilterChatlist>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DialogFilterSuggested extends TLObject {
    filter: Raw.TypeDialogFilter;
    description: string;
    constructor(params: { filter: Raw.TypeDialogFilter; description: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DialogFilterSuggested>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StatsDateRangeDays extends TLObject {
    minDate: int;
    maxDate: int;
    constructor(params: { minDate: int; maxDate: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StatsDateRangeDays>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StatsAbsValueAndPrev extends TLObject {
    current: double;
    previous: double;
    constructor(params: { current: double; previous: double });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StatsAbsValueAndPrev>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StatsPercentValue extends TLObject {
    part: double;
    total: double;
    constructor(params: { part: double; total: double });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StatsPercentValue>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StatsGraphAsync extends TLObject {
    token: string;
    constructor(params: { token: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StatsGraphAsync>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StatsGraphError extends TLObject {
    error: string;
    constructor(params: { error: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StatsGraphError>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StatsGraph extends TLObject {
    json: Raw.TypeDataJSON;
    zoomToken?: string;
    constructor(params: { json: Raw.TypeDataJSON; zoomToken?: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StatsGraph>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class VideoSize extends TLObject {
    type: string;
    w: int;
    h: int;
    size: int;
    videoStartTs?: double;
    constructor(params: { type: string; w: int; h: int; size: int; videoStartTs?: double });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.VideoSize>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class VideoSizeEmojiMarkup extends TLObject {
    emojiId: long;
    backgroundColors: Vector<int>;
    constructor(params: { emojiId: long; backgroundColors: Vector<int> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.VideoSizeEmojiMarkup>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class VideoSizeStickerMarkup extends TLObject {
    stickerset: Raw.TypeInputStickerSet;
    stickerId: long;
    backgroundColors: Vector<int>;
    constructor(params: {
      stickerset: Raw.TypeInputStickerSet;
      stickerId: long;
      backgroundColors: Vector<int>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.VideoSizeStickerMarkup>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StatsGroupTopPoster extends TLObject {
    userId: long;
    messages: int;
    avgChars: int;
    constructor(params: { userId: long; messages: int; avgChars: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StatsGroupTopPoster>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StatsGroupTopAdmin extends TLObject {
    userId: long;
    deleted: int;
    kicked: int;
    banned: int;
    constructor(params: { userId: long; deleted: int; kicked: int; banned: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StatsGroupTopAdmin>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StatsGroupTopInviter extends TLObject {
    userId: long;
    invitations: int;
    constructor(params: { userId: long; invitations: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StatsGroupTopInviter>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class GlobalPrivacySettings extends TLObject {
    archiveAndMuteNewNoncontactPeers?: boolean;
    keepArchivedUnmuted?: boolean;
    keepArchivedFolders?: boolean;
    hideReadMarks?: boolean;
    newNoncontactPeersRequirePremium?: boolean;
    constructor(params: {
      archiveAndMuteNewNoncontactPeers?: boolean;
      keepArchivedUnmuted?: boolean;
      keepArchivedFolders?: boolean;
      hideReadMarks?: boolean;
      newNoncontactPeersRequirePremium?: boolean;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.GlobalPrivacySettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageViews extends TLObject {
    views?: int;
    forwards?: int;
    replies?: Raw.TypeMessageReplies;
    constructor(params: { views?: int; forwards?: int; replies?: Raw.TypeMessageReplies });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageViews>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageReplyHeader extends TLObject {
    replyToScheduled?: boolean;
    forumTopic?: boolean;
    quote?: boolean;
    replyToMsgId?: int;
    replyToPeerId?: Raw.TypePeer;
    replyFrom?: Raw.TypeMessageFwdHeader;
    replyMedia?: Raw.TypeMessageMedia;
    replyToTopId?: int;
    quoteText?: string;
    quoteEntities?: Vector<Raw.TypeMessageEntity>;
    quoteOffset?: int;
    constructor(params: {
      replyToScheduled?: boolean;
      forumTopic?: boolean;
      quote?: boolean;
      replyToMsgId?: int;
      replyToPeerId?: Raw.TypePeer;
      replyFrom?: Raw.TypeMessageFwdHeader;
      replyMedia?: Raw.TypeMessageMedia;
      replyToTopId?: int;
      quoteText?: string;
      quoteEntities?: Vector<Raw.TypeMessageEntity>;
      quoteOffset?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageReplyHeader>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageReplyStoryHeader extends TLObject {
    peer: Raw.TypePeer;
    storyId: int;
    constructor(params: { peer: Raw.TypePeer; storyId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageReplyStoryHeader>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageReplies extends TLObject {
    comments?: boolean;
    replies: int;
    repliesPts: int;
    recentRepliers?: Vector<Raw.TypePeer>;
    channelId?: long;
    maxId?: int;
    readMaxId?: int;
    constructor(params: {
      comments?: boolean;
      replies: int;
      repliesPts: int;
      recentRepliers?: Vector<Raw.TypePeer>;
      channelId?: long;
      maxId?: int;
      readMaxId?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageReplies>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PeerBlocked extends TLObject {
    peerId: Raw.TypePeer;
    date: int;
    constructor(params: { peerId: Raw.TypePeer; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PeerBlocked>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class GroupCallDiscarded extends TLObject {
    id: long;
    accessHash: long;
    duration: int;
    constructor(params: { id: long; accessHash: long; duration: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.GroupCallDiscarded>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class GroupCall extends TLObject {
    joinMuted?: boolean;
    canChangeJoinMuted?: boolean;
    joinDateAsc?: boolean;
    scheduleStartSubscribed?: boolean;
    canStartVideo?: boolean;
    recordVideoActive?: boolean;
    rtmpStream?: boolean;
    listenersHidden?: boolean;
    id: long;
    accessHash: long;
    participantsCount: int;
    title?: string;
    streamDcId?: int;
    recordStartDate?: int;
    scheduleDate?: int;
    unmutedVideoCount?: int;
    unmutedVideoLimit: int;
    version: int;
    constructor(params: {
      joinMuted?: boolean;
      canChangeJoinMuted?: boolean;
      joinDateAsc?: boolean;
      scheduleStartSubscribed?: boolean;
      canStartVideo?: boolean;
      recordVideoActive?: boolean;
      rtmpStream?: boolean;
      listenersHidden?: boolean;
      id: long;
      accessHash: long;
      participantsCount: int;
      title?: string;
      streamDcId?: int;
      recordStartDate?: int;
      scheduleDate?: int;
      unmutedVideoCount?: int;
      unmutedVideoLimit: int;
      version: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.GroupCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputGroupCall extends TLObject {
    id: long;
    accessHash: long;
    constructor(params: { id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputGroupCall>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class GroupCallParticipant extends TLObject {
    muted?: boolean;
    left?: boolean;
    canSelfUnmute?: boolean;
    justJoined?: boolean;
    versioned?: boolean;
    min?: boolean;
    mutedByYou?: boolean;
    volumeByAdmin?: boolean;
    self?: boolean;
    videoJoined?: boolean;
    peer: Raw.TypePeer;
    date: int;
    activeDate?: int;
    source: int;
    volume?: int;
    about?: string;
    raiseHandRating?: long;
    video?: Raw.TypeGroupCallParticipantVideo;
    presentation?: Raw.TypeGroupCallParticipantVideo;
    constructor(params: {
      muted?: boolean;
      left?: boolean;
      canSelfUnmute?: boolean;
      justJoined?: boolean;
      versioned?: boolean;
      min?: boolean;
      mutedByYou?: boolean;
      volumeByAdmin?: boolean;
      self?: boolean;
      videoJoined?: boolean;
      peer: Raw.TypePeer;
      date: int;
      activeDate?: int;
      source: int;
      volume?: int;
      about?: string;
      raiseHandRating?: long;
      video?: Raw.TypeGroupCallParticipantVideo;
      presentation?: Raw.TypeGroupCallParticipantVideo;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.GroupCallParticipant>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InlineQueryPeerTypeSameBotPM extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InlineQueryPeerTypeSameBotPM>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InlineQueryPeerTypePM extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InlineQueryPeerTypePM>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InlineQueryPeerTypeChat extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InlineQueryPeerTypeChat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InlineQueryPeerTypeMegagroup extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InlineQueryPeerTypeMegagroup>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InlineQueryPeerTypeBroadcast extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InlineQueryPeerTypeBroadcast>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InlineQueryPeerTypeBotPM extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InlineQueryPeerTypeBotPM>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatInviteImporter extends TLObject {
    requested?: boolean;
    viaChatlist?: boolean;
    userId: long;
    date: int;
    about?: string;
    approvedBy?: long;
    constructor(params: {
      requested?: boolean;
      viaChatlist?: boolean;
      userId: long;
      date: int;
      about?: string;
      approvedBy?: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatInviteImporter>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatAdminWithInvites extends TLObject {
    adminId: long;
    invitesCount: int;
    revokedInvitesCount: int;
    constructor(params: { adminId: long; invitesCount: int; revokedInvitesCount: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatAdminWithInvites>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class GroupCallParticipantVideoSourceGroup extends TLObject {
    semantics: string;
    sources: Vector<int>;
    constructor(params: { semantics: string; sources: Vector<int> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.GroupCallParticipantVideoSourceGroup>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class GroupCallParticipantVideo extends TLObject {
    paused?: boolean;
    endpoint: string;
    sourceGroups: Vector<Raw.TypeGroupCallParticipantVideoSourceGroup>;
    audioSource?: int;
    constructor(params: {
      paused?: boolean;
      endpoint: string;
      sourceGroups: Vector<Raw.TypeGroupCallParticipantVideoSourceGroup>;
      audioSource?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.GroupCallParticipantVideo>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotCommandScopeDefault extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotCommandScopeDefault>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotCommandScopeUsers extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotCommandScopeUsers>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotCommandScopeChats extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotCommandScopeChats>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotCommandScopeChatAdmins extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotCommandScopeChatAdmins>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotCommandScopePeer extends TLObject {
    peer: Raw.TypeInputPeer;
    constructor(params: { peer: Raw.TypeInputPeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotCommandScopePeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotCommandScopePeerAdmins extends TLObject {
    peer: Raw.TypeInputPeer;
    constructor(params: { peer: Raw.TypeInputPeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotCommandScopePeerAdmins>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotCommandScopePeerUser extends TLObject {
    peer: Raw.TypeInputPeer;
    userId: Raw.TypeInputUser;
    constructor(params: { peer: Raw.TypeInputPeer; userId: Raw.TypeInputUser });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotCommandScopePeerUser>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SponsoredMessage extends TLObject {
    recommended?: boolean;
    canReport?: boolean;
    randomId: bytes;
    url: string;
    title: string;
    message: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    photo?: Raw.TypePhoto;
    color?: Raw.TypePeerColor;
    buttonText: string;
    sponsorInfo?: string;
    additionalInfo?: string;
    constructor(params: {
      recommended?: boolean;
      canReport?: boolean;
      randomId: bytes;
      url: string;
      title: string;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      photo?: Raw.TypePhoto;
      color?: Raw.TypePeerColor;
      buttonText: string;
      sponsorInfo?: string;
      additionalInfo?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SponsoredMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SearchResultsCalendarPeriod extends TLObject {
    date: int;
    minMsgId: int;
    maxMsgId: int;
    count: int;
    constructor(params: { date: int; minMsgId: int; maxMsgId: int; count: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SearchResultsCalendarPeriod>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SearchResultPosition extends TLObject {
    msgId: int;
    date: int;
    offset: int;
    constructor(params: { msgId: int; date: int; offset: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SearchResultPosition>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReactionCount extends TLObject {
    chosenOrder?: int;
    reaction: Raw.TypeReaction;
    count: int;
    constructor(params: { chosenOrder?: int; reaction: Raw.TypeReaction; count: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReactionCount>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageReactions extends TLObject {
    min?: boolean;
    canSeeList?: boolean;
    reactionsAsTags?: boolean;
    results: Vector<Raw.TypeReactionCount>;
    recentReactions?: Vector<Raw.TypeMessagePeerReaction>;
    constructor(params: {
      min?: boolean;
      canSeeList?: boolean;
      reactionsAsTags?: boolean;
      results: Vector<Raw.TypeReactionCount>;
      recentReactions?: Vector<Raw.TypeMessagePeerReaction>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageReactions>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AvailableReaction extends TLObject {
    inactive?: boolean;
    premium?: boolean;
    reaction: string;
    title: string;
    staticIcon: Raw.TypeDocument;
    appearAnimation: Raw.TypeDocument;
    selectAnimation: Raw.TypeDocument;
    activateAnimation: Raw.TypeDocument;
    effectAnimation: Raw.TypeDocument;
    aroundAnimation?: Raw.TypeDocument;
    centerIcon?: Raw.TypeDocument;
    constructor(params: {
      inactive?: boolean;
      premium?: boolean;
      reaction: string;
      title: string;
      staticIcon: Raw.TypeDocument;
      appearAnimation: Raw.TypeDocument;
      selectAnimation: Raw.TypeDocument;
      activateAnimation: Raw.TypeDocument;
      effectAnimation: Raw.TypeDocument;
      aroundAnimation?: Raw.TypeDocument;
      centerIcon?: Raw.TypeDocument;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AvailableReaction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessagePeerReaction extends TLObject {
    big?: boolean;
    unread?: boolean;
    my?: boolean;
    peerId: Raw.TypePeer;
    date: int;
    reaction: Raw.TypeReaction;
    constructor(params: {
      big?: boolean;
      unread?: boolean;
      my?: boolean;
      peerId: Raw.TypePeer;
      date: int;
      reaction: Raw.TypeReaction;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessagePeerReaction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class GroupCallStreamChannel extends TLObject {
    channel: int;
    scale: int;
    lastTimestampMs: long;
    constructor(params: { channel: int; scale: int; lastTimestampMs: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.GroupCallStreamChannel>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AttachMenuBotIconColor extends TLObject {
    name: string;
    color: int;
    constructor(params: { name: string; color: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AttachMenuBotIconColor>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AttachMenuBotIcon extends TLObject {
    name: string;
    icon: Raw.TypeDocument;
    colors?: Vector<Raw.TypeAttachMenuBotIconColor>;
    constructor(params: {
      name: string;
      icon: Raw.TypeDocument;
      colors?: Vector<Raw.TypeAttachMenuBotIconColor>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AttachMenuBotIcon>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AttachMenuBot extends TLObject {
    inactive?: boolean;
    hasSettings?: boolean;
    requestWriteAccess?: boolean;
    showInAttachMenu?: boolean;
    showInSideMenu?: boolean;
    sideMenuDisclaimerNeeded?: boolean;
    botId: long;
    shortName: string;
    peerTypes?: Vector<Raw.TypeAttachMenuPeerType>;
    icons: Vector<Raw.TypeAttachMenuBotIcon>;
    constructor(params: {
      inactive?: boolean;
      hasSettings?: boolean;
      requestWriteAccess?: boolean;
      showInAttachMenu?: boolean;
      showInSideMenu?: boolean;
      sideMenuDisclaimerNeeded?: boolean;
      botId: long;
      shortName: string;
      peerTypes?: Vector<Raw.TypeAttachMenuPeerType>;
      icons: Vector<Raw.TypeAttachMenuBotIcon>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AttachMenuBot>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AttachMenuBotsNotModified extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AttachMenuBotsNotModified>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AttachMenuBots extends TLObject {
    hash: long;
    bots: Vector<Raw.TypeAttachMenuBot>;
    users: Vector<Raw.TypeUser>;
    constructor(params: {
      hash: long;
      bots: Vector<Raw.TypeAttachMenuBot>;
      users: Vector<Raw.TypeUser>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AttachMenuBots>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AttachMenuBotsBot extends TLObject {
    bot: Raw.TypeAttachMenuBot;
    users: Vector<Raw.TypeUser>;
    constructor(params: { bot: Raw.TypeAttachMenuBot; users: Vector<Raw.TypeUser> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AttachMenuBotsBot>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebViewResultUrl extends TLObject {
    queryId: long;
    url: string;
    constructor(params: { queryId: long; url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebViewResultUrl>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SimpleWebViewResultUrl extends TLObject {
    url: string;
    constructor(params: { url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SimpleWebViewResultUrl>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class WebViewMessageSent extends TLObject {
    msgId?: Raw.TypeInputBotInlineMessageID;
    constructor(params: { msgId?: Raw.TypeInputBotInlineMessageID });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.WebViewMessageSent>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotMenuButtonDefault extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotMenuButtonDefault>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotMenuButtonCommands extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotMenuButtonCommands>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotMenuButton extends TLObject {
    text: string;
    url: string;
    constructor(params: { text: string; url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotMenuButton>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class NotificationSoundDefault extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.NotificationSoundDefault>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class NotificationSoundNone extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.NotificationSoundNone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class NotificationSoundLocal extends TLObject {
    title: string;
    data: string;
    constructor(params: { title: string; data: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.NotificationSoundLocal>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class NotificationSoundRingtone extends TLObject {
    id: long;
    constructor(params: { id: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.NotificationSoundRingtone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AttachMenuPeerTypeSameBotPM extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AttachMenuPeerTypeSameBotPM>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AttachMenuPeerTypeBotPM extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AttachMenuPeerTypeBotPM>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AttachMenuPeerTypePM extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AttachMenuPeerTypePM>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AttachMenuPeerTypeChat extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AttachMenuPeerTypeChat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AttachMenuPeerTypeBroadcast extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AttachMenuPeerTypeBroadcast>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputInvoiceMessage extends TLObject {
    peer: Raw.TypeInputPeer;
    msgId: int;
    constructor(params: { peer: Raw.TypeInputPeer; msgId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputInvoiceMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputInvoiceSlug extends TLObject {
    slug: string;
    constructor(params: { slug: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputInvoiceSlug>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputInvoicePremiumGiftCode extends TLObject {
    purpose: Raw.TypeInputStorePaymentPurpose;
    option: Raw.TypePremiumGiftCodeOption;
    constructor(params: {
      purpose: Raw.TypeInputStorePaymentPurpose;
      option: Raw.TypePremiumGiftCodeOption;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputInvoicePremiumGiftCode>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStorePaymentPremiumSubscription extends TLObject {
    restore?: boolean;
    upgrade?: boolean;
    constructor(params: { restore?: boolean; upgrade?: boolean });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStorePaymentPremiumSubscription>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStorePaymentGiftPremium extends TLObject {
    userId: Raw.TypeInputUser;
    currency: string;
    amount: long;
    constructor(params: { userId: Raw.TypeInputUser; currency: string; amount: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStorePaymentGiftPremium>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStorePaymentPremiumGiftCode extends TLObject {
    users: Vector<Raw.TypeInputUser>;
    boostPeer?: Raw.TypeInputPeer;
    currency: string;
    amount: long;
    constructor(params: {
      users: Vector<Raw.TypeInputUser>;
      boostPeer?: Raw.TypeInputPeer;
      currency: string;
      amount: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStorePaymentPremiumGiftCode>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputStorePaymentPremiumGiveaway extends TLObject {
    onlyNewSubscribers?: boolean;
    winnersAreVisible?: boolean;
    boostPeer: Raw.TypeInputPeer;
    additionalPeers?: Vector<Raw.TypeInputPeer>;
    countriesIso2?: Vector<string>;
    prizeDescription?: string;
    randomId: long;
    untilDate: int;
    currency: string;
    amount: long;
    constructor(params: {
      onlyNewSubscribers?: boolean;
      winnersAreVisible?: boolean;
      boostPeer: Raw.TypeInputPeer;
      additionalPeers?: Vector<Raw.TypeInputPeer>;
      countriesIso2?: Vector<string>;
      prizeDescription?: string;
      randomId: long;
      untilDate: int;
      currency: string;
      amount: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputStorePaymentPremiumGiveaway>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PremiumGiftOption extends TLObject {
    months: int;
    currency: string;
    amount: long;
    botUrl: string;
    storeProduct?: string;
    constructor(params: {
      months: int;
      currency: string;
      amount: long;
      botUrl: string;
      storeProduct?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PremiumGiftOption>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PaymentFormMethod extends TLObject {
    url: string;
    title: string;
    constructor(params: { url: string; title: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PaymentFormMethod>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmojiStatusEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmojiStatusEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmojiStatus extends TLObject {
    documentId: long;
    constructor(params: { documentId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmojiStatus>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmojiStatusUntil extends TLObject {
    documentId: long;
    until: int;
    constructor(params: { documentId: long; until: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmojiStatusUntil>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReactionEmpty extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReactionEmpty>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReactionEmoji extends TLObject {
    emoticon: string;
    constructor(params: { emoticon: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReactionEmoji>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReactionCustomEmoji extends TLObject {
    documentId: long;
    constructor(params: { documentId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReactionCustomEmoji>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatReactionsNone extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatReactionsNone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatReactionsAll extends TLObject {
    allowCustom?: boolean;
    constructor(params: { allowCustom?: boolean });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatReactionsAll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ChatReactionsSome extends TLObject {
    reactions: Vector<Raw.TypeReaction>;
    constructor(params: { reactions: Vector<Raw.TypeReaction> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ChatReactionsSome>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmailVerifyPurposeLoginSetup extends TLObject {
    phoneNumber: string;
    phoneCodeHash: string;
    constructor(params: { phoneNumber: string; phoneCodeHash: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmailVerifyPurposeLoginSetup>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmailVerifyPurposeLoginChange extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmailVerifyPurposeLoginChange>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmailVerifyPurposePassport extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmailVerifyPurposePassport>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmailVerificationCode extends TLObject {
    code: string;
    constructor(params: { code: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmailVerificationCode>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmailVerificationGoogle extends TLObject {
    token: string;
    constructor(params: { token: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmailVerificationGoogle>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmailVerificationApple extends TLObject {
    token: string;
    constructor(params: { token: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmailVerificationApple>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PremiumSubscriptionOption extends TLObject {
    current?: boolean;
    canPurchaseUpgrade?: boolean;
    transaction?: string;
    months: int;
    currency: string;
    amount: long;
    botUrl: string;
    storeProduct?: string;
    constructor(params: {
      current?: boolean;
      canPurchaseUpgrade?: boolean;
      transaction?: string;
      months: int;
      currency: string;
      amount: long;
      botUrl: string;
      storeProduct?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PremiumSubscriptionOption>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendAsPeer extends TLObject {
    premiumRequired?: boolean;
    peer: Raw.TypePeer;
    constructor(params: { premiumRequired?: boolean; peer: Raw.TypePeer });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendAsPeer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageExtendedMediaPreview extends TLObject {
    w?: int;
    h?: int;
    thumb?: Raw.TypePhotoSize;
    videoDuration?: int;
    constructor(params: { w?: int; h?: int; thumb?: Raw.TypePhotoSize; videoDuration?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageExtendedMediaPreview>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessageExtendedMedia extends TLObject {
    media: Raw.TypeMessageMedia;
    constructor(params: { media: Raw.TypeMessageMedia });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessageExtendedMedia>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StickerKeyword extends TLObject {
    documentId: long;
    keyword: Vector<string>;
    constructor(params: { documentId: long; keyword: Vector<string> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StickerKeyword>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Username extends TLObject {
    editable?: boolean;
    active?: boolean;
    username: string;
    constructor(params: { editable?: boolean; active?: boolean; username: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Username>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ForumTopicDeleted extends TLObject {
    id: int;
    constructor(params: { id: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ForumTopicDeleted>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ForumTopic extends TLObject {
    my?: boolean;
    closed?: boolean;
    pinned?: boolean;
    short?: boolean;
    hidden?: boolean;
    id: int;
    date: int;
    title: string;
    iconColor: int;
    iconEmojiId?: long;
    topMessage: int;
    readInboxMaxId: int;
    readOutboxMaxId: int;
    unreadCount: int;
    unreadMentionsCount: int;
    unreadReactionsCount: int;
    fromId: Raw.TypePeer;
    notifySettings: Raw.TypePeerNotifySettings;
    draft?: Raw.TypeDraftMessage;
    constructor(params: {
      my?: boolean;
      closed?: boolean;
      pinned?: boolean;
      short?: boolean;
      hidden?: boolean;
      id: int;
      date: int;
      title: string;
      iconColor: int;
      iconEmojiId?: long;
      topMessage: int;
      readInboxMaxId: int;
      readOutboxMaxId: int;
      unreadCount: int;
      unreadMentionsCount: int;
      unreadReactionsCount: int;
      fromId: Raw.TypePeer;
      notifySettings: Raw.TypePeerNotifySettings;
      draft?: Raw.TypeDraftMessage;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ForumTopic>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DefaultHistoryTTL extends TLObject {
    period: int;
    constructor(params: { period: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DefaultHistoryTTL>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ExportedContactToken extends TLObject {
    url: string;
    expires: int;
    constructor(params: { url: string; expires: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ExportedContactToken>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RequestPeerTypeUser extends TLObject {
    bot?: Bool;
    premium?: Bool;
    constructor(params: { bot?: Bool; premium?: Bool });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RequestPeerTypeUser>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RequestPeerTypeChat extends TLObject {
    creator?: boolean;
    botParticipant?: boolean;
    hasUsername?: Bool;
    forum?: Bool;
    userAdminRights?: Raw.TypeChatAdminRights;
    botAdminRights?: Raw.TypeChatAdminRights;
    constructor(params: {
      creator?: boolean;
      botParticipant?: boolean;
      hasUsername?: Bool;
      forum?: Bool;
      userAdminRights?: Raw.TypeChatAdminRights;
      botAdminRights?: Raw.TypeChatAdminRights;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RequestPeerTypeChat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RequestPeerTypeBroadcast extends TLObject {
    creator?: boolean;
    hasUsername?: Bool;
    userAdminRights?: Raw.TypeChatAdminRights;
    botAdminRights?: Raw.TypeChatAdminRights;
    constructor(params: {
      creator?: boolean;
      hasUsername?: Bool;
      userAdminRights?: Raw.TypeChatAdminRights;
      botAdminRights?: Raw.TypeChatAdminRights;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RequestPeerTypeBroadcast>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmojiListNotModified extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmojiListNotModified>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmojiList extends TLObject {
    hash: long;
    documentId: Vector<long>;
    constructor(params: { hash: long; documentId: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmojiList>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class EmojiGroup extends TLObject {
    title: string;
    iconEmojiId: long;
    emoticons: Vector<string>;
    constructor(params: { title: string; iconEmojiId: long; emoticons: Vector<string> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.EmojiGroup>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class TextWithEntities extends TLObject {
    text: string;
    entities: Vector<Raw.TypeMessageEntity>;
    constructor(params: { text: string; entities: Vector<Raw.TypeMessageEntity> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.TextWithEntities>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AutoSaveSettings extends TLObject {
    photos?: boolean;
    videos?: boolean;
    videoMaxSize?: long;
    constructor(params: { photos?: boolean; videos?: boolean; videoMaxSize?: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AutoSaveSettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AutoSaveException extends TLObject {
    peer: Raw.TypePeer;
    settings: Raw.TypeAutoSaveSettings;
    constructor(params: { peer: Raw.TypePeer; settings: Raw.TypeAutoSaveSettings });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AutoSaveException>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotAppID extends TLObject {
    id: long;
    accessHash: long;
    constructor(params: { id: long; accessHash: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotAppID>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBotAppShortName extends TLObject {
    botId: Raw.TypeInputUser;
    shortName: string;
    constructor(params: { botId: Raw.TypeInputUser; shortName: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBotAppShortName>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotAppNotModified extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotAppNotModified>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotApp extends TLObject {
    id: long;
    accessHash: long;
    shortName: string;
    title: string;
    description: string;
    photo: Raw.TypePhoto;
    document?: Raw.TypeDocument;
    hash: long;
    constructor(params: {
      id: long;
      accessHash: long;
      shortName: string;
      title: string;
      description: string;
      photo: Raw.TypePhoto;
      document?: Raw.TypeDocument;
      hash: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotApp>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class AppWebViewResultUrl extends TLObject {
    url: string;
    constructor(params: { url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.AppWebViewResultUrl>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InlineBotWebView extends TLObject {
    text: string;
    url: string;
    constructor(params: { text: string; url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InlineBotWebView>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReadParticipantDate extends TLObject {
    userId: long;
    date: int;
    constructor(params: { userId: long; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReadParticipantDate>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputChatlistDialogFilter extends TLObject {
    filterId: int;
    constructor(params: { filterId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputChatlistDialogFilter>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ExportedChatlistInvite extends TLObject {
    title: string;
    url: string;
    peers: Vector<Raw.TypePeer>;
    constructor(params: { title: string; url: string; peers: Vector<Raw.TypePeer> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ExportedChatlistInvite>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessagePeerVote extends TLObject {
    peer: Raw.TypePeer;
    option: bytes;
    date: int;
    constructor(params: { peer: Raw.TypePeer; option: bytes; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessagePeerVote>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessagePeerVoteInputOption extends TLObject {
    peer: Raw.TypePeer;
    date: int;
    constructor(params: { peer: Raw.TypePeer; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessagePeerVoteInputOption>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MessagePeerVoteMultiple extends TLObject {
    peer: Raw.TypePeer;
    options: Vector<bytes>;
    date: int;
    constructor(params: { peer: Raw.TypePeer; options: Vector<bytes>; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MessagePeerVoteMultiple>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoryViews extends TLObject {
    hasViewers?: boolean;
    viewsCount: int;
    forwardsCount?: int;
    reactions?: Vector<Raw.TypeReactionCount>;
    reactionsCount?: int;
    recentViewers?: Vector<long>;
    constructor(params: {
      hasViewers?: boolean;
      viewsCount: int;
      forwardsCount?: int;
      reactions?: Vector<Raw.TypeReactionCount>;
      reactionsCount?: int;
      recentViewers?: Vector<long>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoryViews>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoryItemDeleted extends TLObject {
    id: int;
    constructor(params: { id: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoryItemDeleted>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoryItemSkipped extends TLObject {
    closeFriends?: boolean;
    id: int;
    date: int;
    expireDate: int;
    constructor(params: { closeFriends?: boolean; id: int; date: int; expireDate: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoryItemSkipped>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoryItem extends TLObject {
    pinned?: boolean;
    public?: boolean;
    closeFriends?: boolean;
    min?: boolean;
    noforwards?: boolean;
    edited?: boolean;
    contacts?: boolean;
    selectedContacts?: boolean;
    out?: boolean;
    id: int;
    date: int;
    fromId?: Raw.TypePeer;
    fwdFrom?: Raw.TypeStoryFwdHeader;
    expireDate: int;
    caption?: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    media: Raw.TypeMessageMedia;
    mediaAreas?: Vector<Raw.TypeMediaArea>;
    privacy?: Vector<Raw.TypePrivacyRule>;
    views?: Raw.TypeStoryViews;
    sentReaction?: Raw.TypeReaction;
    constructor(params: {
      pinned?: boolean;
      public?: boolean;
      closeFriends?: boolean;
      min?: boolean;
      noforwards?: boolean;
      edited?: boolean;
      contacts?: boolean;
      selectedContacts?: boolean;
      out?: boolean;
      id: int;
      date: int;
      fromId?: Raw.TypePeer;
      fwdFrom?: Raw.TypeStoryFwdHeader;
      expireDate: int;
      caption?: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      media: Raw.TypeMessageMedia;
      mediaAreas?: Vector<Raw.TypeMediaArea>;
      privacy?: Vector<Raw.TypePrivacyRule>;
      views?: Raw.TypeStoryViews;
      sentReaction?: Raw.TypeReaction;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoryItem>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoryView extends TLObject {
    blocked?: boolean;
    blockedMyStoriesFrom?: boolean;
    userId: long;
    date: int;
    reaction?: Raw.TypeReaction;
    constructor(params: {
      blocked?: boolean;
      blockedMyStoriesFrom?: boolean;
      userId: long;
      date: int;
      reaction?: Raw.TypeReaction;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoryView>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoryViewPublicForward extends TLObject {
    blocked?: boolean;
    blockedMyStoriesFrom?: boolean;
    message: Raw.TypeMessage;
    constructor(params: {
      blocked?: boolean;
      blockedMyStoriesFrom?: boolean;
      message: Raw.TypeMessage;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoryViewPublicForward>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoryViewPublicRepost extends TLObject {
    blocked?: boolean;
    blockedMyStoriesFrom?: boolean;
    peerId: Raw.TypePeer;
    story: Raw.TypeStoryItem;
    constructor(params: {
      blocked?: boolean;
      blockedMyStoriesFrom?: boolean;
      peerId: Raw.TypePeer;
      story: Raw.TypeStoryItem;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoryViewPublicRepost>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReplyToMessage extends TLObject {
    replyToMsgId: int;
    topMsgId?: int;
    replyToPeerId?: Raw.TypeInputPeer;
    quoteText?: string;
    quoteEntities?: Vector<Raw.TypeMessageEntity>;
    quoteOffset?: int;
    constructor(params: {
      replyToMsgId: int;
      topMsgId?: int;
      replyToPeerId?: Raw.TypeInputPeer;
      quoteText?: string;
      quoteEntities?: Vector<Raw.TypeMessageEntity>;
      quoteOffset?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReplyToMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputReplyToStory extends TLObject {
    peer: Raw.TypeInputPeer;
    storyId: int;
    constructor(params: { peer: Raw.TypeInputPeer; storyId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputReplyToStory>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ExportedStoryLink extends TLObject {
    link: string;
    constructor(params: { link: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ExportedStoryLink>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoriesStealthMode extends TLObject {
    activeUntilDate?: int;
    cooldownUntilDate?: int;
    constructor(params: { activeUntilDate?: int; cooldownUntilDate?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoriesStealthMode>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MediaAreaCoordinates extends TLObject {
    x: double;
    y: double;
    w: double;
    h: double;
    rotation: double;
    constructor(params: { x: double; y: double; w: double; h: double; rotation: double });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MediaAreaCoordinates>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MediaAreaVenue extends TLObject {
    coordinates: Raw.TypeMediaAreaCoordinates;
    geo: Raw.TypeGeoPoint;
    title: string;
    address: string;
    provider: string;
    venueId: string;
    venueType: string;
    constructor(params: {
      coordinates: Raw.TypeMediaAreaCoordinates;
      geo: Raw.TypeGeoPoint;
      title: string;
      address: string;
      provider: string;
      venueId: string;
      venueType: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MediaAreaVenue>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaAreaVenue extends TLObject {
    coordinates: Raw.TypeMediaAreaCoordinates;
    queryId: long;
    resultId: string;
    constructor(params: {
      coordinates: Raw.TypeMediaAreaCoordinates;
      queryId: long;
      resultId: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaAreaVenue>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MediaAreaGeoPoint extends TLObject {
    coordinates: Raw.TypeMediaAreaCoordinates;
    geo: Raw.TypeGeoPoint;
    constructor(params: { coordinates: Raw.TypeMediaAreaCoordinates; geo: Raw.TypeGeoPoint });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MediaAreaGeoPoint>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MediaAreaSuggestedReaction extends TLObject {
    dark?: boolean;
    flipped?: boolean;
    coordinates: Raw.TypeMediaAreaCoordinates;
    reaction: Raw.TypeReaction;
    constructor(params: {
      dark?: boolean;
      flipped?: boolean;
      coordinates: Raw.TypeMediaAreaCoordinates;
      reaction: Raw.TypeReaction;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MediaAreaSuggestedReaction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MediaAreaChannelPost extends TLObject {
    coordinates: Raw.TypeMediaAreaCoordinates;
    channelId: long;
    msgId: int;
    constructor(params: { coordinates: Raw.TypeMediaAreaCoordinates; channelId: long; msgId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MediaAreaChannelPost>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputMediaAreaChannelPost extends TLObject {
    coordinates: Raw.TypeMediaAreaCoordinates;
    channel: Raw.TypeInputChannel;
    msgId: int;
    constructor(params: {
      coordinates: Raw.TypeMediaAreaCoordinates;
      channel: Raw.TypeInputChannel;
      msgId: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputMediaAreaChannelPost>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PeerStories extends TLObject {
    peer: Raw.TypePeer;
    maxReadId?: int;
    stories: Vector<Raw.TypeStoryItem>;
    constructor(params: {
      peer: Raw.TypePeer;
      maxReadId?: int;
      stories: Vector<Raw.TypeStoryItem>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PeerStories>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PremiumGiftCodeOption extends TLObject {
    users: int;
    months: int;
    storeProduct?: string;
    storeQuantity?: int;
    currency: string;
    amount: long;
    constructor(params: {
      users: int;
      months: int;
      storeProduct?: string;
      storeQuantity?: int;
      currency: string;
      amount: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PremiumGiftCodeOption>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PrepaidGiveaway extends TLObject {
    id: long;
    months: int;
    quantity: int;
    date: int;
    constructor(params: { id: long; months: int; quantity: int; date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PrepaidGiveaway>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Boost extends TLObject {
    gift?: boolean;
    giveaway?: boolean;
    unclaimed?: boolean;
    id: string;
    userId?: long;
    giveawayMsgId?: int;
    date: int;
    expires: int;
    usedGiftSlug?: string;
    multiplier?: int;
    constructor(params: {
      gift?: boolean;
      giveaway?: boolean;
      unclaimed?: boolean;
      id: string;
      userId?: long;
      giveawayMsgId?: int;
      date: int;
      expires: int;
      usedGiftSlug?: string;
      multiplier?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Boost>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MyBoost extends TLObject {
    slot: int;
    peer?: Raw.TypePeer;
    date: int;
    expires: int;
    cooldownUntilDate?: int;
    constructor(params: {
      slot: int;
      peer?: Raw.TypePeer;
      date: int;
      expires: int;
      cooldownUntilDate?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MyBoost>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoryFwdHeader extends TLObject {
    modified?: boolean;
    from?: Raw.TypePeer;
    fromName?: string;
    storyId?: int;
    constructor(params: {
      modified?: boolean;
      from?: Raw.TypePeer;
      fromName?: string;
      storyId?: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoryFwdHeader>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PostInteractionCountersMessage extends TLObject {
    msgId: int;
    views: int;
    forwards: int;
    reactions: int;
    constructor(params: { msgId: int; views: int; forwards: int; reactions: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PostInteractionCountersMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PostInteractionCountersStory extends TLObject {
    storyId: int;
    views: int;
    forwards: int;
    reactions: int;
    constructor(params: { storyId: int; views: int; forwards: int; reactions: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PostInteractionCountersStory>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PublicForwardMessage extends TLObject {
    message: Raw.TypeMessage;
    constructor(params: { message: Raw.TypeMessage });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PublicForwardMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PublicForwardStory extends TLObject {
    peer: Raw.TypePeer;
    story: Raw.TypeStoryItem;
    constructor(params: { peer: Raw.TypePeer; story: Raw.TypeStoryItem });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PublicForwardStory>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PeerColor extends TLObject {
    color?: int;
    backgroundEmojiId?: long;
    constructor(params: { color?: int; backgroundEmojiId?: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PeerColor>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoryReaction extends TLObject {
    peerId: Raw.TypePeer;
    date: int;
    reaction: Raw.TypeReaction;
    constructor(params: { peerId: Raw.TypePeer; date: int; reaction: Raw.TypeReaction });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoryReaction>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoryReactionPublicForward extends TLObject {
    message: Raw.TypeMessage;
    constructor(params: { message: Raw.TypeMessage });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoryReactionPublicForward>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class StoryReactionPublicRepost extends TLObject {
    peerId: Raw.TypePeer;
    story: Raw.TypeStoryItem;
    constructor(params: { peerId: Raw.TypePeer; story: Raw.TypeStoryItem });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.StoryReactionPublicRepost>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SavedDialog extends TLObject {
    pinned?: boolean;
    peer: Raw.TypePeer;
    topMessage: int;
    constructor(params: { pinned?: boolean; peer: Raw.TypePeer; topMessage: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SavedDialog>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SavedReactionTag extends TLObject {
    reaction: Raw.TypeReaction;
    title?: string;
    count: int;
    constructor(params: { reaction: Raw.TypeReaction; title?: string; count: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SavedReactionTag>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class OutboxReadDate extends TLObject {
    date: int;
    constructor(params: { date: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.OutboxReadDate>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SmsJob extends TLObject {
    jobId: string;
    phoneNumber: string;
    text: string;
    constructor(params: { jobId: string; phoneNumber: string; text: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SmsJob>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessWeeklyOpen extends TLObject {
    startMinute: int;
    endMinute: int;
    constructor(params: { startMinute: int; endMinute: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BusinessWeeklyOpen>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessWorkHours extends TLObject {
    openNow?: boolean;
    timezoneId: string;
    weeklyOpen: Vector<Raw.TypeBusinessWeeklyOpen>;
    constructor(params: {
      openNow?: boolean;
      timezoneId: string;
      weeklyOpen: Vector<Raw.TypeBusinessWeeklyOpen>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BusinessWorkHours>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessLocation extends TLObject {
    geoPoint?: Raw.TypeGeoPoint;
    address: string;
    constructor(params: { geoPoint?: Raw.TypeGeoPoint; address: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BusinessLocation>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBusinessRecipients extends TLObject {
    existingChats?: boolean;
    newChats?: boolean;
    contacts?: boolean;
    nonContacts?: boolean;
    excludeSelected?: boolean;
    users?: Vector<Raw.TypeInputUser>;
    constructor(params: {
      existingChats?: boolean;
      newChats?: boolean;
      contacts?: boolean;
      nonContacts?: boolean;
      excludeSelected?: boolean;
      users?: Vector<Raw.TypeInputUser>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBusinessRecipients>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessRecipients extends TLObject {
    existingChats?: boolean;
    newChats?: boolean;
    contacts?: boolean;
    nonContacts?: boolean;
    excludeSelected?: boolean;
    users?: Vector<long>;
    constructor(params: {
      existingChats?: boolean;
      newChats?: boolean;
      contacts?: boolean;
      nonContacts?: boolean;
      excludeSelected?: boolean;
      users?: Vector<long>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BusinessRecipients>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessAwayMessageScheduleAlways extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BusinessAwayMessageScheduleAlways>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessAwayMessageScheduleOutsideWorkHours extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.BusinessAwayMessageScheduleOutsideWorkHours>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessAwayMessageScheduleCustom extends TLObject {
    startDate: int;
    endDate: int;
    constructor(params: { startDate: int; endDate: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BusinessAwayMessageScheduleCustom>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBusinessGreetingMessage extends TLObject {
    shortcutId: int;
    recipients: Raw.TypeInputBusinessRecipients;
    noActivityDays: int;
    constructor(params: {
      shortcutId: int;
      recipients: Raw.TypeInputBusinessRecipients;
      noActivityDays: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBusinessGreetingMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessGreetingMessage extends TLObject {
    shortcutId: int;
    recipients: Raw.TypeBusinessRecipients;
    noActivityDays: int;
    constructor(params: {
      shortcutId: int;
      recipients: Raw.TypeBusinessRecipients;
      noActivityDays: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BusinessGreetingMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBusinessAwayMessage extends TLObject {
    offlineOnly?: boolean;
    shortcutId: int;
    schedule: Raw.TypeBusinessAwayMessageSchedule;
    recipients: Raw.TypeInputBusinessRecipients;
    constructor(params: {
      offlineOnly?: boolean;
      shortcutId: int;
      schedule: Raw.TypeBusinessAwayMessageSchedule;
      recipients: Raw.TypeInputBusinessRecipients;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBusinessAwayMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessAwayMessage extends TLObject {
    offlineOnly?: boolean;
    shortcutId: int;
    schedule: Raw.TypeBusinessAwayMessageSchedule;
    recipients: Raw.TypeBusinessRecipients;
    constructor(params: {
      offlineOnly?: boolean;
      shortcutId: int;
      schedule: Raw.TypeBusinessAwayMessageSchedule;
      recipients: Raw.TypeBusinessRecipients;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BusinessAwayMessage>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Timezone extends TLObject {
    id: string;
    name: string;
    utcOffset: int;
    constructor(params: { id: string; name: string; utcOffset: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Timezone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class QuickReply extends TLObject {
    shortcutId: int;
    shortcut: string;
    topMessage: int;
    count: int;
    constructor(params: { shortcutId: int; shortcut: string; topMessage: int; count: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.QuickReply>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputQuickReplyShortcut extends TLObject {
    shortcut: string;
    constructor(params: { shortcut: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputQuickReplyShortcut>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputQuickReplyShortcutId extends TLObject {
    shortcutId: int;
    constructor(params: { shortcutId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputQuickReplyShortcutId>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ConnectedBot extends TLObject {
    canReply?: boolean;
    botId: long;
    recipients: Raw.TypeBusinessBotRecipients;
    constructor(params: {
      canReply?: boolean;
      botId: long;
      recipients: Raw.TypeBusinessBotRecipients;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ConnectedBot>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class Birthday extends TLObject {
    day: int;
    month: int;
    year?: int;
    constructor(params: { day: int; month: int; year?: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.Birthday>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BotBusinessConnection extends TLObject {
    canReply?: boolean;
    disabled?: boolean;
    connectionId: string;
    userId: long;
    dcId: int;
    date: int;
    constructor(params: {
      canReply?: boolean;
      disabled?: boolean;
      connectionId: string;
      userId: long;
      dcId: int;
      date: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BotBusinessConnection>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBusinessIntro extends TLObject {
    title: string;
    description: string;
    sticker?: Raw.TypeInputDocument;
    constructor(params: { title: string; description: string; sticker?: Raw.TypeInputDocument });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBusinessIntro>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessIntro extends TLObject {
    title: string;
    description: string;
    sticker?: Raw.TypeDocument;
    constructor(params: { title: string; description: string; sticker?: Raw.TypeDocument });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BusinessIntro>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputCollectibleUsername extends TLObject {
    username: string;
    constructor(params: { username: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputCollectibleUsername>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputCollectiblePhone extends TLObject {
    phone: string;
    constructor(params: { phone: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputCollectiblePhone>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBusinessBotRecipients extends TLObject {
    existingChats?: boolean;
    newChats?: boolean;
    contacts?: boolean;
    nonContacts?: boolean;
    excludeSelected?: boolean;
    users?: Vector<Raw.TypeInputUser>;
    excludeUsers?: Vector<Raw.TypeInputUser>;
    constructor(params: {
      existingChats?: boolean;
      newChats?: boolean;
      contacts?: boolean;
      nonContacts?: boolean;
      excludeSelected?: boolean;
      users?: Vector<Raw.TypeInputUser>;
      excludeUsers?: Vector<Raw.TypeInputUser>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBusinessBotRecipients>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessBotRecipients extends TLObject {
    existingChats?: boolean;
    newChats?: boolean;
    contacts?: boolean;
    nonContacts?: boolean;
    excludeSelected?: boolean;
    users?: Vector<long>;
    excludeUsers?: Vector<long>;
    constructor(params: {
      existingChats?: boolean;
      newChats?: boolean;
      contacts?: boolean;
      nonContacts?: boolean;
      excludeSelected?: boolean;
      users?: Vector<long>;
      excludeUsers?: Vector<long>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BusinessBotRecipients>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ContactBirthday extends TLObject {
    contactId: long;
    birthday: Raw.TypeBirthday;
    constructor(params: { contactId: long; birthday: Raw.TypeBirthday });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ContactBirthday>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class MissingInvitee extends TLObject {
    premiumWouldAllowInvite?: boolean;
    premiumRequiredForPm?: boolean;
    userId: long;
    constructor(params: {
      premiumWouldAllowInvite?: boolean;
      premiumRequiredForPm?: boolean;
      userId: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.MissingInvitee>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InputBusinessChatLink extends TLObject {
    message: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    title?: string;
    constructor(params: {
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      title?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InputBusinessChatLink>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BusinessChatLink extends TLObject {
    link: string;
    message: string;
    entities?: Vector<Raw.TypeMessageEntity>;
    title?: string;
    views: int;
    constructor(params: {
      link: string;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      title?: string;
      views: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BusinessChatLink>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RequestedPeerUser extends TLObject {
    userId: long;
    firstName?: string;
    lastName?: string;
    username?: string;
    photo?: Raw.TypePhoto;
    constructor(params: {
      userId: long;
      firstName?: string;
      lastName?: string;
      username?: string;
      photo?: Raw.TypePhoto;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RequestedPeerUser>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RequestedPeerChat extends TLObject {
    chatId: long;
    title?: string;
    photo?: Raw.TypePhoto;
    constructor(params: { chatId: long; title?: string; photo?: Raw.TypePhoto });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RequestedPeerChat>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class RequestedPeerChannel extends TLObject {
    channelId: long;
    title?: string;
    username?: string;
    photo?: Raw.TypePhoto;
    constructor(params: {
      channelId: long;
      title?: string;
      username?: string;
      photo?: Raw.TypePhoto;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.RequestedPeerChannel>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SponsoredMessageReportOption extends TLObject {
    text: string;
    option: bytes;
    constructor(params: { text: string; option: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SponsoredMessageReportOption>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BroadcastRevenueTransactionProceeds extends TLObject {
    amount: long;
    fromDate: int;
    toDate: int;
    constructor(params: { amount: long; fromDate: int; toDate: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BroadcastRevenueTransactionProceeds>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BroadcastRevenueTransactionWithdrawal extends TLObject {
    pending?: boolean;
    failed?: boolean;
    amount: long;
    date: int;
    provider: string;
    transactionDate?: int;
    transactionUrl?: string;
    constructor(params: {
      pending?: boolean;
      failed?: boolean;
      amount: long;
      date: int;
      provider: string;
      transactionDate?: int;
      transactionUrl?: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.BroadcastRevenueTransactionWithdrawal>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class BroadcastRevenueTransactionRefund extends TLObject {
    amount: long;
    date: int;
    provider: string;
    constructor(params: { amount: long; date: int; provider: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.BroadcastRevenueTransactionRefund>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReactionNotificationsFromContacts extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReactionNotificationsFromContacts>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReactionNotificationsFromAll extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReactionNotificationsFromAll>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class ReactionsNotifySettings extends TLObject {
    messagesNotifyFrom?: Raw.TypeReactionNotificationsFrom;
    storiesNotifyFrom?: Raw.TypeReactionNotificationsFrom;
    sound: Raw.TypeNotificationSound;
    showPreviews: Bool;
    constructor(params: {
      messagesNotifyFrom?: Raw.TypeReactionNotificationsFrom;
      storiesNotifyFrom?: Raw.TypeReactionNotificationsFrom;
      sound: Raw.TypeNotificationSound;
      showPreviews: Bool;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.ReactionsNotifySettings>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InvokeAfterMsg extends TLObject {
    __response__: X;
    msgId: long;
    query: X;
    constructor(params: { msgId: long; query: X });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InvokeAfterMsg>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InvokeAfterMsgs extends TLObject {
    __response__: X;
    msgIds: Vector<long>;
    query: X;
    constructor(params: { msgIds: Vector<long>; query: X });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InvokeAfterMsgs>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InitConnection extends TLObject {
    __response__: X;
    apiId: int;
    deviceModel: string;
    systemVersion: string;
    appVersion: string;
    systemLangCode: string;
    langPack: string;
    langCode: string;
    proxy?: Raw.TypeInputClientProxy;
    params?: Raw.TypeJSONValue;
    query: X;
    constructor(params: {
      apiId: int;
      deviceModel: string;
      systemVersion: string;
      appVersion: string;
      systemLangCode: string;
      langPack: string;
      langCode: string;
      proxy?: Raw.TypeInputClientProxy;
      params?: Raw.TypeJSONValue;
      query: X;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InitConnection>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InvokeWithLayer extends TLObject {
    __response__: X;
    layer: int;
    query: X;
    constructor(params: { layer: int; query: X });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InvokeWithLayer>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InvokeWithoutUpdates extends TLObject {
    __response__: X;
    query: X;
    constructor(params: { query: X });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InvokeWithoutUpdates>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InvokeWithMessagesRange extends TLObject {
    __response__: X;
    range: Raw.TypeMessageRange;
    query: X;
    constructor(params: { range: Raw.TypeMessageRange; query: X });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InvokeWithMessagesRange>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InvokeWithTakeout extends TLObject {
    __response__: X;
    takeoutId: long;
    query: X;
    constructor(params: { takeoutId: long; query: X });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InvokeWithTakeout>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class InvokeWithBusinessConnection extends TLObject {
    __response__: X;
    connectionId: string;
    query: X;
    constructor(params: { connectionId: string; query: X });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.InvokeWithBusinessConnection>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessage8 extends TLObject {
    randomId: long;
    randomBytes: bytes;
    message: string;
    media: Raw.TypeDecryptedMessageMedia;
    constructor(params: {
      randomId: long;
      randomBytes: bytes;
      message: string;
      media: Raw.TypeDecryptedMessageMedia;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessage8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageService8 extends TLObject {
    randomId: long;
    randomBytes: bytes;
    action: Raw.TypeDecryptedMessageAction;
    constructor(params: {
      randomId: long;
      randomBytes: bytes;
      action: Raw.TypeDecryptedMessageAction;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageService8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaEmpty8 extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaEmpty8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaPhoto8 extends TLObject {
    thumb: bytes;
    thumbW: int;
    thumbH: int;
    w: int;
    h: int;
    size: int;
    key: bytes;
    iv: bytes;
    constructor(params: {
      thumb: bytes;
      thumbW: int;
      thumbH: int;
      w: int;
      h: int;
      size: int;
      key: bytes;
      iv: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaPhoto8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaVideo8 extends TLObject {
    thumb: bytes;
    thumbW: int;
    thumbH: int;
    duration: int;
    w: int;
    h: int;
    size: int;
    key: bytes;
    iv: bytes;
    constructor(params: {
      thumb: bytes;
      thumbW: int;
      thumbH: int;
      duration: int;
      w: int;
      h: int;
      size: int;
      key: bytes;
      iv: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaVideo8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaGeoPoint8 extends TLObject {
    lat: double;
    long: double;
    constructor(params: { lat: double; long: double });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaGeoPoint8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaContact8 extends TLObject {
    phoneNumber: string;
    firstName: string;
    lastName: string;
    userId: int;
    constructor(params: { phoneNumber: string; firstName: string; lastName: string; userId: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaContact8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionSetMessageTTL8 extends TLObject {
    ttlSeconds: int;
    constructor(params: { ttlSeconds: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageActionSetMessageTTL8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaDocument8 extends TLObject {
    thumb: bytes;
    thumbW: int;
    thumbH: int;
    fileName: string;
    mimeType: string;
    size: int;
    key: bytes;
    iv: bytes;
    constructor(params: {
      thumb: bytes;
      thumbW: int;
      thumbH: int;
      fileName: string;
      mimeType: string;
      size: int;
      key: bytes;
      iv: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaDocument8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaAudio8 extends TLObject {
    duration: int;
    size: int;
    key: bytes;
    iv: bytes;
    constructor(params: { duration: int; size: int; key: bytes; iv: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaAudio8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionReadMessages8 extends TLObject {
    randomIds: Vector<long>;
    constructor(params: { randomIds: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageActionReadMessages8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionDeleteMessages8 extends TLObject {
    randomIds: Vector<long>;
    constructor(params: { randomIds: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.DecryptedMessageActionDeleteMessages8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionScreenshotMessages8 extends TLObject {
    randomIds: Vector<long>;
    constructor(params: { randomIds: Vector<long> });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.DecryptedMessageActionScreenshotMessages8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionFlushHistory8 extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageActionFlushHistory8>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessage17 extends TLObject {
    randomId: long;
    ttl: int;
    message: string;
    media: Raw.TypeDecryptedMessageMedia;
    constructor(params: {
      randomId: long;
      ttl: int;
      message: string;
      media: Raw.TypeDecryptedMessageMedia;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessage17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageService17 extends TLObject {
    randomId: long;
    action: Raw.TypeDecryptedMessageAction;
    constructor(params: { randomId: long; action: Raw.TypeDecryptedMessageAction });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageService17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaVideo17 extends TLObject {
    thumb: bytes;
    thumbW: int;
    thumbH: int;
    duration: int;
    mimeType: string;
    w: int;
    h: int;
    size: int;
    key: bytes;
    iv: bytes;
    constructor(params: {
      thumb: bytes;
      thumbW: int;
      thumbH: int;
      duration: int;
      mimeType: string;
      w: int;
      h: int;
      size: int;
      key: bytes;
      iv: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaVideo17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaAudio17 extends TLObject {
    duration: int;
    mimeType: string;
    size: int;
    key: bytes;
    iv: bytes;
    constructor(params: { duration: int; mimeType: string; size: int; key: bytes; iv: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaAudio17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageLayer17 extends TLObject {
    randomBytes: bytes;
    layer: int;
    inSeqNo: int;
    outSeqNo: int;
    message: Raw.TypeDecryptedMessage;
    constructor(params: {
      randomBytes: bytes;
      layer: int;
      inSeqNo: int;
      outSeqNo: int;
      message: Raw.TypeDecryptedMessage;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageLayer17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageUploadVideoAction17 extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageUploadVideoAction17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageUploadAudioAction17 extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageUploadAudioAction17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageUploadPhotoAction17 extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageUploadPhotoAction17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageUploadDocumentAction17 extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageUploadDocumentAction17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionResend17 extends TLObject {
    startSeqNo: int;
    endSeqNo: int;
    constructor(params: { startSeqNo: int; endSeqNo: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageActionResend17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionNotifyLayer17 extends TLObject {
    layer: int;
    constructor(params: { layer: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageActionNotifyLayer17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionTyping17 extends TLObject {
    action: Raw.TypeSendMessageAction;
    constructor(params: { action: Raw.TypeSendMessageAction });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageActionTyping17>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionRequestKey20 extends TLObject {
    exchangeId: long;
    gA: bytes;
    constructor(params: { exchangeId: long; gA: bytes });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageActionRequestKey20>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionAcceptKey20 extends TLObject {
    exchangeId: long;
    gB: bytes;
    keyFingerprint: long;
    constructor(params: { exchangeId: long; gB: bytes; keyFingerprint: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageActionAcceptKey20>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionAbortKey20 extends TLObject {
    exchangeId: long;
    constructor(params: { exchangeId: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageActionAbortKey20>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionCommitKey20 extends TLObject {
    exchangeId: long;
    keyFingerprint: long;
    constructor(params: { exchangeId: long; keyFingerprint: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageActionCommitKey20>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageActionNoop20 extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageActionNoop20>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeSticker23 extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeSticker23>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeVideo23 extends TLObject {
    duration: int;
    w: int;
    h: int;
    constructor(params: { duration: int; w: int; h: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeVideo23>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeAudio23 extends TLObject {
    duration: int;
    constructor(params: { duration: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeAudio23>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhotoSize23 extends TLObject {
    type: string;
    location: Raw.TypeFileLocation;
    w: int;
    h: int;
    size: int;
    constructor(params: {
      type: string;
      location: Raw.TypeFileLocation;
      w: int;
      h: int;
      size: int;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhotoSize23>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class PhotoCachedSize23 extends TLObject {
    type: string;
    location: Raw.TypeFileLocation;
    w: int;
    h: int;
    bytes: bytes;
    constructor(params: {
      type: string;
      location: Raw.TypeFileLocation;
      w: int;
      h: int;
      bytes: bytes;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.PhotoCachedSize23>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class FileLocationUnavailable23 extends TLObject {
    volumeId: long;
    localId: int;
    secret: long;
    constructor(params: { volumeId: long; localId: int; secret: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.FileLocationUnavailable23>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class FileLocation23 extends TLObject {
    dcId: int;
    volumeId: long;
    localId: int;
    secret: long;
    constructor(params: { dcId: int; volumeId: long; localId: int; secret: long });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.FileLocation23>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaExternalDocument23 extends TLObject {
    id: long;
    accessHash: long;
    date: int;
    mimeType: string;
    size: int;
    thumb: Raw.TypePhotoSize;
    dcId: int;
    attributes: Vector<Raw.TypeDocumentAttribute>;
    constructor(params: {
      id: long;
      accessHash: long;
      date: int;
      mimeType: string;
      size: int;
      thumb: Raw.TypePhotoSize;
      dcId: int;
      attributes: Vector<Raw.TypeDocumentAttribute>;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(
      b: BytesIO,
      ...args: Array<any>
    ): Promise<Raw.DecryptedMessageMediaExternalDocument23>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessage45 extends TLObject {
    randomId: long;
    ttl: int;
    message: string;
    media?: Raw.TypeDecryptedMessageMedia;
    entities?: Vector<Raw.TypeMessageEntity>;
    viaBotName?: string;
    replyToRandomId?: long;
    constructor(params: {
      randomId: long;
      ttl: int;
      message: string;
      media?: Raw.TypeDecryptedMessageMedia;
      entities?: Vector<Raw.TypeMessageEntity>;
      viaBotName?: string;
      replyToRandomId?: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessage45>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaPhoto45 extends TLObject {
    thumb: bytes;
    thumbW: int;
    thumbH: int;
    w: int;
    h: int;
    size: int;
    key: bytes;
    iv: bytes;
    caption: string;
    constructor(params: {
      thumb: bytes;
      thumbW: int;
      thumbH: int;
      w: int;
      h: int;
      size: int;
      key: bytes;
      iv: bytes;
      caption: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaPhoto45>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaVideo45 extends TLObject {
    thumb: bytes;
    thumbW: int;
    thumbH: int;
    duration: int;
    mimeType: string;
    w: int;
    h: int;
    size: int;
    key: bytes;
    iv: bytes;
    caption: string;
    constructor(params: {
      thumb: bytes;
      thumbW: int;
      thumbH: int;
      duration: int;
      mimeType: string;
      w: int;
      h: int;
      size: int;
      key: bytes;
      iv: bytes;
      caption: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaVideo45>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaDocument45 extends TLObject {
    thumb: bytes;
    thumbW: int;
    thumbH: int;
    mimeType: string;
    size: int;
    key: bytes;
    iv: bytes;
    attributes: Vector<Raw.TypeDocumentAttribute>;
    caption: string;
    constructor(params: {
      thumb: bytes;
      thumbW: int;
      thumbH: int;
      mimeType: string;
      size: int;
      key: bytes;
      iv: bytes;
      attributes: Vector<Raw.TypeDocumentAttribute>;
      caption: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaDocument45>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeSticker45 extends TLObject {
    alt: string;
    stickerset: Raw.TypeInputStickerSet;
    constructor(params: { alt: string; stickerset: Raw.TypeInputStickerSet });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeSticker45>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeAudio45 extends TLObject {
    duration: int;
    title: string;
    performer: string;
    constructor(params: { duration: int; title: string; performer: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeAudio45>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaVenue45 extends TLObject {
    lat: double;
    long: double;
    title: string;
    address: string;
    provider: string;
    venueId: string;
    constructor(params: {
      lat: double;
      long: double;
      title: string;
      address: string;
      provider: string;
      venueId: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaVenue45>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaWebPage45 extends TLObject {
    url: string;
    constructor(params: { url: string });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaWebPage45>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DocumentAttributeVideo66 extends TLObject {
    roundMessage?: boolean;
    duration: int;
    w: int;
    h: int;
    constructor(params: { roundMessage?: boolean; duration: int; w: int; h: int });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DocumentAttributeVideo66>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class SendMessageUploadRoundAction66 extends TLObject {
    constructor();
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.SendMessageUploadRoundAction66>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessage73 extends TLObject {
    noWebpage?: boolean;
    silent?: boolean;
    randomId: long;
    ttl: int;
    message: string;
    media?: Raw.TypeDecryptedMessageMedia;
    entities?: Vector<Raw.TypeMessageEntity>;
    viaBotName?: string;
    replyToRandomId?: long;
    groupedId?: long;
    constructor(params: {
      noWebpage?: boolean;
      silent?: boolean;
      randomId: long;
      ttl: int;
      message: string;
      media?: Raw.TypeDecryptedMessageMedia;
      entities?: Vector<Raw.TypeMessageEntity>;
      viaBotName?: string;
      replyToRandomId?: long;
      groupedId?: long;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessage73>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  class DecryptedMessageMediaDocument143 extends TLObject {
    thumb: bytes;
    thumbW: int;
    thumbH: int;
    mimeType: string;
    size: long;
    key: bytes;
    iv: bytes;
    attributes: Vector<Raw.TypeDocumentAttribute>;
    caption: string;
    constructor(params: {
      thumb: bytes;
      thumbW: int;
      thumbH: int;
      mimeType: string;
      size: long;
      key: bytes;
      iv: bytes;
      attributes: Vector<Raw.TypeDocumentAttribute>;
      caption: string;
    });
    /**
     * Generate the TLObject from buffer.
     * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
     */
    static read(b: BytesIO, ...args: Array<any>): Promise<Raw.DecryptedMessageMediaDocument143>;
    /**
     * Generate buffer from TLObject.
     */
    write(): Buffer;
  }
  namespace help {
    type TypeTimezonesList = Raw.help.TimezonesListNotModified | Raw.help.TimezonesList;
    type TypePeerColors = Raw.help.PeerColorsNotModified | Raw.help.PeerColors;
    type TypePremiumPromo = Raw.help.PremiumPromo;
    type TypeCountriesList = Raw.help.CountriesListNotModified | Raw.help.CountriesList;
    type TypePromoData = Raw.help.PromoDataEmpty | Raw.help.PromoData;
    type TypeUserInfo = Raw.help.UserInfoEmpty | Raw.help.UserInfo;
    type TypeSupportName = Raw.help.SupportName;
    type TypePassportConfig = Raw.help.PassportConfigNotModified | Raw.help.PassportConfig;
    type TypeAppConfig = Raw.help.AppConfigNotModified | Raw.help.AppConfig;
    type TypeDeepLinkInfo = Raw.help.DeepLinkInfoEmpty | Raw.help.DeepLinkInfo;
    type TypeTermsOfServiceUpdate =
      | Raw.help.TermsOfServiceUpdateEmpty
      | Raw.help.TermsOfServiceUpdate;
    type TypeRecentMeUrls = Raw.help.RecentMeUrls;
    type TypeSupport = Raw.help.Support;
    type TypeInviteText = Raw.help.InviteText;
    type TypeAppUpdate = Raw.help.AppUpdate | Raw.help.NoAppUpdate;
    type TypePeerColorOption = Raw.help.PeerColorOption;
    type TypePeerColorSet = Raw.help.PeerColorSet | Raw.help.PeerColorProfileSet;
    type TypeCountry = Raw.help.Country;
    type TypeCountryCode = Raw.help.CountryCode;
    type TypeTermsOfService = Raw.help.TermsOfService;
    class ConfigSimple extends TLObject {
      date: int;
      expires: int;
      rules: Vector<Raw.TypeAccessPointRule>;
      constructor(params: { date: int; expires: int; rules: Vector<Raw.TypeAccessPointRule> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.ConfigSimple>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AppUpdate extends TLObject {
      canNotSkip?: boolean;
      id: int;
      version: string;
      text: string;
      entities: Vector<Raw.TypeMessageEntity>;
      document?: Raw.TypeDocument;
      url?: string;
      sticker?: Raw.TypeDocument;
      constructor(params: {
        canNotSkip?: boolean;
        id: int;
        version: string;
        text: string;
        entities: Vector<Raw.TypeMessageEntity>;
        document?: Raw.TypeDocument;
        url?: string;
        sticker?: Raw.TypeDocument;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.AppUpdate>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class NoAppUpdate extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.NoAppUpdate>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InviteText extends TLObject {
      message: string;
      constructor(params: { message: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.InviteText>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Support extends TLObject {
      phoneNumber: string;
      user: Raw.TypeUser;
      constructor(params: { phoneNumber: string; user: Raw.TypeUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.Support>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TermsOfService extends TLObject {
      popup?: boolean;
      id: Raw.TypeDataJSON;
      text: string;
      entities: Vector<Raw.TypeMessageEntity>;
      minAgeConfirm?: int;
      constructor(params: {
        popup?: boolean;
        id: Raw.TypeDataJSON;
        text: string;
        entities: Vector<Raw.TypeMessageEntity>;
        minAgeConfirm?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.TermsOfService>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RecentMeUrls extends TLObject {
      urls: Vector<Raw.TypeRecentMeUrl>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        urls: Vector<Raw.TypeRecentMeUrl>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.RecentMeUrls>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TermsOfServiceUpdateEmpty extends TLObject {
      expires: int;
      constructor(params: { expires: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.TermsOfServiceUpdateEmpty>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TermsOfServiceUpdate extends TLObject {
      expires: int;
      termsOfService: Raw.help.TypeTermsOfService;
      constructor(params: { expires: int; termsOfService: Raw.help.TypeTermsOfService });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.TermsOfServiceUpdate>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeepLinkInfoEmpty extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.DeepLinkInfoEmpty>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeepLinkInfo extends TLObject {
      updateApp?: boolean;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      constructor(params: {
        updateApp?: boolean;
        message: string;
        entities?: Vector<Raw.TypeMessageEntity>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.DeepLinkInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PassportConfigNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.PassportConfigNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PassportConfig extends TLObject {
      hash: int;
      countriesLangs: Raw.TypeDataJSON;
      constructor(params: { hash: int; countriesLangs: Raw.TypeDataJSON });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.PassportConfig>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SupportName extends TLObject {
      name: string;
      constructor(params: { name: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.SupportName>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UserInfoEmpty extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.UserInfoEmpty>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UserInfo extends TLObject {
      message: string;
      entities: Vector<Raw.TypeMessageEntity>;
      author: string;
      date: int;
      constructor(params: {
        message: string;
        entities: Vector<Raw.TypeMessageEntity>;
        author: string;
        date: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.UserInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PromoDataEmpty extends TLObject {
      expires: int;
      constructor(params: { expires: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.PromoDataEmpty>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PromoData extends TLObject {
      proxy?: boolean;
      expires: int;
      peer: Raw.TypePeer;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      psaType?: string;
      psaMessage?: string;
      constructor(params: {
        proxy?: boolean;
        expires: int;
        peer: Raw.TypePeer;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
        psaType?: string;
        psaMessage?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.PromoData>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CountryCode extends TLObject {
      countryCode: string;
      prefixes?: Vector<string>;
      patterns?: Vector<string>;
      constructor(params: {
        countryCode: string;
        prefixes?: Vector<string>;
        patterns?: Vector<string>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.CountryCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Country extends TLObject {
      hidden?: boolean;
      iso2: string;
      defaultName: string;
      name?: string;
      countryCodes: Vector<Raw.help.TypeCountryCode>;
      constructor(params: {
        hidden?: boolean;
        iso2: string;
        defaultName: string;
        name?: string;
        countryCodes: Vector<Raw.help.TypeCountryCode>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.Country>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CountriesListNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.CountriesListNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CountriesList extends TLObject {
      countries: Vector<Raw.help.TypeCountry>;
      hash: int;
      constructor(params: { countries: Vector<Raw.help.TypeCountry>; hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.CountriesList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PremiumPromo extends TLObject {
      statusText: string;
      statusEntities: Vector<Raw.TypeMessageEntity>;
      videoSections: Vector<string>;
      videos: Vector<Raw.TypeDocument>;
      periodOptions: Vector<Raw.TypePremiumSubscriptionOption>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        statusText: string;
        statusEntities: Vector<Raw.TypeMessageEntity>;
        videoSections: Vector<string>;
        videos: Vector<Raw.TypeDocument>;
        periodOptions: Vector<Raw.TypePremiumSubscriptionOption>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.PremiumPromo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AppConfigNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.AppConfigNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AppConfig extends TLObject {
      hash: int;
      config: Raw.TypeJSONValue;
      constructor(params: { hash: int; config: Raw.TypeJSONValue });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.AppConfig>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PeerColorSet extends TLObject {
      colors: Vector<int>;
      constructor(params: { colors: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.PeerColorSet>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PeerColorProfileSet extends TLObject {
      paletteColors: Vector<int>;
      bgColors: Vector<int>;
      storyColors: Vector<int>;
      constructor(params: {
        paletteColors: Vector<int>;
        bgColors: Vector<int>;
        storyColors: Vector<int>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.PeerColorProfileSet>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PeerColorOption extends TLObject {
      hidden?: boolean;
      colorId: int;
      colors?: Raw.help.TypePeerColorSet;
      darkColors?: Raw.help.TypePeerColorSet;
      channelMinLevel?: int;
      groupMinLevel?: int;
      constructor(params: {
        hidden?: boolean;
        colorId: int;
        colors?: Raw.help.TypePeerColorSet;
        darkColors?: Raw.help.TypePeerColorSet;
        channelMinLevel?: int;
        groupMinLevel?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.PeerColorOption>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PeerColorsNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.PeerColorsNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PeerColors extends TLObject {
      hash: int;
      colors: Vector<Raw.help.TypePeerColorOption>;
      constructor(params: { hash: int; colors: Vector<Raw.help.TypePeerColorOption> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.PeerColors>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TimezonesListNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.TimezonesListNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TimezonesList extends TLObject {
      timezones: Vector<Raw.TypeTimezone>;
      hash: int;
      constructor(params: { timezones: Vector<Raw.TypeTimezone>; hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.TimezonesList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetConfig extends TLObject {
      __response__: Raw.TypeConfig;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetConfig>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetNearestDc extends TLObject {
      __response__: Raw.TypeNearestDc;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetNearestDc>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAppUpdate extends TLObject {
      __response__: Raw.help.TypeAppUpdate;
      source: string;
      constructor(params: { source: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetAppUpdate>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetInviteText extends TLObject {
      __response__: Raw.help.TypeInviteText;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetInviteText>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSupport extends TLObject {
      __response__: Raw.help.TypeSupport;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetSupport>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetBotUpdatesStatus extends TLObject {
      __response__: Bool;
      pendingUpdatesCount: int;
      message: string;
      constructor(params: { pendingUpdatesCount: int; message: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.SetBotUpdatesStatus>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetCdnConfig extends TLObject {
      __response__: Raw.TypeCdnConfig;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetCdnConfig>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetRecentMeUrls extends TLObject {
      __response__: Raw.help.TypeRecentMeUrls;
      referer: string;
      constructor(params: { referer: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetRecentMeUrls>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetTermsOfServiceUpdate extends TLObject {
      __response__: Raw.help.TypeTermsOfServiceUpdate;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetTermsOfServiceUpdate>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AcceptTermsOfService extends TLObject {
      __response__: Bool;
      id: Raw.TypeDataJSON;
      constructor(params: { id: Raw.TypeDataJSON });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.AcceptTermsOfService>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDeepLinkInfo extends TLObject {
      __response__: Raw.help.TypeDeepLinkInfo;
      path: string;
      constructor(params: { path: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetDeepLinkInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAppConfig extends TLObject {
      __response__: Raw.help.TypeAppConfig;
      hash: int;
      constructor(params: { hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetAppConfig>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveAppLog extends TLObject {
      __response__: Bool;
      events: Vector<Raw.TypeInputAppEvent>;
      constructor(params: { events: Vector<Raw.TypeInputAppEvent> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.SaveAppLog>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPassportConfig extends TLObject {
      __response__: Raw.help.TypePassportConfig;
      hash: int;
      constructor(params: { hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetPassportConfig>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSupportName extends TLObject {
      __response__: Raw.help.TypeSupportName;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetSupportName>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetUserInfo extends TLObject {
      __response__: Raw.help.TypeUserInfo;
      userId: Raw.TypeInputUser;
      constructor(params: { userId: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetUserInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditUserInfo extends TLObject {
      __response__: Raw.help.TypeUserInfo;
      userId: Raw.TypeInputUser;
      message: string;
      entities: Vector<Raw.TypeMessageEntity>;
      constructor(params: {
        userId: Raw.TypeInputUser;
        message: string;
        entities: Vector<Raw.TypeMessageEntity>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.EditUserInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPromoData extends TLObject {
      __response__: Raw.help.TypePromoData;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetPromoData>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class HidePromoData extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.HidePromoData>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DismissSuggestion extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      suggestion: string;
      constructor(params: { peer: Raw.TypeInputPeer; suggestion: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.DismissSuggestion>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetCountriesList extends TLObject {
      __response__: Raw.help.TypeCountriesList;
      langCode: string;
      hash: int;
      constructor(params: { langCode: string; hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetCountriesList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPremiumPromo extends TLObject {
      __response__: Raw.help.TypePremiumPromo;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetPremiumPromo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPeerColors extends TLObject {
      __response__: Raw.help.TypePeerColors;
      hash: int;
      constructor(params: { hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetPeerColors>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPeerProfileColors extends TLObject {
      __response__: Raw.help.TypePeerColors;
      hash: int;
      constructor(params: { hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetPeerProfileColors>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetTimezonesList extends TLObject {
      __response__: Raw.help.TypeTimezonesList;
      hash: int;
      constructor(params: { hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.help.GetTimezonesList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace storage {
    type TypeFileType =
      | Raw.storage.FileUnknown
      | Raw.storage.FilePartial
      | Raw.storage.FileJpeg
      | Raw.storage.FileGif
      | Raw.storage.FilePng
      | Raw.storage.FilePdf
      | Raw.storage.FileMp3
      | Raw.storage.FileMov
      | Raw.storage.FileMp4
      | Raw.storage.FileWebp;
    class FileUnknown extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.storage.FileUnknown>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FilePartial extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.storage.FilePartial>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FileJpeg extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.storage.FileJpeg>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FileGif extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.storage.FileGif>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FilePng extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.storage.FilePng>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FilePdf extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.storage.FilePdf>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FileMp3 extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.storage.FileMp3>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FileMov extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.storage.FileMov>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FileMp4 extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.storage.FileMp4>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FileWebp extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.storage.FileWebp>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace auth {
    type TypeLoginToken =
      | Raw.auth.LoginToken
      | Raw.auth.LoginTokenMigrateTo
      | Raw.auth.LoginTokenSuccess;
    type TypePasswordRecovery = Raw.auth.PasswordRecovery;
    type TypeExportedAuthorization = Raw.auth.ExportedAuthorization;
    type TypeLoggedOut = Raw.auth.LoggedOut;
    type TypeSentCode = Raw.auth.SentCode | Raw.auth.SentCodeSuccess;
    type TypeAuthorization = Raw.auth.Authorization | Raw.auth.AuthorizationSignUpRequired;
    type TypeCodeType =
      | Raw.auth.CodeTypeSms
      | Raw.auth.CodeTypeCall
      | Raw.auth.CodeTypeFlashCall
      | Raw.auth.CodeTypeMissedCall
      | Raw.auth.CodeTypeFragmentSms;
    type TypeSentCodeType =
      | Raw.auth.SentCodeTypeApp
      | Raw.auth.SentCodeTypeSms
      | Raw.auth.SentCodeTypeCall
      | Raw.auth.SentCodeTypeFlashCall
      | Raw.auth.SentCodeTypeMissedCall
      | Raw.auth.SentCodeTypeEmailCode
      | Raw.auth.SentCodeTypeSetUpEmailRequired
      | Raw.auth.SentCodeTypeFragmentSms
      | Raw.auth.SentCodeTypeFirebaseSms
      | Raw.auth.SentCodeTypeSmsWord
      | Raw.auth.SentCodeTypeSmsPhrase;
    class SentCode extends TLObject {
      type: Raw.auth.TypeSentCodeType;
      phoneCodeHash: string;
      nextType?: Raw.auth.TypeCodeType;
      timeout?: int;
      constructor(params: {
        type: Raw.auth.TypeSentCodeType;
        phoneCodeHash: string;
        nextType?: Raw.auth.TypeCodeType;
        timeout?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeSuccess extends TLObject {
      authorization: Raw.auth.TypeAuthorization;
      constructor(params: { authorization: Raw.auth.TypeAuthorization });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCodeSuccess>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Authorization extends TLObject {
      setupPasswordRequired?: boolean;
      otherwiseReloginDays?: int;
      tmpSessions?: int;
      futureAuthToken?: bytes;
      user: Raw.TypeUser;
      constructor(params: {
        setupPasswordRequired?: boolean;
        otherwiseReloginDays?: int;
        tmpSessions?: int;
        futureAuthToken?: bytes;
        user: Raw.TypeUser;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.Authorization>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AuthorizationSignUpRequired extends TLObject {
      termsOfService?: Raw.help.TypeTermsOfService;
      constructor(params: { termsOfService?: Raw.help.TypeTermsOfService });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.AuthorizationSignUpRequired>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportedAuthorization extends TLObject {
      id: long;
      bytes: bytes;
      constructor(params: { id: long; bytes: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.ExportedAuthorization>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PasswordRecovery extends TLObject {
      emailPattern: string;
      constructor(params: { emailPattern: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.PasswordRecovery>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CodeTypeSms extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.CodeTypeSms>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CodeTypeCall extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.CodeTypeCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CodeTypeFlashCall extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.CodeTypeFlashCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CodeTypeMissedCall extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.CodeTypeMissedCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CodeTypeFragmentSms extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.CodeTypeFragmentSms>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeTypeApp extends TLObject {
      length: int;
      constructor(params: { length: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCodeTypeApp>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeTypeSms extends TLObject {
      length: int;
      constructor(params: { length: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCodeTypeSms>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeTypeCall extends TLObject {
      length: int;
      constructor(params: { length: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCodeTypeCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeTypeFlashCall extends TLObject {
      pattern: string;
      constructor(params: { pattern: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCodeTypeFlashCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeTypeMissedCall extends TLObject {
      prefix: string;
      length: int;
      constructor(params: { prefix: string; length: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCodeTypeMissedCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeTypeEmailCode extends TLObject {
      appleSigninAllowed?: boolean;
      googleSigninAllowed?: boolean;
      emailPattern: string;
      length: int;
      resetAvailablePeriod?: int;
      resetPendingDate?: int;
      constructor(params: {
        appleSigninAllowed?: boolean;
        googleSigninAllowed?: boolean;
        emailPattern: string;
        length: int;
        resetAvailablePeriod?: int;
        resetPendingDate?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCodeTypeEmailCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeTypeSetUpEmailRequired extends TLObject {
      appleSigninAllowed?: boolean;
      googleSigninAllowed?: boolean;
      constructor(params: { appleSigninAllowed?: boolean; googleSigninAllowed?: boolean });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.auth.SentCodeTypeSetUpEmailRequired>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeTypeFragmentSms extends TLObject {
      url: string;
      length: int;
      constructor(params: { url: string; length: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCodeTypeFragmentSms>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeTypeFirebaseSms extends TLObject {
      nonce?: bytes;
      receipt?: string;
      pushTimeout?: int;
      length: int;
      constructor(params: { nonce?: bytes; receipt?: string; pushTimeout?: int; length: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCodeTypeFirebaseSms>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeTypeSmsWord extends TLObject {
      beginning?: string;
      constructor(params: { beginning?: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCodeTypeSmsWord>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentCodeTypeSmsPhrase extends TLObject {
      beginning?: string;
      constructor(params: { beginning?: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SentCodeTypeSmsPhrase>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class LoginToken extends TLObject {
      expires: int;
      token: bytes;
      constructor(params: { expires: int; token: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.LoginToken>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class LoginTokenMigrateTo extends TLObject {
      dcId: int;
      token: bytes;
      constructor(params: { dcId: int; token: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.LoginTokenMigrateTo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class LoginTokenSuccess extends TLObject {
      authorization: Raw.auth.TypeAuthorization;
      constructor(params: { authorization: Raw.auth.TypeAuthorization });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.LoginTokenSuccess>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class LoggedOut extends TLObject {
      futureAuthToken?: bytes;
      constructor(params: { futureAuthToken?: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.LoggedOut>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendCode extends TLObject {
      __response__: Raw.auth.TypeSentCode;
      phoneNumber: string;
      apiId: int;
      apiHash: string;
      settings: Raw.TypeCodeSettings;
      constructor(params: {
        phoneNumber: string;
        apiId: int;
        apiHash: string;
        settings: Raw.TypeCodeSettings;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SendCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SignUp extends TLObject {
      __response__: Raw.auth.TypeAuthorization;
      noJoinedNotifications?: boolean;
      phoneNumber: string;
      phoneCodeHash: string;
      firstName: string;
      lastName: string;
      constructor(params: {
        noJoinedNotifications?: boolean;
        phoneNumber: string;
        phoneCodeHash: string;
        firstName: string;
        lastName: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SignUp>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SignIn extends TLObject {
      __response__: Raw.auth.TypeAuthorization;
      phoneNumber: string;
      phoneCodeHash: string;
      phoneCode?: string;
      emailVerification?: Raw.TypeEmailVerification;
      constructor(params: {
        phoneNumber: string;
        phoneCodeHash: string;
        phoneCode?: string;
        emailVerification?: Raw.TypeEmailVerification;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.SignIn>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class LogOut extends TLObject {
      __response__: Raw.auth.TypeLoggedOut;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.LogOut>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetAuthorizations extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.ResetAuthorizations>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportAuthorization extends TLObject {
      __response__: Raw.auth.TypeExportedAuthorization;
      dcId: int;
      constructor(params: { dcId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.ExportAuthorization>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ImportAuthorization extends TLObject {
      __response__: Raw.auth.TypeAuthorization;
      id: long;
      bytes: bytes;
      constructor(params: { id: long; bytes: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.ImportAuthorization>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BindTempAuthKey extends TLObject {
      __response__: Bool;
      permAuthKeyId: long;
      nonce: long;
      expiresAt: int;
      encryptedMessage: bytes;
      constructor(params: {
        permAuthKeyId: long;
        nonce: long;
        expiresAt: int;
        encryptedMessage: bytes;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.BindTempAuthKey>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ImportBotAuthorization extends TLObject {
      __response__: Raw.auth.TypeAuthorization;
      flags: int;
      apiId: int;
      apiHash: string;
      botAuthToken: string;
      constructor(params: { flags: int; apiId: int; apiHash: string; botAuthToken: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.ImportBotAuthorization>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckPassword extends TLObject {
      __response__: Raw.auth.TypeAuthorization;
      password: Raw.TypeInputCheckPasswordSRP;
      constructor(params: { password: Raw.TypeInputCheckPasswordSRP });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.CheckPassword>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RequestPasswordRecovery extends TLObject {
      __response__: Raw.auth.TypePasswordRecovery;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.RequestPasswordRecovery>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RecoverPassword extends TLObject {
      __response__: Raw.auth.TypeAuthorization;
      code: string;
      newSettings?: Raw.account.TypePasswordInputSettings;
      constructor(params: { code: string; newSettings?: Raw.account.TypePasswordInputSettings });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.RecoverPassword>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResendCode extends TLObject {
      __response__: Raw.auth.TypeSentCode;
      phoneNumber: string;
      phoneCodeHash: string;
      constructor(params: { phoneNumber: string; phoneCodeHash: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.ResendCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CancelCode extends TLObject {
      __response__: Bool;
      phoneNumber: string;
      phoneCodeHash: string;
      constructor(params: { phoneNumber: string; phoneCodeHash: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.CancelCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DropTempAuthKeys extends TLObject {
      __response__: Bool;
      exceptAuthKeys: Vector<long>;
      constructor(params: { exceptAuthKeys: Vector<long> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.DropTempAuthKeys>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportLoginToken extends TLObject {
      __response__: Raw.auth.TypeLoginToken;
      apiId: int;
      apiHash: string;
      exceptIds: Vector<long>;
      constructor(params: { apiId: int; apiHash: string; exceptIds: Vector<long> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.ExportLoginToken>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ImportLoginToken extends TLObject {
      __response__: Raw.auth.TypeLoginToken;
      token: bytes;
      constructor(params: { token: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.ImportLoginToken>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AcceptLoginToken extends TLObject {
      __response__: Raw.TypeAuthorization;
      token: bytes;
      constructor(params: { token: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.AcceptLoginToken>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckRecoveryPassword extends TLObject {
      __response__: Bool;
      code: string;
      constructor(params: { code: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.CheckRecoveryPassword>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ImportWebTokenAuthorization extends TLObject {
      __response__: Raw.auth.TypeAuthorization;
      apiId: int;
      apiHash: string;
      webAuthToken: string;
      constructor(params: { apiId: int; apiHash: string; webAuthToken: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.ImportWebTokenAuthorization>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RequestFirebaseSms extends TLObject {
      __response__: Bool;
      phoneNumber: string;
      phoneCodeHash: string;
      safetyNetToken?: string;
      iosPushSecret?: string;
      constructor(params: {
        phoneNumber: string;
        phoneCodeHash: string;
        safetyNetToken?: string;
        iosPushSecret?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.RequestFirebaseSms>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetLoginEmail extends TLObject {
      __response__: Raw.auth.TypeSentCode;
      phoneNumber: string;
      phoneCodeHash: string;
      constructor(params: { phoneNumber: string; phoneCodeHash: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.ResetLoginEmail>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReportMissingCode extends TLObject {
      __response__: Bool;
      phoneNumber: string;
      phoneCodeHash: string;
      mnc: string;
      constructor(params: { phoneNumber: string; phoneCodeHash: string; mnc: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.auth.ReportMissingCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace contacts {
    type TypeContactBirthdays = Raw.contacts.ContactBirthdays;
    type TypeTopPeers =
      | Raw.contacts.TopPeersNotModified
      | Raw.contacts.TopPeers
      | Raw.contacts.TopPeersDisabled;
    type TypeResolvedPeer = Raw.contacts.ResolvedPeer;
    type TypeFound = Raw.contacts.Found;
    type TypeBlocked = Raw.contacts.Blocked | Raw.contacts.BlockedSlice;
    type TypeImportedContacts = Raw.contacts.ImportedContacts;
    type TypeContacts = Raw.contacts.ContactsNotModified | Raw.contacts.Contacts;
    class ContactsNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ContactsNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Contacts extends TLObject {
      contacts: Vector<Raw.TypeContact>;
      savedCount: int;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        contacts: Vector<Raw.TypeContact>;
        savedCount: int;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.Contacts>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ImportedContacts extends TLObject {
      imported: Vector<Raw.TypeImportedContact>;
      popularInvites: Vector<Raw.TypePopularContact>;
      retryContacts: Vector<long>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        imported: Vector<Raw.TypeImportedContact>;
        popularInvites: Vector<Raw.TypePopularContact>;
        retryContacts: Vector<long>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ImportedContacts>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Blocked extends TLObject {
      blocked: Vector<Raw.TypePeerBlocked>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        blocked: Vector<Raw.TypePeerBlocked>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.Blocked>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BlockedSlice extends TLObject {
      count: int;
      blocked: Vector<Raw.TypePeerBlocked>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        count: int;
        blocked: Vector<Raw.TypePeerBlocked>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.BlockedSlice>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Found extends TLObject {
      myResults: Vector<Raw.TypePeer>;
      results: Vector<Raw.TypePeer>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        myResults: Vector<Raw.TypePeer>;
        results: Vector<Raw.TypePeer>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.Found>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResolvedPeer extends TLObject {
      peer: Raw.TypePeer;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        peer: Raw.TypePeer;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ResolvedPeer>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TopPeersNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.TopPeersNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TopPeers extends TLObject {
      categories: Vector<Raw.TypeTopPeerCategoryPeers>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        categories: Vector<Raw.TypeTopPeerCategoryPeers>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.TopPeers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TopPeersDisabled extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.TopPeersDisabled>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ContactBirthdays extends TLObject {
      contacts: Vector<Raw.TypeContactBirthday>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        contacts: Vector<Raw.TypeContactBirthday>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ContactBirthdays>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetContactIDs extends TLObject {
      __response__: Vector<int>;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.GetContactIDs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStatuses extends TLObject {
      __response__: Vector<Raw.TypeContactStatus>;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.GetStatuses>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetContacts extends TLObject {
      __response__: Raw.contacts.TypeContacts;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.GetContacts>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ImportContacts extends TLObject {
      __response__: Raw.contacts.TypeImportedContacts;
      contacts: Vector<Raw.TypeInputContact>;
      constructor(params: { contacts: Vector<Raw.TypeInputContact> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ImportContacts>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteContacts extends TLObject {
      __response__: Raw.TypeUpdates;
      id: Vector<Raw.TypeInputUser>;
      constructor(params: { id: Vector<Raw.TypeInputUser> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.DeleteContacts>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteByPhones extends TLObject {
      __response__: Bool;
      phones: Vector<string>;
      constructor(params: { phones: Vector<string> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.DeleteByPhones>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Block extends TLObject {
      __response__: Bool;
      myStoriesFrom?: boolean;
      id: Raw.TypeInputPeer;
      constructor(params: { myStoriesFrom?: boolean; id: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.Block>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Unblock extends TLObject {
      __response__: Bool;
      myStoriesFrom?: boolean;
      id: Raw.TypeInputPeer;
      constructor(params: { myStoriesFrom?: boolean; id: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.Unblock>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBlocked extends TLObject {
      __response__: Raw.contacts.TypeBlocked;
      myStoriesFrom?: boolean;
      offset: int;
      limit: int;
      constructor(params: { myStoriesFrom?: boolean; offset: int; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.GetBlocked>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Search extends TLObject {
      __response__: Raw.contacts.TypeFound;
      q: string;
      limit: int;
      constructor(params: { q: string; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.Search>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResolveUsername extends TLObject {
      __response__: Raw.contacts.TypeResolvedPeer;
      username: string;
      constructor(params: { username: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ResolveUsername>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetTopPeers extends TLObject {
      __response__: Raw.contacts.TypeTopPeers;
      correspondents?: boolean;
      botsPm?: boolean;
      botsInline?: boolean;
      phoneCalls?: boolean;
      forwardUsers?: boolean;
      forwardChats?: boolean;
      groups?: boolean;
      channels?: boolean;
      offset: int;
      limit: int;
      hash: long;
      constructor(params: {
        correspondents?: boolean;
        botsPm?: boolean;
        botsInline?: boolean;
        phoneCalls?: boolean;
        forwardUsers?: boolean;
        forwardChats?: boolean;
        groups?: boolean;
        channels?: boolean;
        offset: int;
        limit: int;
        hash: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.GetTopPeers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetTopPeerRating extends TLObject {
      __response__: Bool;
      category: Raw.TypeTopPeerCategory;
      peer: Raw.TypeInputPeer;
      constructor(params: { category: Raw.TypeTopPeerCategory; peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ResetTopPeerRating>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetSaved extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ResetSaved>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSaved extends TLObject {
      __response__: Vector<Raw.TypeSavedContact>;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.GetSaved>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleTopPeers extends TLObject {
      __response__: Bool;
      enabled: Bool;
      constructor(params: { enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ToggleTopPeers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AddContact extends TLObject {
      __response__: Raw.TypeUpdates;
      addPhonePrivacyException?: boolean;
      id: Raw.TypeInputUser;
      firstName: string;
      lastName: string;
      phone: string;
      constructor(params: {
        addPhonePrivacyException?: boolean;
        id: Raw.TypeInputUser;
        firstName: string;
        lastName: string;
        phone: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.AddContact>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AcceptContact extends TLObject {
      __response__: Raw.TypeUpdates;
      id: Raw.TypeInputUser;
      constructor(params: { id: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.AcceptContact>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetLocated extends TLObject {
      __response__: Raw.TypeUpdates;
      background?: boolean;
      geoPoint: Raw.TypeInputGeoPoint;
      selfExpires?: int;
      constructor(params: {
        background?: boolean;
        geoPoint: Raw.TypeInputGeoPoint;
        selfExpires?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.GetLocated>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BlockFromReplies extends TLObject {
      __response__: Raw.TypeUpdates;
      deleteMessage?: boolean;
      deleteHistory?: boolean;
      reportSpam?: boolean;
      msgId: int;
      constructor(params: {
        deleteMessage?: boolean;
        deleteHistory?: boolean;
        reportSpam?: boolean;
        msgId: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.BlockFromReplies>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResolvePhone extends TLObject {
      __response__: Raw.contacts.TypeResolvedPeer;
      phone: string;
      constructor(params: { phone: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ResolvePhone>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportContactToken extends TLObject {
      __response__: Raw.TypeExportedContactToken;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ExportContactToken>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ImportContactToken extends TLObject {
      __response__: Raw.TypeUser;
      token: string;
      constructor(params: { token: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.ImportContactToken>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditCloseFriends extends TLObject {
      __response__: Bool;
      id: Vector<long>;
      constructor(params: { id: Vector<long> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.EditCloseFriends>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetBlocked extends TLObject {
      __response__: Bool;
      myStoriesFrom?: boolean;
      id: Vector<Raw.TypeInputPeer>;
      limit: int;
      constructor(params: { myStoriesFrom?: boolean; id: Vector<Raw.TypeInputPeer>; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.SetBlocked>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBirthdays extends TLObject {
      __response__: Raw.contacts.TypeContactBirthdays;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.contacts.GetBirthdays>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace messages {
    type TypeForumTopics = Raw.messages.ForumTopics;
    type TypeSponsoredMessages =
      | Raw.messages.SponsoredMessages
      | Raw.messages.SponsoredMessagesEmpty;
    type TypeInactiveChats = Raw.messages.InactiveChats;
    type TypeMyStickers = Raw.messages.MyStickers;
    type TypeQuickReplies = Raw.messages.QuickReplies | Raw.messages.QuickRepliesNotModified;
    type TypeSavedReactionTags =
      | Raw.messages.SavedReactionTagsNotModified
      | Raw.messages.SavedReactionTags;
    type TypeSavedDialogs =
      | Raw.messages.SavedDialogs
      | Raw.messages.SavedDialogsSlice
      | Raw.messages.SavedDialogsNotModified;
    type TypeBotApp = Raw.messages.BotApp;
    type TypeEmojiGroups = Raw.messages.EmojiGroupsNotModified | Raw.messages.EmojiGroups;
    type TypeReactions = Raw.messages.ReactionsNotModified | Raw.messages.Reactions;
    type TypeTranscribedAudio = Raw.messages.TranscribedAudio;
    type TypeTranslatedText = Raw.messages.TranslateResult;
    type TypeAvailableReactions =
      | Raw.messages.AvailableReactionsNotModified
      | Raw.messages.AvailableReactions;
    type TypeMessageReactionsList = Raw.messages.MessageReactionsList;
    type TypeSearchResultsPositions = Raw.messages.SearchResultsPositions;
    type TypeSearchResultsCalendar = Raw.messages.SearchResultsCalendar;
    type TypeCheckedHistoryImportPeer = Raw.messages.CheckedHistoryImportPeer;
    type TypeChatInviteImporters = Raw.messages.ChatInviteImporters;
    type TypeChatAdminsWithInvites = Raw.messages.ChatAdminsWithInvites;
    type TypeExportedChatInvite =
      | Raw.messages.ExportedChatInvite
      | Raw.messages.ExportedChatInviteReplaced;
    type TypeExportedChatInvites = Raw.messages.ExportedChatInvites;
    type TypeHistoryImport = Raw.messages.HistoryImport;
    type TypeHistoryImportParsed = Raw.messages.HistoryImportParsed;
    type TypeAffectedFoundMessages = Raw.messages.AffectedFoundMessages;
    type TypeDiscussionMessage = Raw.messages.DiscussionMessage;
    type TypeDialogFilters = Raw.messages.DialogFilters;
    type TypeVotesList = Raw.messages.VotesList;
    type TypeSearchCounter = Raw.messages.SearchCounter;
    type TypeFoundStickerSets =
      | Raw.messages.FoundStickerSetsNotModified
      | Raw.messages.FoundStickerSets;
    type TypeFavedStickers = Raw.messages.FavedStickersNotModified | Raw.messages.FavedStickers;
    type TypeWebPage = Raw.messages.WebPage;
    type TypeHighScores = Raw.messages.HighScores;
    type TypeArchivedStickers = Raw.messages.ArchivedStickers;
    type TypeRecentStickers = Raw.messages.RecentStickersNotModified | Raw.messages.RecentStickers;
    type TypeFeaturedStickers =
      | Raw.messages.FeaturedStickersNotModified
      | Raw.messages.FeaturedStickers;
    type TypePeerDialogs = Raw.messages.PeerDialogs;
    type TypeBotCallbackAnswer = Raw.messages.BotCallbackAnswer;
    type TypeMessageEditData = Raw.messages.MessageEditData;
    type TypeBotResults = Raw.messages.BotResults;
    type TypeSavedGifs = Raw.messages.SavedGifsNotModified | Raw.messages.SavedGifs;
    type TypeMessageViews = Raw.messages.MessageViews;
    type TypeStickerSetInstallResult =
      | Raw.messages.StickerSetInstallResultSuccess
      | Raw.messages.StickerSetInstallResultArchive;
    type TypeAllStickers = Raw.messages.AllStickersNotModified | Raw.messages.AllStickers;
    type TypeStickers = Raw.messages.StickersNotModified | Raw.messages.Stickers;
    type TypeSentEncryptedMessage =
      | Raw.messages.SentEncryptedMessage
      | Raw.messages.SentEncryptedFile;
    type TypeDhConfig = Raw.messages.DhConfigNotModified | Raw.messages.DhConfig;
    type TypeInvitedUsers = Raw.messages.InvitedUsers;
    type TypeChatFull = Raw.messages.ChatFull;
    type TypeChats = Raw.messages.Chats | Raw.messages.ChatsSlice;
    type TypePeerSettings = Raw.messages.PeerSettings;
    type TypeAffectedHistory = Raw.messages.AffectedHistory;
    type TypeAffectedMessages = Raw.messages.AffectedMessages;
    type TypeDialogs =
      | Raw.messages.Dialogs
      | Raw.messages.DialogsSlice
      | Raw.messages.DialogsNotModified;
    type TypeMessages =
      | Raw.messages.Messages
      | Raw.messages.MessagesSlice
      | Raw.messages.ChannelMessages
      | Raw.messages.MessagesNotModified;
    type TypeStickerSet = Raw.messages.StickerSet | Raw.messages.StickerSetNotModified;
    class Dialogs extends TLObject {
      dialogs: Vector<Raw.TypeDialog>;
      messages: Vector<Raw.TypeMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        dialogs: Vector<Raw.TypeDialog>;
        messages: Vector<Raw.TypeMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.Dialogs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DialogsSlice extends TLObject {
      count: int;
      dialogs: Vector<Raw.TypeDialog>;
      messages: Vector<Raw.TypeMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        count: int;
        dialogs: Vector<Raw.TypeDialog>;
        messages: Vector<Raw.TypeMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DialogsSlice>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DialogsNotModified extends TLObject {
      count: int;
      constructor(params: { count: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DialogsNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Messages extends TLObject {
      messages: Vector<Raw.TypeMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        messages: Vector<Raw.TypeMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.Messages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class MessagesSlice extends TLObject {
      inexact?: boolean;
      count: int;
      nextRate?: int;
      offsetIdOffset?: int;
      messages: Vector<Raw.TypeMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        inexact?: boolean;
        count: int;
        nextRate?: int;
        offsetIdOffset?: int;
        messages: Vector<Raw.TypeMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.MessagesSlice>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChannelMessages extends TLObject {
      inexact?: boolean;
      pts: int;
      count: int;
      offsetIdOffset?: int;
      messages: Vector<Raw.TypeMessage>;
      topics: Vector<Raw.TypeForumTopic>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        inexact?: boolean;
        pts: int;
        count: int;
        offsetIdOffset?: int;
        messages: Vector<Raw.TypeMessage>;
        topics: Vector<Raw.TypeForumTopic>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ChannelMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class MessagesNotModified extends TLObject {
      count: int;
      constructor(params: { count: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.MessagesNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Chats extends TLObject {
      chats: Vector<Raw.TypeChat>;
      constructor(params: { chats: Vector<Raw.TypeChat> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.Chats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChatsSlice extends TLObject {
      count: int;
      chats: Vector<Raw.TypeChat>;
      constructor(params: { count: int; chats: Vector<Raw.TypeChat> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ChatsSlice>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChatFull extends TLObject {
      fullChat: Raw.TypeChatFull;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        fullChat: Raw.TypeChatFull;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ChatFull>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AffectedHistory extends TLObject {
      pts: int;
      ptsCount: int;
      offset: int;
      constructor(params: { pts: int; ptsCount: int; offset: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.AffectedHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DhConfigNotModified extends TLObject {
      random: bytes;
      constructor(params: { random: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DhConfigNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DhConfig extends TLObject {
      g: int;
      p: bytes;
      version: int;
      random: bytes;
      constructor(params: { g: int; p: bytes; version: int; random: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DhConfig>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentEncryptedMessage extends TLObject {
      date: int;
      constructor(params: { date: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SentEncryptedMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentEncryptedFile extends TLObject {
      date: int;
      file: Raw.TypeEncryptedFile;
      constructor(params: { date: int; file: Raw.TypeEncryptedFile });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SentEncryptedFile>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StickersNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.StickersNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Stickers extends TLObject {
      hash: long;
      stickers: Vector<Raw.TypeDocument>;
      constructor(params: { hash: long; stickers: Vector<Raw.TypeDocument> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.Stickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AllStickersNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.AllStickersNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AllStickers extends TLObject {
      hash: long;
      sets: Vector<Raw.TypeStickerSet>;
      constructor(params: { hash: long; sets: Vector<Raw.TypeStickerSet> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.AllStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AffectedMessages extends TLObject {
      pts: int;
      ptsCount: int;
      constructor(params: { pts: int; ptsCount: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.AffectedMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StickerSet extends TLObject {
      set: Raw.TypeStickerSet;
      packs: Vector<Raw.TypeStickerPack>;
      keywords: Vector<Raw.TypeStickerKeyword>;
      documents: Vector<Raw.TypeDocument>;
      constructor(params: {
        set: Raw.TypeStickerSet;
        packs: Vector<Raw.TypeStickerPack>;
        keywords: Vector<Raw.TypeStickerKeyword>;
        documents: Vector<Raw.TypeDocument>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.StickerSet>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StickerSetNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.StickerSetNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedGifsNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SavedGifsNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedGifs extends TLObject {
      hash: long;
      gifs: Vector<Raw.TypeDocument>;
      constructor(params: { hash: long; gifs: Vector<Raw.TypeDocument> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SavedGifs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BotResults extends TLObject {
      gallery?: boolean;
      queryId: long;
      nextOffset?: string;
      switchPm?: Raw.TypeInlineBotSwitchPM;
      switchWebview?: Raw.TypeInlineBotWebView;
      results: Vector<Raw.TypeBotInlineResult>;
      cacheTime: int;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        gallery?: boolean;
        queryId: long;
        nextOffset?: string;
        switchPm?: Raw.TypeInlineBotSwitchPM;
        switchWebview?: Raw.TypeInlineBotWebView;
        results: Vector<Raw.TypeBotInlineResult>;
        cacheTime: int;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.BotResults>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BotCallbackAnswer extends TLObject {
      alert?: boolean;
      hasUrl?: boolean;
      nativeUi?: boolean;
      message?: string;
      url?: string;
      cacheTime: int;
      constructor(params: {
        alert?: boolean;
        hasUrl?: boolean;
        nativeUi?: boolean;
        message?: string;
        url?: string;
        cacheTime: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.BotCallbackAnswer>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class MessageEditData extends TLObject {
      caption?: boolean;
      constructor(params: { caption?: boolean });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.MessageEditData>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PeerDialogs extends TLObject {
      dialogs: Vector<Raw.TypeDialog>;
      messages: Vector<Raw.TypeMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      state: Raw.updates.TypeState;
      constructor(params: {
        dialogs: Vector<Raw.TypeDialog>;
        messages: Vector<Raw.TypeMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
        state: Raw.updates.TypeState;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.PeerDialogs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FeaturedStickersNotModified extends TLObject {
      count: int;
      constructor(params: { count: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.FeaturedStickersNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FeaturedStickers extends TLObject {
      premium?: boolean;
      hash: long;
      count: int;
      sets: Vector<Raw.TypeStickerSetCovered>;
      unread: Vector<long>;
      constructor(params: {
        premium?: boolean;
        hash: long;
        count: int;
        sets: Vector<Raw.TypeStickerSetCovered>;
        unread: Vector<long>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.FeaturedStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RecentStickersNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.RecentStickersNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RecentStickers extends TLObject {
      hash: long;
      packs: Vector<Raw.TypeStickerPack>;
      stickers: Vector<Raw.TypeDocument>;
      dates: Vector<int>;
      constructor(params: {
        hash: long;
        packs: Vector<Raw.TypeStickerPack>;
        stickers: Vector<Raw.TypeDocument>;
        dates: Vector<int>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.RecentStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ArchivedStickers extends TLObject {
      count: int;
      sets: Vector<Raw.TypeStickerSetCovered>;
      constructor(params: { count: int; sets: Vector<Raw.TypeStickerSetCovered> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ArchivedStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StickerSetInstallResultSuccess extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.StickerSetInstallResultSuccess>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StickerSetInstallResultArchive extends TLObject {
      sets: Vector<Raw.TypeStickerSetCovered>;
      constructor(params: { sets: Vector<Raw.TypeStickerSetCovered> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.StickerSetInstallResultArchive>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class HighScores extends TLObject {
      scores: Vector<Raw.TypeHighScore>;
      users: Vector<Raw.TypeUser>;
      constructor(params: { scores: Vector<Raw.TypeHighScore>; users: Vector<Raw.TypeUser> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.HighScores>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FavedStickersNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.FavedStickersNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FavedStickers extends TLObject {
      hash: long;
      packs: Vector<Raw.TypeStickerPack>;
      stickers: Vector<Raw.TypeDocument>;
      constructor(params: {
        hash: long;
        packs: Vector<Raw.TypeStickerPack>;
        stickers: Vector<Raw.TypeDocument>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.FavedStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FoundStickerSetsNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.FoundStickerSetsNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FoundStickerSets extends TLObject {
      hash: long;
      sets: Vector<Raw.TypeStickerSetCovered>;
      constructor(params: { hash: long; sets: Vector<Raw.TypeStickerSetCovered> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.FoundStickerSets>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SearchCounter extends TLObject {
      inexact?: boolean;
      filter: Raw.TypeMessagesFilter;
      count: int;
      constructor(params: { inexact?: boolean; filter: Raw.TypeMessagesFilter; count: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SearchCounter>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InactiveChats extends TLObject {
      dates: Vector<int>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        dates: Vector<int>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.InactiveChats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class VotesList extends TLObject {
      count: int;
      votes: Vector<Raw.TypeMessagePeerVote>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      nextOffset?: string;
      constructor(params: {
        count: int;
        votes: Vector<Raw.TypeMessagePeerVote>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
        nextOffset?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.VotesList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class MessageViews extends TLObject {
      views: Vector<Raw.TypeMessageViews>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        views: Vector<Raw.TypeMessageViews>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.MessageViews>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DiscussionMessage extends TLObject {
      messages: Vector<Raw.TypeMessage>;
      maxId?: int;
      readInboxMaxId?: int;
      readOutboxMaxId?: int;
      unreadCount: int;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        messages: Vector<Raw.TypeMessage>;
        maxId?: int;
        readInboxMaxId?: int;
        readOutboxMaxId?: int;
        unreadCount: int;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DiscussionMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class HistoryImport extends TLObject {
      id: long;
      constructor(params: { id: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.HistoryImport>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class HistoryImportParsed extends TLObject {
      pm?: boolean;
      group?: boolean;
      title?: string;
      constructor(params: { pm?: boolean; group?: boolean; title?: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.HistoryImportParsed>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AffectedFoundMessages extends TLObject {
      pts: int;
      ptsCount: int;
      offset: int;
      messages: Vector<int>;
      constructor(params: { pts: int; ptsCount: int; offset: int; messages: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.AffectedFoundMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportedChatInvites extends TLObject {
      count: int;
      invites: Vector<Raw.TypeExportedChatInvite>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        count: int;
        invites: Vector<Raw.TypeExportedChatInvite>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ExportedChatInvites>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportedChatInvite extends TLObject {
      invite: Raw.TypeExportedChatInvite;
      users: Vector<Raw.TypeUser>;
      constructor(params: { invite: Raw.TypeExportedChatInvite; users: Vector<Raw.TypeUser> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ExportedChatInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportedChatInviteReplaced extends TLObject {
      invite: Raw.TypeExportedChatInvite;
      newInvite: Raw.TypeExportedChatInvite;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        invite: Raw.TypeExportedChatInvite;
        newInvite: Raw.TypeExportedChatInvite;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.ExportedChatInviteReplaced>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChatInviteImporters extends TLObject {
      count: int;
      importers: Vector<Raw.TypeChatInviteImporter>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        count: int;
        importers: Vector<Raw.TypeChatInviteImporter>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ChatInviteImporters>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChatAdminsWithInvites extends TLObject {
      admins: Vector<Raw.TypeChatAdminWithInvites>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        admins: Vector<Raw.TypeChatAdminWithInvites>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ChatAdminsWithInvites>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckedHistoryImportPeer extends TLObject {
      confirmText: string;
      constructor(params: { confirmText: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.CheckedHistoryImportPeer>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SponsoredMessages extends TLObject {
      postsBetween?: int;
      messages: Vector<Raw.TypeSponsoredMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        postsBetween?: int;
        messages: Vector<Raw.TypeSponsoredMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SponsoredMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SponsoredMessagesEmpty extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SponsoredMessagesEmpty>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SearchResultsCalendar extends TLObject {
      inexact?: boolean;
      count: int;
      minDate: int;
      minMsgId: int;
      offsetIdOffset?: int;
      periods: Vector<Raw.TypeSearchResultsCalendarPeriod>;
      messages: Vector<Raw.TypeMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        inexact?: boolean;
        count: int;
        minDate: int;
        minMsgId: int;
        offsetIdOffset?: int;
        periods: Vector<Raw.TypeSearchResultsCalendarPeriod>;
        messages: Vector<Raw.TypeMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SearchResultsCalendar>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SearchResultsPositions extends TLObject {
      count: int;
      positions: Vector<Raw.TypeSearchResultsPosition>;
      constructor(params: { count: int; positions: Vector<Raw.TypeSearchResultsPosition> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SearchResultsPositions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PeerSettings extends TLObject {
      settings: Raw.TypePeerSettings;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        settings: Raw.TypePeerSettings;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.PeerSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class MessageReactionsList extends TLObject {
      count: int;
      reactions: Vector<Raw.TypeMessagePeerReaction>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      nextOffset?: string;
      constructor(params: {
        count: int;
        reactions: Vector<Raw.TypeMessagePeerReaction>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
        nextOffset?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.MessageReactionsList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AvailableReactionsNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.AvailableReactionsNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AvailableReactions extends TLObject {
      hash: int;
      reactions: Vector<Raw.TypeAvailableReaction>;
      constructor(params: { hash: int; reactions: Vector<Raw.TypeAvailableReaction> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.AvailableReactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TranscribedAudio extends TLObject {
      pending?: boolean;
      transcriptionId: long;
      text: string;
      trialRemainsNum?: int;
      trialRemainsUntilDate?: int;
      constructor(params: {
        pending?: boolean;
        transcriptionId: long;
        text: string;
        trialRemainsNum?: int;
        trialRemainsUntilDate?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.TranscribedAudio>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReactionsNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReactionsNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Reactions extends TLObject {
      hash: long;
      reactions: Vector<Raw.TypeReaction>;
      constructor(params: { hash: long; reactions: Vector<Raw.TypeReaction> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.Reactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ForumTopics extends TLObject {
      orderByCreateDate?: boolean;
      count: int;
      topics: Vector<Raw.TypeForumTopic>;
      messages: Vector<Raw.TypeMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      pts: int;
      constructor(params: {
        orderByCreateDate?: boolean;
        count: int;
        topics: Vector<Raw.TypeForumTopic>;
        messages: Vector<Raw.TypeMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
        pts: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ForumTopics>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EmojiGroupsNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.EmojiGroupsNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EmojiGroups extends TLObject {
      hash: int;
      groups: Vector<Raw.TypeEmojiGroup>;
      constructor(params: { hash: int; groups: Vector<Raw.TypeEmojiGroup> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.EmojiGroups>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TranslateResult extends TLObject {
      result: Vector<Raw.TypeTextWithEntities>;
      constructor(params: { result: Vector<Raw.TypeTextWithEntities> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.TranslateResult>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BotApp extends TLObject {
      inactive?: boolean;
      requestWriteAccess?: boolean;
      hasSettings?: boolean;
      app: Raw.TypeBotApp;
      constructor(params: {
        inactive?: boolean;
        requestWriteAccess?: boolean;
        hasSettings?: boolean;
        app: Raw.TypeBotApp;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.BotApp>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class WebPage extends TLObject {
      webpage: Raw.TypeWebPage;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        webpage: Raw.TypeWebPage;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.WebPage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedDialogs extends TLObject {
      dialogs: Vector<Raw.TypeSavedDialog>;
      messages: Vector<Raw.TypeMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        dialogs: Vector<Raw.TypeSavedDialog>;
        messages: Vector<Raw.TypeMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SavedDialogs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedDialogsSlice extends TLObject {
      count: int;
      dialogs: Vector<Raw.TypeSavedDialog>;
      messages: Vector<Raw.TypeMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        count: int;
        dialogs: Vector<Raw.TypeSavedDialog>;
        messages: Vector<Raw.TypeMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SavedDialogsSlice>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedDialogsNotModified extends TLObject {
      count: int;
      constructor(params: { count: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SavedDialogsNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedReactionTagsNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.SavedReactionTagsNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedReactionTags extends TLObject {
      tags: Vector<Raw.TypeSavedReactionTag>;
      hash: long;
      constructor(params: { tags: Vector<Raw.TypeSavedReactionTag>; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SavedReactionTags>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class QuickReplies extends TLObject {
      quickReplies: Vector<Raw.TypeQuickReply>;
      messages: Vector<Raw.TypeMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        quickReplies: Vector<Raw.TypeQuickReply>;
        messages: Vector<Raw.TypeMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.QuickReplies>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class QuickRepliesNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.QuickRepliesNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DialogFilters extends TLObject {
      tagsEnabled?: boolean;
      filters: Vector<Raw.TypeDialogFilter>;
      constructor(params: { tagsEnabled?: boolean; filters: Vector<Raw.TypeDialogFilter> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DialogFilters>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class MyStickers extends TLObject {
      count: int;
      sets: Vector<Raw.TypeStickerSetCovered>;
      constructor(params: { count: int; sets: Vector<Raw.TypeStickerSetCovered> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.MyStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InvitedUsers extends TLObject {
      updates: Raw.TypeUpdates;
      missingInvitees: Vector<Raw.TypeMissingInvitee>;
      constructor(params: {
        updates: Raw.TypeUpdates;
        missingInvitees: Vector<Raw.TypeMissingInvitee>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.InvitedUsers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMessages extends TLObject {
      __response__: Raw.messages.TypeMessages;
      id: Vector<Raw.TypeInputMessage>;
      constructor(params: { id: Vector<Raw.TypeInputMessage> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDialogs extends TLObject {
      __response__: Raw.messages.TypeDialogs;
      excludePinned?: boolean;
      folderId?: int;
      offsetDate: int;
      offsetId: int;
      offsetPeer: Raw.TypeInputPeer;
      limit: int;
      hash: long;
      constructor(params: {
        excludePinned?: boolean;
        folderId?: int;
        offsetDate: int;
        offsetId: int;
        offsetPeer: Raw.TypeInputPeer;
        limit: int;
        hash: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetDialogs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetHistory extends TLObject {
      __response__: Raw.messages.TypeMessages;
      peer: Raw.TypeInputPeer;
      offsetId: int;
      offsetDate: int;
      addOffset: int;
      limit: int;
      maxId: int;
      minId: int;
      hash: long;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        offsetId: int;
        offsetDate: int;
        addOffset: int;
        limit: int;
        maxId: int;
        minId: int;
        hash: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Search extends TLObject {
      __response__: Raw.messages.TypeMessages;
      peer: Raw.TypeInputPeer;
      q: string;
      fromId?: Raw.TypeInputPeer;
      savedPeerId?: Raw.TypeInputPeer;
      savedReaction?: Vector<Raw.TypeReaction>;
      topMsgId?: int;
      filter: Raw.TypeMessagesFilter;
      minDate: int;
      maxDate: int;
      offsetId: int;
      addOffset: int;
      limit: int;
      maxId: int;
      minId: int;
      hash: long;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        q: string;
        fromId?: Raw.TypeInputPeer;
        savedPeerId?: Raw.TypeInputPeer;
        savedReaction?: Vector<Raw.TypeReaction>;
        topMsgId?: int;
        filter: Raw.TypeMessagesFilter;
        minDate: int;
        maxDate: int;
        offsetId: int;
        addOffset: int;
        limit: int;
        maxId: int;
        minId: int;
        hash: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.Search>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReadHistory extends TLObject {
      __response__: Raw.messages.TypeAffectedMessages;
      peer: Raw.TypeInputPeer;
      maxId: int;
      constructor(params: { peer: Raw.TypeInputPeer; maxId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReadHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteHistory extends TLObject {
      __response__: Raw.messages.TypeAffectedHistory;
      justClear?: boolean;
      revoke?: boolean;
      peer: Raw.TypeInputPeer;
      maxId: int;
      minDate?: int;
      maxDate?: int;
      constructor(params: {
        justClear?: boolean;
        revoke?: boolean;
        peer: Raw.TypeInputPeer;
        maxId: int;
        minDate?: int;
        maxDate?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DeleteHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteMessages extends TLObject {
      __response__: Raw.messages.TypeAffectedMessages;
      revoke?: boolean;
      id: Vector<int>;
      constructor(params: { revoke?: boolean; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DeleteMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReceivedMessages extends TLObject {
      __response__: Vector<Raw.TypeReceivedNotifyMessage>;
      maxId: int;
      constructor(params: { maxId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReceivedMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetTyping extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      topMsgId?: int;
      action: Raw.TypeSendMessageAction;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        topMsgId?: int;
        action: Raw.TypeSendMessageAction;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetTyping>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendMessage extends TLObject {
      __response__: Raw.TypeUpdates;
      noWebpage?: boolean;
      silent?: boolean;
      background?: boolean;
      clearDraft?: boolean;
      noforwards?: boolean;
      updateStickersetsOrder?: boolean;
      invertMedia?: boolean;
      peer: Raw.TypeInputPeer;
      replyTo?: Raw.TypeInputReplyTo;
      message: string;
      randomId: long;
      replyMarkup?: Raw.TypeReplyMarkup;
      entities?: Vector<Raw.TypeMessageEntity>;
      scheduleDate?: int;
      sendAs?: Raw.TypeInputPeer;
      quickReplyShortcut?: Raw.TypeInputQuickReplyShortcut;
      constructor(params: {
        noWebpage?: boolean;
        silent?: boolean;
        background?: boolean;
        clearDraft?: boolean;
        noforwards?: boolean;
        updateStickersetsOrder?: boolean;
        invertMedia?: boolean;
        peer: Raw.TypeInputPeer;
        replyTo?: Raw.TypeInputReplyTo;
        message: string;
        randomId: long;
        replyMarkup?: Raw.TypeReplyMarkup;
        entities?: Vector<Raw.TypeMessageEntity>;
        scheduleDate?: int;
        sendAs?: Raw.TypeInputPeer;
        quickReplyShortcut?: Raw.TypeInputQuickReplyShortcut;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendMedia extends TLObject {
      __response__: Raw.TypeUpdates;
      silent?: boolean;
      background?: boolean;
      clearDraft?: boolean;
      noforwards?: boolean;
      updateStickersetsOrder?: boolean;
      invertMedia?: boolean;
      peer: Raw.TypeInputPeer;
      replyTo?: Raw.TypeInputReplyTo;
      media: Raw.TypeInputMedia;
      message: string;
      randomId: long;
      replyMarkup?: Raw.TypeReplyMarkup;
      entities?: Vector<Raw.TypeMessageEntity>;
      scheduleDate?: int;
      sendAs?: Raw.TypeInputPeer;
      quickReplyShortcut?: Raw.TypeInputQuickReplyShortcut;
      constructor(params: {
        silent?: boolean;
        background?: boolean;
        clearDraft?: boolean;
        noforwards?: boolean;
        updateStickersetsOrder?: boolean;
        invertMedia?: boolean;
        peer: Raw.TypeInputPeer;
        replyTo?: Raw.TypeInputReplyTo;
        media: Raw.TypeInputMedia;
        message: string;
        randomId: long;
        replyMarkup?: Raw.TypeReplyMarkup;
        entities?: Vector<Raw.TypeMessageEntity>;
        scheduleDate?: int;
        sendAs?: Raw.TypeInputPeer;
        quickReplyShortcut?: Raw.TypeInputQuickReplyShortcut;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendMedia>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ForwardMessages extends TLObject {
      __response__: Raw.TypeUpdates;
      silent?: boolean;
      background?: boolean;
      withMyScore?: boolean;
      dropAuthor?: boolean;
      dropMediaCaptions?: boolean;
      noforwards?: boolean;
      fromPeer: Raw.TypeInputPeer;
      id: Vector<int>;
      randomId: Vector<long>;
      toPeer: Raw.TypeInputPeer;
      topMsgId?: int;
      scheduleDate?: int;
      sendAs?: Raw.TypeInputPeer;
      quickReplyShortcut?: Raw.TypeInputQuickReplyShortcut;
      constructor(params: {
        silent?: boolean;
        background?: boolean;
        withMyScore?: boolean;
        dropAuthor?: boolean;
        dropMediaCaptions?: boolean;
        noforwards?: boolean;
        fromPeer: Raw.TypeInputPeer;
        id: Vector<int>;
        randomId: Vector<long>;
        toPeer: Raw.TypeInputPeer;
        topMsgId?: int;
        scheduleDate?: int;
        sendAs?: Raw.TypeInputPeer;
        quickReplyShortcut?: Raw.TypeInputQuickReplyShortcut;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ForwardMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReportSpam extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReportSpam>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPeerSettings extends TLObject {
      __response__: Raw.messages.TypePeerSettings;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetPeerSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Report extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      reason: Raw.TypeReportReason;
      message: string;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        id: Vector<int>;
        reason: Raw.TypeReportReason;
        message: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.Report>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetChats extends TLObject {
      __response__: Raw.messages.TypeChats;
      id: Vector<long>;
      constructor(params: { id: Vector<long> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetChats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetFullChat extends TLObject {
      __response__: Raw.messages.TypeChatFull;
      chatId: long;
      constructor(params: { chatId: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetFullChat>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditChatTitle extends TLObject {
      __response__: Raw.TypeUpdates;
      chatId: long;
      title: string;
      constructor(params: { chatId: long; title: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.EditChatTitle>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditChatPhoto extends TLObject {
      __response__: Raw.TypeUpdates;
      chatId: long;
      photo: Raw.TypeInputChatPhoto;
      constructor(params: { chatId: long; photo: Raw.TypeInputChatPhoto });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.EditChatPhoto>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AddChatUser extends TLObject {
      __response__: Raw.messages.TypeInvitedUsers;
      chatId: long;
      userId: Raw.TypeInputUser;
      fwdLimit: int;
      constructor(params: { chatId: long; userId: Raw.TypeInputUser; fwdLimit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.AddChatUser>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteChatUser extends TLObject {
      __response__: Raw.TypeUpdates;
      revokeHistory?: boolean;
      chatId: long;
      userId: Raw.TypeInputUser;
      constructor(params: { revokeHistory?: boolean; chatId: long; userId: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DeleteChatUser>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CreateChat extends TLObject {
      __response__: Raw.messages.TypeInvitedUsers;
      users: Vector<Raw.TypeInputUser>;
      title: string;
      ttlPeriod?: int;
      constructor(params: { users: Vector<Raw.TypeInputUser>; title: string; ttlPeriod?: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.CreateChat>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDhConfig extends TLObject {
      __response__: Raw.messages.TypeDhConfig;
      version: int;
      randomLength: int;
      constructor(params: { version: int; randomLength: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetDhConfig>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RequestEncryption extends TLObject {
      __response__: Raw.TypeEncryptedChat;
      userId: Raw.TypeInputUser;
      randomId: int;
      gA: bytes;
      constructor(params: { userId: Raw.TypeInputUser; randomId: int; gA: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.RequestEncryption>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AcceptEncryption extends TLObject {
      __response__: Raw.TypeEncryptedChat;
      peer: Raw.TypeInputEncryptedChat;
      gB: bytes;
      keyFingerprint: long;
      constructor(params: { peer: Raw.TypeInputEncryptedChat; gB: bytes; keyFingerprint: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.AcceptEncryption>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DiscardEncryption extends TLObject {
      __response__: Bool;
      deleteHistory?: boolean;
      chatId: int;
      constructor(params: { deleteHistory?: boolean; chatId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DiscardEncryption>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetEncryptedTyping extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputEncryptedChat;
      typing: Bool;
      constructor(params: { peer: Raw.TypeInputEncryptedChat; typing: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetEncryptedTyping>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReadEncryptedHistory extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputEncryptedChat;
      maxDate: int;
      constructor(params: { peer: Raw.TypeInputEncryptedChat; maxDate: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReadEncryptedHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendEncrypted extends TLObject {
      __response__: Raw.messages.TypeSentEncryptedMessage;
      silent?: boolean;
      peer: Raw.TypeInputEncryptedChat;
      randomId: long;
      data: bytes;
      constructor(params: {
        silent?: boolean;
        peer: Raw.TypeInputEncryptedChat;
        randomId: long;
        data: bytes;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendEncrypted>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendEncryptedFile extends TLObject {
      __response__: Raw.messages.TypeSentEncryptedMessage;
      silent?: boolean;
      peer: Raw.TypeInputEncryptedChat;
      randomId: long;
      data: bytes;
      file: Raw.TypeInputEncryptedFile;
      constructor(params: {
        silent?: boolean;
        peer: Raw.TypeInputEncryptedChat;
        randomId: long;
        data: bytes;
        file: Raw.TypeInputEncryptedFile;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendEncryptedFile>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendEncryptedService extends TLObject {
      __response__: Raw.messages.TypeSentEncryptedMessage;
      peer: Raw.TypeInputEncryptedChat;
      randomId: long;
      data: bytes;
      constructor(params: { peer: Raw.TypeInputEncryptedChat; randomId: long; data: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendEncryptedService>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReceivedQueue extends TLObject {
      __response__: Vector<long>;
      maxQts: int;
      constructor(params: { maxQts: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReceivedQueue>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReportEncryptedSpam extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputEncryptedChat;
      constructor(params: { peer: Raw.TypeInputEncryptedChat });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReportEncryptedSpam>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReadMessageContents extends TLObject {
      __response__: Raw.messages.TypeAffectedMessages;
      id: Vector<int>;
      constructor(params: { id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReadMessageContents>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStickers extends TLObject {
      __response__: Raw.messages.TypeStickers;
      emoticon: string;
      hash: long;
      constructor(params: { emoticon: string; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAllStickers extends TLObject {
      __response__: Raw.messages.TypeAllStickers;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetAllStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetWebPagePreview extends TLObject {
      __response__: Raw.TypeMessageMedia;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      constructor(params: { message: string; entities?: Vector<Raw.TypeMessageEntity> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetWebPagePreview>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportChatInvite extends TLObject {
      __response__: Raw.TypeExportedChatInvite;
      legacyRevokePermanent?: boolean;
      requestNeeded?: boolean;
      peer: Raw.TypeInputPeer;
      expireDate?: int;
      usageLimit?: int;
      title?: string;
      constructor(params: {
        legacyRevokePermanent?: boolean;
        requestNeeded?: boolean;
        peer: Raw.TypeInputPeer;
        expireDate?: int;
        usageLimit?: int;
        title?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ExportChatInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckChatInvite extends TLObject {
      __response__: Raw.TypeChatInvite;
      hash: string;
      constructor(params: { hash: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.CheckChatInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ImportChatInvite extends TLObject {
      __response__: Raw.TypeUpdates;
      hash: string;
      constructor(params: { hash: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ImportChatInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStickerSet extends TLObject {
      __response__: Raw.messages.TypeStickerSet;
      stickerset: Raw.TypeInputStickerSet;
      hash: int;
      constructor(params: { stickerset: Raw.TypeInputStickerSet; hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetStickerSet>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InstallStickerSet extends TLObject {
      __response__: Raw.messages.TypeStickerSetInstallResult;
      stickerset: Raw.TypeInputStickerSet;
      archived: Bool;
      constructor(params: { stickerset: Raw.TypeInputStickerSet; archived: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.InstallStickerSet>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UninstallStickerSet extends TLObject {
      __response__: Bool;
      stickerset: Raw.TypeInputStickerSet;
      constructor(params: { stickerset: Raw.TypeInputStickerSet });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.UninstallStickerSet>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StartBot extends TLObject {
      __response__: Raw.TypeUpdates;
      bot: Raw.TypeInputUser;
      peer: Raw.TypeInputPeer;
      randomId: long;
      startParam: string;
      constructor(params: {
        bot: Raw.TypeInputUser;
        peer: Raw.TypeInputPeer;
        randomId: long;
        startParam: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.StartBot>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMessagesViews extends TLObject {
      __response__: Raw.messages.TypeMessageViews;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      increment: Bool;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int>; increment: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetMessagesViews>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditChatAdmin extends TLObject {
      __response__: Bool;
      chatId: long;
      userId: Raw.TypeInputUser;
      isAdmin: Bool;
      constructor(params: { chatId: long; userId: Raw.TypeInputUser; isAdmin: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.EditChatAdmin>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class MigrateChat extends TLObject {
      __response__: Raw.TypeUpdates;
      chatId: long;
      constructor(params: { chatId: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.MigrateChat>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SearchGlobal extends TLObject {
      __response__: Raw.messages.TypeMessages;
      broadcastsOnly?: boolean;
      folderId?: int;
      q: string;
      filter: Raw.TypeMessagesFilter;
      minDate: int;
      maxDate: int;
      offsetRate: int;
      offsetPeer: Raw.TypeInputPeer;
      offsetId: int;
      limit: int;
      constructor(params: {
        broadcastsOnly?: boolean;
        folderId?: int;
        q: string;
        filter: Raw.TypeMessagesFilter;
        minDate: int;
        maxDate: int;
        offsetRate: int;
        offsetPeer: Raw.TypeInputPeer;
        offsetId: int;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SearchGlobal>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReorderStickerSets extends TLObject {
      __response__: Bool;
      masks?: boolean;
      emojis?: boolean;
      order: Vector<long>;
      constructor(params: { masks?: boolean; emojis?: boolean; order: Vector<long> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReorderStickerSets>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDocumentByHash extends TLObject {
      __response__: Raw.TypeDocument;
      sha256: bytes;
      size: long;
      mimeType: string;
      constructor(params: { sha256: bytes; size: long; mimeType: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetDocumentByHash>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSavedGifs extends TLObject {
      __response__: Raw.messages.TypeSavedGifs;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetSavedGifs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveGif extends TLObject {
      __response__: Bool;
      id: Raw.TypeInputDocument;
      unsave: Bool;
      constructor(params: { id: Raw.TypeInputDocument; unsave: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SaveGif>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetInlineBotResults extends TLObject {
      __response__: Raw.messages.TypeBotResults;
      bot: Raw.TypeInputUser;
      peer: Raw.TypeInputPeer;
      geoPoint?: Raw.TypeInputGeoPoint;
      query: string;
      offset: string;
      constructor(params: {
        bot: Raw.TypeInputUser;
        peer: Raw.TypeInputPeer;
        geoPoint?: Raw.TypeInputGeoPoint;
        query: string;
        offset: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetInlineBotResults>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetInlineBotResults extends TLObject {
      __response__: Bool;
      gallery?: boolean;
      private?: boolean;
      queryId: long;
      results: Vector<Raw.TypeInputBotInlineResult>;
      cacheTime: int;
      nextOffset?: string;
      switchPm?: Raw.TypeInlineBotSwitchPM;
      switchWebview?: Raw.TypeInlineBotWebView;
      constructor(params: {
        gallery?: boolean;
        private?: boolean;
        queryId: long;
        results: Vector<Raw.TypeInputBotInlineResult>;
        cacheTime: int;
        nextOffset?: string;
        switchPm?: Raw.TypeInlineBotSwitchPM;
        switchWebview?: Raw.TypeInlineBotWebView;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetInlineBotResults>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendInlineBotResult extends TLObject {
      __response__: Raw.TypeUpdates;
      silent?: boolean;
      background?: boolean;
      clearDraft?: boolean;
      hideVia?: boolean;
      peer: Raw.TypeInputPeer;
      replyTo?: Raw.TypeInputReplyTo;
      randomId: long;
      queryId: long;
      id: string;
      scheduleDate?: int;
      sendAs?: Raw.TypeInputPeer;
      quickReplyShortcut?: Raw.TypeInputQuickReplyShortcut;
      constructor(params: {
        silent?: boolean;
        background?: boolean;
        clearDraft?: boolean;
        hideVia?: boolean;
        peer: Raw.TypeInputPeer;
        replyTo?: Raw.TypeInputReplyTo;
        randomId: long;
        queryId: long;
        id: string;
        scheduleDate?: int;
        sendAs?: Raw.TypeInputPeer;
        quickReplyShortcut?: Raw.TypeInputQuickReplyShortcut;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendInlineBotResult>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMessageEditData extends TLObject {
      __response__: Raw.messages.TypeMessageEditData;
      peer: Raw.TypeInputPeer;
      id: int;
      constructor(params: { peer: Raw.TypeInputPeer; id: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetMessageEditData>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditMessage extends TLObject {
      __response__: Raw.TypeUpdates;
      noWebpage?: boolean;
      invertMedia?: boolean;
      peer: Raw.TypeInputPeer;
      id: int;
      message?: string;
      media?: Raw.TypeInputMedia;
      replyMarkup?: Raw.TypeReplyMarkup;
      entities?: Vector<Raw.TypeMessageEntity>;
      scheduleDate?: int;
      quickReplyShortcutId?: int;
      constructor(params: {
        noWebpage?: boolean;
        invertMedia?: boolean;
        peer: Raw.TypeInputPeer;
        id: int;
        message?: string;
        media?: Raw.TypeInputMedia;
        replyMarkup?: Raw.TypeReplyMarkup;
        entities?: Vector<Raw.TypeMessageEntity>;
        scheduleDate?: int;
        quickReplyShortcutId?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.EditMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditInlineBotMessage extends TLObject {
      __response__: Bool;
      noWebpage?: boolean;
      invertMedia?: boolean;
      id: Raw.TypeInputBotInlineMessageID;
      message?: string;
      media?: Raw.TypeInputMedia;
      replyMarkup?: Raw.TypeReplyMarkup;
      entities?: Vector<Raw.TypeMessageEntity>;
      constructor(params: {
        noWebpage?: boolean;
        invertMedia?: boolean;
        id: Raw.TypeInputBotInlineMessageID;
        message?: string;
        media?: Raw.TypeInputMedia;
        replyMarkup?: Raw.TypeReplyMarkup;
        entities?: Vector<Raw.TypeMessageEntity>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.EditInlineBotMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBotCallbackAnswer extends TLObject {
      __response__: Raw.messages.TypeBotCallbackAnswer;
      game?: boolean;
      peer: Raw.TypeInputPeer;
      msgId: int;
      data?: bytes;
      password?: Raw.TypeInputCheckPasswordSRP;
      constructor(params: {
        game?: boolean;
        peer: Raw.TypeInputPeer;
        msgId: int;
        data?: bytes;
        password?: Raw.TypeInputCheckPasswordSRP;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetBotCallbackAnswer>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetBotCallbackAnswer extends TLObject {
      __response__: Bool;
      alert?: boolean;
      queryId: long;
      message?: string;
      url?: string;
      cacheTime: int;
      constructor(params: {
        alert?: boolean;
        queryId: long;
        message?: string;
        url?: string;
        cacheTime: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetBotCallbackAnswer>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPeerDialogs extends TLObject {
      __response__: Raw.messages.TypePeerDialogs;
      peers: Vector<Raw.TypeInputDialogPeer>;
      constructor(params: { peers: Vector<Raw.TypeInputDialogPeer> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetPeerDialogs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveDraft extends TLObject {
      __response__: Bool;
      noWebpage?: boolean;
      invertMedia?: boolean;
      replyTo?: Raw.TypeInputReplyTo;
      peer: Raw.TypeInputPeer;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      media?: Raw.TypeInputMedia;
      constructor(params: {
        noWebpage?: boolean;
        invertMedia?: boolean;
        replyTo?: Raw.TypeInputReplyTo;
        peer: Raw.TypeInputPeer;
        message: string;
        entities?: Vector<Raw.TypeMessageEntity>;
        media?: Raw.TypeInputMedia;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SaveDraft>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAllDrafts extends TLObject {
      __response__: Raw.TypeUpdates;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetAllDrafts>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetFeaturedStickers extends TLObject {
      __response__: Raw.messages.TypeFeaturedStickers;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetFeaturedStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReadFeaturedStickers extends TLObject {
      __response__: Bool;
      id: Vector<long>;
      constructor(params: { id: Vector<long> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReadFeaturedStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetRecentStickers extends TLObject {
      __response__: Raw.messages.TypeRecentStickers;
      attached?: boolean;
      hash: long;
      constructor(params: { attached?: boolean; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetRecentStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveRecentSticker extends TLObject {
      __response__: Bool;
      attached?: boolean;
      id: Raw.TypeInputDocument;
      unsave: Bool;
      constructor(params: { attached?: boolean; id: Raw.TypeInputDocument; unsave: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SaveRecentSticker>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ClearRecentStickers extends TLObject {
      __response__: Bool;
      attached?: boolean;
      constructor(params: { attached?: boolean });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ClearRecentStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetArchivedStickers extends TLObject {
      __response__: Raw.messages.TypeArchivedStickers;
      masks?: boolean;
      emojis?: boolean;
      offsetId: long;
      limit: int;
      constructor(params: { masks?: boolean; emojis?: boolean; offsetId: long; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetArchivedStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMaskStickers extends TLObject {
      __response__: Raw.messages.TypeAllStickers;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetMaskStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAttachedStickers extends TLObject {
      __response__: Vector<Raw.TypeStickerSetCovered>;
      media: Raw.TypeInputStickeredMedia;
      constructor(params: { media: Raw.TypeInputStickeredMedia });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetAttachedStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetGameScore extends TLObject {
      __response__: Raw.TypeUpdates;
      editMessage?: boolean;
      force?: boolean;
      peer: Raw.TypeInputPeer;
      id: int;
      userId: Raw.TypeInputUser;
      score: int;
      constructor(params: {
        editMessage?: boolean;
        force?: boolean;
        peer: Raw.TypeInputPeer;
        id: int;
        userId: Raw.TypeInputUser;
        score: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetGameScore>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetInlineGameScore extends TLObject {
      __response__: Bool;
      editMessage?: boolean;
      force?: boolean;
      id: Raw.TypeInputBotInlineMessageID;
      userId: Raw.TypeInputUser;
      score: int;
      constructor(params: {
        editMessage?: boolean;
        force?: boolean;
        id: Raw.TypeInputBotInlineMessageID;
        userId: Raw.TypeInputUser;
        score: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetInlineGameScore>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetGameHighScores extends TLObject {
      __response__: Raw.messages.TypeHighScores;
      peer: Raw.TypeInputPeer;
      id: int;
      userId: Raw.TypeInputUser;
      constructor(params: { peer: Raw.TypeInputPeer; id: int; userId: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetGameHighScores>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetInlineGameHighScores extends TLObject {
      __response__: Raw.messages.TypeHighScores;
      id: Raw.TypeInputBotInlineMessageID;
      userId: Raw.TypeInputUser;
      constructor(params: { id: Raw.TypeInputBotInlineMessageID; userId: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetInlineGameHighScores>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetCommonChats extends TLObject {
      __response__: Raw.messages.TypeChats;
      userId: Raw.TypeInputUser;
      maxId: long;
      limit: int;
      constructor(params: { userId: Raw.TypeInputUser; maxId: long; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetCommonChats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetWebPage extends TLObject {
      __response__: Raw.messages.TypeWebPage;
      url: string;
      hash: int;
      constructor(params: { url: string; hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetWebPage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleDialogPin extends TLObject {
      __response__: Bool;
      pinned?: boolean;
      peer: Raw.TypeInputDialogPeer;
      constructor(params: { pinned?: boolean; peer: Raw.TypeInputDialogPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ToggleDialogPin>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReorderPinnedDialogs extends TLObject {
      __response__: Bool;
      force?: boolean;
      folderId: int;
      order: Vector<Raw.TypeInputDialogPeer>;
      constructor(params: {
        force?: boolean;
        folderId: int;
        order: Vector<Raw.TypeInputDialogPeer>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReorderPinnedDialogs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPinnedDialogs extends TLObject {
      __response__: Raw.messages.TypePeerDialogs;
      folderId: int;
      constructor(params: { folderId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetPinnedDialogs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetBotShippingResults extends TLObject {
      __response__: Bool;
      queryId: long;
      error?: string;
      shippingOptions?: Vector<Raw.TypeShippingOption>;
      constructor(params: {
        queryId: long;
        error?: string;
        shippingOptions?: Vector<Raw.TypeShippingOption>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetBotShippingResults>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetBotPrecheckoutResults extends TLObject {
      __response__: Bool;
      success?: boolean;
      queryId: long;
      error?: string;
      constructor(params: { success?: boolean; queryId: long; error?: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetBotPrecheckoutResults>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UploadMedia extends TLObject {
      __response__: Raw.TypeMessageMedia;
      businessConnectionId?: string;
      peer: Raw.TypeInputPeer;
      media: Raw.TypeInputMedia;
      constructor(params: {
        businessConnectionId?: string;
        peer: Raw.TypeInputPeer;
        media: Raw.TypeInputMedia;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.UploadMedia>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendScreenshotNotification extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      replyTo: Raw.TypeInputReplyTo;
      randomId: long;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        replyTo: Raw.TypeInputReplyTo;
        randomId: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.SendScreenshotNotification>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetFavedStickers extends TLObject {
      __response__: Raw.messages.TypeFavedStickers;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetFavedStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FaveSticker extends TLObject {
      __response__: Bool;
      id: Raw.TypeInputDocument;
      unfave: Bool;
      constructor(params: { id: Raw.TypeInputDocument; unfave: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.FaveSticker>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetUnreadMentions extends TLObject {
      __response__: Raw.messages.TypeMessages;
      peer: Raw.TypeInputPeer;
      topMsgId?: int;
      offsetId: int;
      addOffset: int;
      limit: int;
      maxId: int;
      minId: int;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        topMsgId?: int;
        offsetId: int;
        addOffset: int;
        limit: int;
        maxId: int;
        minId: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetUnreadMentions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReadMentions extends TLObject {
      __response__: Raw.messages.TypeAffectedHistory;
      peer: Raw.TypeInputPeer;
      topMsgId?: int;
      constructor(params: { peer: Raw.TypeInputPeer; topMsgId?: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReadMentions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetRecentLocations extends TLObject {
      __response__: Raw.messages.TypeMessages;
      peer: Raw.TypeInputPeer;
      limit: int;
      hash: long;
      constructor(params: { peer: Raw.TypeInputPeer; limit: int; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetRecentLocations>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendMultiMedia extends TLObject {
      __response__: Raw.TypeUpdates;
      silent?: boolean;
      background?: boolean;
      clearDraft?: boolean;
      noforwards?: boolean;
      updateStickersetsOrder?: boolean;
      invertMedia?: boolean;
      peer: Raw.TypeInputPeer;
      replyTo?: Raw.TypeInputReplyTo;
      multiMedia: Vector<Raw.TypeInputSingleMedia>;
      scheduleDate?: int;
      sendAs?: Raw.TypeInputPeer;
      quickReplyShortcut?: Raw.TypeInputQuickReplyShortcut;
      constructor(params: {
        silent?: boolean;
        background?: boolean;
        clearDraft?: boolean;
        noforwards?: boolean;
        updateStickersetsOrder?: boolean;
        invertMedia?: boolean;
        peer: Raw.TypeInputPeer;
        replyTo?: Raw.TypeInputReplyTo;
        multiMedia: Vector<Raw.TypeInputSingleMedia>;
        scheduleDate?: int;
        sendAs?: Raw.TypeInputPeer;
        quickReplyShortcut?: Raw.TypeInputQuickReplyShortcut;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendMultiMedia>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UploadEncryptedFile extends TLObject {
      __response__: Raw.TypeEncryptedFile;
      peer: Raw.TypeInputEncryptedChat;
      file: Raw.TypeInputEncryptedFile;
      constructor(params: { peer: Raw.TypeInputEncryptedChat; file: Raw.TypeInputEncryptedFile });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.UploadEncryptedFile>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SearchStickerSets extends TLObject {
      __response__: Raw.messages.TypeFoundStickerSets;
      excludeFeatured?: boolean;
      q: string;
      hash: long;
      constructor(params: { excludeFeatured?: boolean; q: string; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SearchStickerSets>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSplitRanges extends TLObject {
      __response__: Vector<Raw.TypeMessageRange>;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetSplitRanges>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class MarkDialogUnread extends TLObject {
      __response__: Bool;
      unread?: boolean;
      peer: Raw.TypeInputDialogPeer;
      constructor(params: { unread?: boolean; peer: Raw.TypeInputDialogPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.MarkDialogUnread>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDialogUnreadMarks extends TLObject {
      __response__: Vector<Raw.TypeDialogPeer>;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetDialogUnreadMarks>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ClearAllDrafts extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ClearAllDrafts>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdatePinnedMessage extends TLObject {
      __response__: Raw.TypeUpdates;
      silent?: boolean;
      unpin?: boolean;
      pmOneside?: boolean;
      peer: Raw.TypeInputPeer;
      id: int;
      constructor(params: {
        silent?: boolean;
        unpin?: boolean;
        pmOneside?: boolean;
        peer: Raw.TypeInputPeer;
        id: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.UpdatePinnedMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendVote extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      msgId: int;
      options: Vector<bytes>;
      constructor(params: { peer: Raw.TypeInputPeer; msgId: int; options: Vector<bytes> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendVote>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPollResults extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      msgId: int;
      constructor(params: { peer: Raw.TypeInputPeer; msgId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetPollResults>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetOnlines extends TLObject {
      __response__: Raw.TypeChatOnlines;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetOnlines>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditChatAbout extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      about: string;
      constructor(params: { peer: Raw.TypeInputPeer; about: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.EditChatAbout>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditChatDefaultBannedRights extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      bannedRights: Raw.TypeChatBannedRights;
      constructor(params: { peer: Raw.TypeInputPeer; bannedRights: Raw.TypeChatBannedRights });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.EditChatDefaultBannedRights>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetEmojiKeywords extends TLObject {
      __response__: Raw.TypeEmojiKeywordsDifference;
      langCode: string;
      constructor(params: { langCode: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetEmojiKeywords>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetEmojiKeywordsDifference extends TLObject {
      __response__: Raw.TypeEmojiKeywordsDifference;
      langCode: string;
      fromVersion: int;
      constructor(params: { langCode: string; fromVersion: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.GetEmojiKeywordsDifference>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetEmojiKeywordsLanguages extends TLObject {
      __response__: Vector<Raw.TypeEmojiLanguage>;
      langCodes: Vector<string>;
      constructor(params: { langCodes: Vector<string> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetEmojiKeywordsLanguages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetEmojiURL extends TLObject {
      __response__: Raw.TypeEmojiURL;
      langCode: string;
      constructor(params: { langCode: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetEmojiURL>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSearchCounters extends TLObject {
      __response__: Vector<Raw.messages.TypeSearchCounter>;
      peer: Raw.TypeInputPeer;
      savedPeerId?: Raw.TypeInputPeer;
      topMsgId?: int;
      filters: Vector<Raw.TypeMessagesFilter>;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        savedPeerId?: Raw.TypeInputPeer;
        topMsgId?: int;
        filters: Vector<Raw.TypeMessagesFilter>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetSearchCounters>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RequestUrlAuth extends TLObject {
      __response__: Raw.TypeUrlAuthResult;
      peer?: Raw.TypeInputPeer;
      msgId?: int;
      buttonId?: int;
      url?: string;
      constructor(params: { peer?: Raw.TypeInputPeer; msgId?: int; buttonId?: int; url?: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.RequestUrlAuth>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AcceptUrlAuth extends TLObject {
      __response__: Raw.TypeUrlAuthResult;
      writeAllowed?: boolean;
      peer?: Raw.TypeInputPeer;
      msgId?: int;
      buttonId?: int;
      url?: string;
      constructor(params: {
        writeAllowed?: boolean;
        peer?: Raw.TypeInputPeer;
        msgId?: int;
        buttonId?: int;
        url?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.AcceptUrlAuth>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class HidePeerSettingsBar extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.HidePeerSettingsBar>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetScheduledHistory extends TLObject {
      __response__: Raw.messages.TypeMessages;
      peer: Raw.TypeInputPeer;
      hash: long;
      constructor(params: { peer: Raw.TypeInputPeer; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetScheduledHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetScheduledMessages extends TLObject {
      __response__: Raw.messages.TypeMessages;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetScheduledMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendScheduledMessages extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendScheduledMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteScheduledMessages extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DeleteScheduledMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPollVotes extends TLObject {
      __response__: Raw.messages.TypeVotesList;
      peer: Raw.TypeInputPeer;
      id: int;
      option?: bytes;
      offset?: string;
      limit: int;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        id: int;
        option?: bytes;
        offset?: string;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetPollVotes>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleStickerSets extends TLObject {
      __response__: Bool;
      uninstall?: boolean;
      archive?: boolean;
      unarchive?: boolean;
      stickersets: Vector<Raw.TypeInputStickerSet>;
      constructor(params: {
        uninstall?: boolean;
        archive?: boolean;
        unarchive?: boolean;
        stickersets: Vector<Raw.TypeInputStickerSet>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ToggleStickerSets>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDialogFilters extends TLObject {
      __response__: Raw.messages.TypeDialogFilters;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetDialogFilters>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSuggestedDialogFilters extends TLObject {
      __response__: Vector<Raw.TypeDialogFilterSuggested>;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetSuggestedDialogFilters>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateDialogFilter extends TLObject {
      __response__: Bool;
      id: int;
      filter?: Raw.TypeDialogFilter;
      constructor(params: { id: int; filter?: Raw.TypeDialogFilter });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.UpdateDialogFilter>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateDialogFiltersOrder extends TLObject {
      __response__: Bool;
      order: Vector<int>;
      constructor(params: { order: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.UpdateDialogFiltersOrder>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetOldFeaturedStickers extends TLObject {
      __response__: Raw.messages.TypeFeaturedStickers;
      offset: int;
      limit: int;
      hash: long;
      constructor(params: { offset: int; limit: int; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetOldFeaturedStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetReplies extends TLObject {
      __response__: Raw.messages.TypeMessages;
      peer: Raw.TypeInputPeer;
      msgId: int;
      offsetId: int;
      offsetDate: int;
      addOffset: int;
      limit: int;
      maxId: int;
      minId: int;
      hash: long;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        msgId: int;
        offsetId: int;
        offsetDate: int;
        addOffset: int;
        limit: int;
        maxId: int;
        minId: int;
        hash: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetReplies>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDiscussionMessage extends TLObject {
      __response__: Raw.messages.TypeDiscussionMessage;
      peer: Raw.TypeInputPeer;
      msgId: int;
      constructor(params: { peer: Raw.TypeInputPeer; msgId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetDiscussionMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReadDiscussion extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      msgId: int;
      readMaxId: int;
      constructor(params: { peer: Raw.TypeInputPeer; msgId: int; readMaxId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReadDiscussion>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UnpinAllMessages extends TLObject {
      __response__: Raw.messages.TypeAffectedHistory;
      peer: Raw.TypeInputPeer;
      topMsgId?: int;
      constructor(params: { peer: Raw.TypeInputPeer; topMsgId?: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.UnpinAllMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteChat extends TLObject {
      __response__: Bool;
      chatId: long;
      constructor(params: { chatId: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DeleteChat>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeletePhoneCallHistory extends TLObject {
      __response__: Raw.messages.TypeAffectedFoundMessages;
      revoke?: boolean;
      constructor(params: { revoke?: boolean });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DeletePhoneCallHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckHistoryImport extends TLObject {
      __response__: Raw.messages.TypeHistoryImportParsed;
      importHead: string;
      constructor(params: { importHead: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.CheckHistoryImport>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InitHistoryImport extends TLObject {
      __response__: Raw.messages.TypeHistoryImport;
      peer: Raw.TypeInputPeer;
      file: Raw.TypeInputFile;
      mediaCount: int;
      constructor(params: { peer: Raw.TypeInputPeer; file: Raw.TypeInputFile; mediaCount: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.InitHistoryImport>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UploadImportedMedia extends TLObject {
      __response__: Raw.TypeMessageMedia;
      peer: Raw.TypeInputPeer;
      importId: long;
      fileName: string;
      media: Raw.TypeInputMedia;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        importId: long;
        fileName: string;
        media: Raw.TypeInputMedia;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.UploadImportedMedia>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StartHistoryImport extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      importId: long;
      constructor(params: { peer: Raw.TypeInputPeer; importId: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.StartHistoryImport>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetExportedChatInvites extends TLObject {
      __response__: Raw.messages.TypeExportedChatInvites;
      revoked?: boolean;
      peer: Raw.TypeInputPeer;
      adminId: Raw.TypeInputUser;
      offsetDate?: int;
      offsetLink?: string;
      limit: int;
      constructor(params: {
        revoked?: boolean;
        peer: Raw.TypeInputPeer;
        adminId: Raw.TypeInputUser;
        offsetDate?: int;
        offsetLink?: string;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetExportedChatInvites>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetExportedChatInvite extends TLObject {
      __response__: Raw.messages.TypeExportedChatInvite;
      peer: Raw.TypeInputPeer;
      link: string;
      constructor(params: { peer: Raw.TypeInputPeer; link: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetExportedChatInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditExportedChatInvite extends TLObject {
      __response__: Raw.messages.TypeExportedChatInvite;
      revoked?: boolean;
      peer: Raw.TypeInputPeer;
      link: string;
      expireDate?: int;
      usageLimit?: int;
      requestNeeded?: Bool;
      title?: string;
      constructor(params: {
        revoked?: boolean;
        peer: Raw.TypeInputPeer;
        link: string;
        expireDate?: int;
        usageLimit?: int;
        requestNeeded?: Bool;
        title?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.EditExportedChatInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteRevokedExportedChatInvites extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      adminId: Raw.TypeInputUser;
      constructor(params: { peer: Raw.TypeInputPeer; adminId: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.DeleteRevokedExportedChatInvites>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteExportedChatInvite extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      link: string;
      constructor(params: { peer: Raw.TypeInputPeer; link: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DeleteExportedChatInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAdminsWithInvites extends TLObject {
      __response__: Raw.messages.TypeChatAdminsWithInvites;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetAdminsWithInvites>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetChatInviteImporters extends TLObject {
      __response__: Raw.messages.TypeChatInviteImporters;
      requested?: boolean;
      peer: Raw.TypeInputPeer;
      link?: string;
      q?: string;
      offsetDate: int;
      offsetUser: Raw.TypeInputUser;
      limit: int;
      constructor(params: {
        requested?: boolean;
        peer: Raw.TypeInputPeer;
        link?: string;
        q?: string;
        offsetDate: int;
        offsetUser: Raw.TypeInputUser;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetChatInviteImporters>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetHistoryTTL extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      period: int;
      constructor(params: { peer: Raw.TypeInputPeer; period: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetHistoryTTL>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckHistoryImportPeer extends TLObject {
      __response__: Raw.messages.TypeCheckedHistoryImportPeer;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.CheckHistoryImportPeer>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetChatTheme extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      emoticon: string;
      constructor(params: { peer: Raw.TypeInputPeer; emoticon: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetChatTheme>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMessageReadParticipants extends TLObject {
      __response__: Vector<Raw.TypeReadParticipantDate>;
      peer: Raw.TypeInputPeer;
      msgId: int;
      constructor(params: { peer: Raw.TypeInputPeer; msgId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.GetMessageReadParticipants>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSearchResultsCalendar extends TLObject {
      __response__: Raw.messages.TypeSearchResultsCalendar;
      peer: Raw.TypeInputPeer;
      savedPeerId?: Raw.TypeInputPeer;
      filter: Raw.TypeMessagesFilter;
      offsetId: int;
      offsetDate: int;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        savedPeerId?: Raw.TypeInputPeer;
        filter: Raw.TypeMessagesFilter;
        offsetId: int;
        offsetDate: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetSearchResultsCalendar>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSearchResultsPositions extends TLObject {
      __response__: Raw.messages.TypeSearchResultsPositions;
      peer: Raw.TypeInputPeer;
      savedPeerId?: Raw.TypeInputPeer;
      filter: Raw.TypeMessagesFilter;
      offsetId: int;
      limit: int;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        savedPeerId?: Raw.TypeInputPeer;
        filter: Raw.TypeMessagesFilter;
        offsetId: int;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetSearchResultsPositions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class HideChatJoinRequest extends TLObject {
      __response__: Raw.TypeUpdates;
      approved?: boolean;
      peer: Raw.TypeInputPeer;
      userId: Raw.TypeInputUser;
      constructor(params: {
        approved?: boolean;
        peer: Raw.TypeInputPeer;
        userId: Raw.TypeInputUser;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.HideChatJoinRequest>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class HideAllChatJoinRequests extends TLObject {
      __response__: Raw.TypeUpdates;
      approved?: boolean;
      peer: Raw.TypeInputPeer;
      link?: string;
      constructor(params: { approved?: boolean; peer: Raw.TypeInputPeer; link?: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.HideAllChatJoinRequests>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleNoForwards extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      enabled: Bool;
      constructor(params: { peer: Raw.TypeInputPeer; enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ToggleNoForwards>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveDefaultSendAs extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      sendAs: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer; sendAs: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SaveDefaultSendAs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendReaction extends TLObject {
      __response__: Raw.TypeUpdates;
      big?: boolean;
      addToRecent?: boolean;
      peer: Raw.TypeInputPeer;
      msgId: int;
      reaction?: Vector<Raw.TypeReaction>;
      constructor(params: {
        big?: boolean;
        addToRecent?: boolean;
        peer: Raw.TypeInputPeer;
        msgId: int;
        reaction?: Vector<Raw.TypeReaction>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendReaction>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMessagesReactions extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetMessagesReactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMessageReactionsList extends TLObject {
      __response__: Raw.messages.TypeMessageReactionsList;
      peer: Raw.TypeInputPeer;
      id: int;
      reaction?: Raw.TypeReaction;
      offset?: string;
      limit: int;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        id: int;
        reaction?: Raw.TypeReaction;
        offset?: string;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetMessageReactionsList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetChatAvailableReactions extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      availableReactions: Raw.TypeChatReactions;
      reactionsLimit?: int;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        availableReactions: Raw.TypeChatReactions;
        reactionsLimit?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetChatAvailableReactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAvailableReactions extends TLObject {
      __response__: Raw.messages.TypeAvailableReactions;
      hash: int;
      constructor(params: { hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetAvailableReactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetDefaultReaction extends TLObject {
      __response__: Bool;
      reaction: Raw.TypeReaction;
      constructor(params: { reaction: Raw.TypeReaction });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetDefaultReaction>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TranslateText extends TLObject {
      __response__: Raw.messages.TypeTranslatedText;
      peer?: Raw.TypeInputPeer;
      id?: Vector<int>;
      text?: Vector<Raw.TypeTextWithEntities>;
      toLang: string;
      constructor(params: {
        peer?: Raw.TypeInputPeer;
        id?: Vector<int>;
        text?: Vector<Raw.TypeTextWithEntities>;
        toLang: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.TranslateText>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetUnreadReactions extends TLObject {
      __response__: Raw.messages.TypeMessages;
      peer: Raw.TypeInputPeer;
      topMsgId?: int;
      offsetId: int;
      addOffset: int;
      limit: int;
      maxId: int;
      minId: int;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        topMsgId?: int;
        offsetId: int;
        addOffset: int;
        limit: int;
        maxId: int;
        minId: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetUnreadReactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReadReactions extends TLObject {
      __response__: Raw.messages.TypeAffectedHistory;
      peer: Raw.TypeInputPeer;
      topMsgId?: int;
      constructor(params: { peer: Raw.TypeInputPeer; topMsgId?: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReadReactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SearchSentMedia extends TLObject {
      __response__: Raw.messages.TypeMessages;
      q: string;
      filter: Raw.TypeMessagesFilter;
      limit: int;
      constructor(params: { q: string; filter: Raw.TypeMessagesFilter; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SearchSentMedia>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAttachMenuBots extends TLObject {
      __response__: Raw.TypeAttachMenuBots;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetAttachMenuBots>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAttachMenuBot extends TLObject {
      __response__: Raw.TypeAttachMenuBotsBot;
      bot: Raw.TypeInputUser;
      constructor(params: { bot: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetAttachMenuBot>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleBotInAttachMenu extends TLObject {
      __response__: Bool;
      writeAllowed?: boolean;
      bot: Raw.TypeInputUser;
      enabled: Bool;
      constructor(params: { writeAllowed?: boolean; bot: Raw.TypeInputUser; enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ToggleBotInAttachMenu>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RequestWebView extends TLObject {
      __response__: Raw.TypeWebViewResult;
      fromBotMenu?: boolean;
      silent?: boolean;
      peer: Raw.TypeInputPeer;
      bot: Raw.TypeInputUser;
      url?: string;
      startParam?: string;
      themeParams?: Raw.TypeDataJSON;
      platform: string;
      replyTo?: Raw.TypeInputReplyTo;
      sendAs?: Raw.TypeInputPeer;
      constructor(params: {
        fromBotMenu?: boolean;
        silent?: boolean;
        peer: Raw.TypeInputPeer;
        bot: Raw.TypeInputUser;
        url?: string;
        startParam?: string;
        themeParams?: Raw.TypeDataJSON;
        platform: string;
        replyTo?: Raw.TypeInputReplyTo;
        sendAs?: Raw.TypeInputPeer;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.RequestWebView>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ProlongWebView extends TLObject {
      __response__: Bool;
      silent?: boolean;
      peer: Raw.TypeInputPeer;
      bot: Raw.TypeInputUser;
      queryId: long;
      replyTo?: Raw.TypeInputReplyTo;
      sendAs?: Raw.TypeInputPeer;
      constructor(params: {
        silent?: boolean;
        peer: Raw.TypeInputPeer;
        bot: Raw.TypeInputUser;
        queryId: long;
        replyTo?: Raw.TypeInputReplyTo;
        sendAs?: Raw.TypeInputPeer;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ProlongWebView>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RequestSimpleWebView extends TLObject {
      __response__: Raw.TypeSimpleWebViewResult;
      fromSwitchWebview?: boolean;
      fromSideMenu?: boolean;
      bot: Raw.TypeInputUser;
      url?: string;
      startParam?: string;
      themeParams?: Raw.TypeDataJSON;
      platform: string;
      constructor(params: {
        fromSwitchWebview?: boolean;
        fromSideMenu?: boolean;
        bot: Raw.TypeInputUser;
        url?: string;
        startParam?: string;
        themeParams?: Raw.TypeDataJSON;
        platform: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.RequestSimpleWebView>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendWebViewResultMessage extends TLObject {
      __response__: Raw.TypeWebViewMessageSent;
      botQueryId: string;
      result: Raw.TypeInputBotInlineResult;
      constructor(params: { botQueryId: string; result: Raw.TypeInputBotInlineResult });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendWebViewResultMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendWebViewData extends TLObject {
      __response__: Raw.TypeUpdates;
      bot: Raw.TypeInputUser;
      randomId: long;
      buttonText: string;
      data: string;
      constructor(params: {
        bot: Raw.TypeInputUser;
        randomId: long;
        buttonText: string;
        data: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendWebViewData>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TranscribeAudio extends TLObject {
      __response__: Raw.messages.TypeTranscribedAudio;
      peer: Raw.TypeInputPeer;
      msgId: int;
      constructor(params: { peer: Raw.TypeInputPeer; msgId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.TranscribeAudio>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RateTranscribedAudio extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      msgId: int;
      transcriptionId: long;
      good: Bool;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        msgId: int;
        transcriptionId: long;
        good: Bool;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.RateTranscribedAudio>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetCustomEmojiDocuments extends TLObject {
      __response__: Vector<Raw.TypeDocument>;
      documentId: Vector<long>;
      constructor(params: { documentId: Vector<long> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetCustomEmojiDocuments>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetEmojiStickers extends TLObject {
      __response__: Raw.messages.TypeAllStickers;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetEmojiStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetFeaturedEmojiStickers extends TLObject {
      __response__: Raw.messages.TypeFeaturedStickers;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetFeaturedEmojiStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReportReaction extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      id: int;
      reactionPeer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer; id: int; reactionPeer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReportReaction>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetTopReactions extends TLObject {
      __response__: Raw.messages.TypeReactions;
      limit: int;
      hash: long;
      constructor(params: { limit: int; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetTopReactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetRecentReactions extends TLObject {
      __response__: Raw.messages.TypeReactions;
      limit: int;
      hash: long;
      constructor(params: { limit: int; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetRecentReactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ClearRecentReactions extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ClearRecentReactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetExtendedMedia extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetExtendedMedia>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetDefaultHistoryTTL extends TLObject {
      __response__: Bool;
      period: int;
      constructor(params: { period: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetDefaultHistoryTTL>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDefaultHistoryTTL extends TLObject {
      __response__: Raw.TypeDefaultHistoryTTL;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetDefaultHistoryTTL>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendBotRequestedPeer extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      msgId: int;
      buttonId: int;
      requestedPeers: Vector<Raw.TypeInputPeer>;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        msgId: int;
        buttonId: int;
        requestedPeers: Vector<Raw.TypeInputPeer>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendBotRequestedPeer>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetEmojiGroups extends TLObject {
      __response__: Raw.messages.TypeEmojiGroups;
      hash: int;
      constructor(params: { hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetEmojiGroups>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetEmojiStatusGroups extends TLObject {
      __response__: Raw.messages.TypeEmojiGroups;
      hash: int;
      constructor(params: { hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetEmojiStatusGroups>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetEmojiProfilePhotoGroups extends TLObject {
      __response__: Raw.messages.TypeEmojiGroups;
      hash: int;
      constructor(params: { hash: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.messages.GetEmojiProfilePhotoGroups>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SearchCustomEmoji extends TLObject {
      __response__: Raw.TypeEmojiList;
      emoticon: string;
      hash: long;
      constructor(params: { emoticon: string; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SearchCustomEmoji>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TogglePeerTranslations extends TLObject {
      __response__: Bool;
      disabled?: boolean;
      peer: Raw.TypeInputPeer;
      constructor(params: { disabled?: boolean; peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.TogglePeerTranslations>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBotApp extends TLObject {
      __response__: Raw.messages.TypeBotApp;
      app: Raw.TypeInputBotApp;
      hash: long;
      constructor(params: { app: Raw.TypeInputBotApp; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetBotApp>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RequestAppWebView extends TLObject {
      __response__: Raw.TypeAppWebViewResult;
      writeAllowed?: boolean;
      peer: Raw.TypeInputPeer;
      app: Raw.TypeInputBotApp;
      startParam?: string;
      themeParams?: Raw.TypeDataJSON;
      platform: string;
      constructor(params: {
        writeAllowed?: boolean;
        peer: Raw.TypeInputPeer;
        app: Raw.TypeInputBotApp;
        startParam?: string;
        themeParams?: Raw.TypeDataJSON;
        platform: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.RequestAppWebView>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetChatWallPaper extends TLObject {
      __response__: Raw.TypeUpdates;
      forBoth?: boolean;
      revert?: boolean;
      peer: Raw.TypeInputPeer;
      wallpaper?: Raw.TypeInputWallPaper;
      settings?: Raw.TypeWallPaperSettings;
      id?: int;
      constructor(params: {
        forBoth?: boolean;
        revert?: boolean;
        peer: Raw.TypeInputPeer;
        wallpaper?: Raw.TypeInputWallPaper;
        settings?: Raw.TypeWallPaperSettings;
        id?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SetChatWallPaper>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SearchEmojiStickerSets extends TLObject {
      __response__: Raw.messages.TypeFoundStickerSets;
      excludeFeatured?: boolean;
      q: string;
      hash: long;
      constructor(params: { excludeFeatured?: boolean; q: string; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SearchEmojiStickerSets>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSavedDialogs extends TLObject {
      __response__: Raw.messages.TypeSavedDialogs;
      excludePinned?: boolean;
      offsetDate: int;
      offsetId: int;
      offsetPeer: Raw.TypeInputPeer;
      limit: int;
      hash: long;
      constructor(params: {
        excludePinned?: boolean;
        offsetDate: int;
        offsetId: int;
        offsetPeer: Raw.TypeInputPeer;
        limit: int;
        hash: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetSavedDialogs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSavedHistory extends TLObject {
      __response__: Raw.messages.TypeMessages;
      peer: Raw.TypeInputPeer;
      offsetId: int;
      offsetDate: int;
      addOffset: int;
      limit: int;
      maxId: int;
      minId: int;
      hash: long;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        offsetId: int;
        offsetDate: int;
        addOffset: int;
        limit: int;
        maxId: int;
        minId: int;
        hash: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetSavedHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteSavedHistory extends TLObject {
      __response__: Raw.messages.TypeAffectedHistory;
      peer: Raw.TypeInputPeer;
      maxId: int;
      minDate?: int;
      maxDate?: int;
      constructor(params: { peer: Raw.TypeInputPeer; maxId: int; minDate?: int; maxDate?: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DeleteSavedHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPinnedSavedDialogs extends TLObject {
      __response__: Raw.messages.TypeSavedDialogs;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetPinnedSavedDialogs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleSavedDialogPin extends TLObject {
      __response__: Bool;
      pinned?: boolean;
      peer: Raw.TypeInputDialogPeer;
      constructor(params: { pinned?: boolean; peer: Raw.TypeInputDialogPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ToggleSavedDialogPin>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReorderPinnedSavedDialogs extends TLObject {
      __response__: Bool;
      force?: boolean;
      order: Vector<Raw.TypeInputDialogPeer>;
      constructor(params: { force?: boolean; order: Vector<Raw.TypeInputDialogPeer> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReorderPinnedSavedDialogs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSavedReactionTags extends TLObject {
      __response__: Raw.messages.TypeSavedReactionTags;
      peer?: Raw.TypeInputPeer;
      hash: long;
      constructor(params: { peer?: Raw.TypeInputPeer; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetSavedReactionTags>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateSavedReactionTag extends TLObject {
      __response__: Bool;
      reaction: Raw.TypeReaction;
      title?: string;
      constructor(params: { reaction: Raw.TypeReaction; title?: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.UpdateSavedReactionTag>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDefaultTagReactions extends TLObject {
      __response__: Raw.messages.TypeReactions;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetDefaultTagReactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetOutboxReadDate extends TLObject {
      __response__: Raw.TypeOutboxReadDate;
      peer: Raw.TypeInputPeer;
      msgId: int;
      constructor(params: { peer: Raw.TypeInputPeer; msgId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetOutboxReadDate>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetQuickReplies extends TLObject {
      __response__: Raw.messages.TypeQuickReplies;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetQuickReplies>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReorderQuickReplies extends TLObject {
      __response__: Bool;
      order: Vector<int>;
      constructor(params: { order: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ReorderQuickReplies>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckQuickReplyShortcut extends TLObject {
      __response__: Bool;
      shortcut: string;
      constructor(params: { shortcut: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.CheckQuickReplyShortcut>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditQuickReplyShortcut extends TLObject {
      __response__: Bool;
      shortcutId: int;
      shortcut: string;
      constructor(params: { shortcutId: int; shortcut: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.EditQuickReplyShortcut>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteQuickReplyShortcut extends TLObject {
      __response__: Bool;
      shortcutId: int;
      constructor(params: { shortcutId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DeleteQuickReplyShortcut>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetQuickReplyMessages extends TLObject {
      __response__: Raw.messages.TypeMessages;
      shortcutId: int;
      id?: Vector<int>;
      hash: long;
      constructor(params: { shortcutId: int; id?: Vector<int>; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetQuickReplyMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendQuickReplyMessages extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      shortcutId: int;
      id: Vector<int>;
      randomId: Vector<long>;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        shortcutId: int;
        id: Vector<int>;
        randomId: Vector<long>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.SendQuickReplyMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteQuickReplyMessages extends TLObject {
      __response__: Raw.TypeUpdates;
      shortcutId: int;
      id: Vector<int>;
      constructor(params: { shortcutId: int; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.DeleteQuickReplyMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleDialogFilterTags extends TLObject {
      __response__: Bool;
      enabled: Bool;
      constructor(params: { enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.ToggleDialogFilterTags>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMyStickers extends TLObject {
      __response__: Raw.messages.TypeMyStickers;
      offsetId: long;
      limit: int;
      constructor(params: { offsetId: long; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.messages.GetMyStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace updates {
    type TypeChannelDifference =
      | Raw.updates.ChannelDifferenceEmpty
      | Raw.updates.ChannelDifferenceTooLong
      | Raw.updates.ChannelDifference;
    type TypeDifference =
      | Raw.updates.DifferenceEmpty
      | Raw.updates.Difference
      | Raw.updates.DifferenceSlice
      | Raw.updates.DifferenceTooLong;
    type TypeState = Raw.updates.State;
    class State extends TLObject {
      pts: int;
      qts: int;
      date: int;
      seq: int;
      unreadCount: int;
      constructor(params: { pts: int; qts: int; date: int; seq: int; unreadCount: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.updates.State>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DifferenceEmpty extends TLObject {
      date: int;
      seq: int;
      constructor(params: { date: int; seq: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.updates.DifferenceEmpty>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Difference extends TLObject {
      newMessages: Vector<Raw.TypeMessage>;
      newEncryptedMessages: Vector<Raw.TypeEncryptedMessage>;
      otherUpdates: Vector<Raw.TypeUpdate>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      state: Raw.updates.TypeState;
      constructor(params: {
        newMessages: Vector<Raw.TypeMessage>;
        newEncryptedMessages: Vector<Raw.TypeEncryptedMessage>;
        otherUpdates: Vector<Raw.TypeUpdate>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
        state: Raw.updates.TypeState;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.updates.Difference>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DifferenceSlice extends TLObject {
      newMessages: Vector<Raw.TypeMessage>;
      newEncryptedMessages: Vector<Raw.TypeEncryptedMessage>;
      otherUpdates: Vector<Raw.TypeUpdate>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      intermediateState: Raw.updates.TypeState;
      constructor(params: {
        newMessages: Vector<Raw.TypeMessage>;
        newEncryptedMessages: Vector<Raw.TypeEncryptedMessage>;
        otherUpdates: Vector<Raw.TypeUpdate>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
        intermediateState: Raw.updates.TypeState;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.updates.DifferenceSlice>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DifferenceTooLong extends TLObject {
      pts: int;
      constructor(params: { pts: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.updates.DifferenceTooLong>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChannelDifferenceEmpty extends TLObject {
      final?: boolean;
      pts: int;
      timeout?: int;
      constructor(params: { final?: boolean; pts: int; timeout?: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.updates.ChannelDifferenceEmpty>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChannelDifferenceTooLong extends TLObject {
      final?: boolean;
      timeout?: int;
      dialog: Raw.TypeDialog;
      messages: Vector<Raw.TypeMessage>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        final?: boolean;
        timeout?: int;
        dialog: Raw.TypeDialog;
        messages: Vector<Raw.TypeMessage>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.updates.ChannelDifferenceTooLong>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChannelDifference extends TLObject {
      final?: boolean;
      pts: int;
      timeout?: int;
      newMessages: Vector<Raw.TypeMessage>;
      otherUpdates: Vector<Raw.TypeUpdate>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        final?: boolean;
        pts: int;
        timeout?: int;
        newMessages: Vector<Raw.TypeMessage>;
        otherUpdates: Vector<Raw.TypeUpdate>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.updates.ChannelDifference>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetState extends TLObject {
      __response__: Raw.updates.TypeState;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.updates.GetState>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDifference extends TLObject {
      __response__: Raw.updates.TypeDifference;
      pts: int;
      ptsLimit?: int;
      ptsTotalLimit?: int;
      date: int;
      qts: int;
      qtsLimit?: int;
      constructor(params: {
        pts: int;
        ptsLimit?: int;
        ptsTotalLimit?: int;
        date: int;
        qts: int;
        qtsLimit?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.updates.GetDifference>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetChannelDifference extends TLObject {
      __response__: Raw.updates.TypeChannelDifference;
      force?: boolean;
      channel: Raw.TypeInputChannel;
      filter: Raw.TypeChannelMessagesFilter;
      pts: int;
      limit: int;
      constructor(params: {
        force?: boolean;
        channel: Raw.TypeInputChannel;
        filter: Raw.TypeChannelMessagesFilter;
        pts: int;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.updates.GetChannelDifference>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace photos {
    type TypePhotos = Raw.photos.Photos | Raw.photos.PhotosSlice;
    type TypePhoto = Raw.photos.Photo;
    class Photos extends TLObject {
      photos: Vector<Raw.TypePhoto>;
      users: Vector<Raw.TypeUser>;
      constructor(params: { photos: Vector<Raw.TypePhoto>; users: Vector<Raw.TypeUser> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.photos.Photos>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PhotosSlice extends TLObject {
      count: int;
      photos: Vector<Raw.TypePhoto>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        count: int;
        photos: Vector<Raw.TypePhoto>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.photos.PhotosSlice>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Photo extends TLObject {
      photo: Raw.TypePhoto;
      users: Vector<Raw.TypeUser>;
      constructor(params: { photo: Raw.TypePhoto; users: Vector<Raw.TypeUser> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.photos.Photo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateProfilePhoto extends TLObject {
      __response__: Raw.photos.TypePhoto;
      fallback?: boolean;
      bot?: Raw.TypeInputUser;
      id: Raw.TypeInputPhoto;
      constructor(params: { fallback?: boolean; bot?: Raw.TypeInputUser; id: Raw.TypeInputPhoto });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.photos.UpdateProfilePhoto>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UploadProfilePhoto extends TLObject {
      __response__: Raw.photos.TypePhoto;
      fallback?: boolean;
      bot?: Raw.TypeInputUser;
      file?: Raw.TypeInputFile;
      video?: Raw.TypeInputFile;
      videoStartTs?: double;
      videoEmojiMarkup?: Raw.TypeVideoSize;
      constructor(params: {
        fallback?: boolean;
        bot?: Raw.TypeInputUser;
        file?: Raw.TypeInputFile;
        video?: Raw.TypeInputFile;
        videoStartTs?: double;
        videoEmojiMarkup?: Raw.TypeVideoSize;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.photos.UploadProfilePhoto>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeletePhotos extends TLObject {
      __response__: Vector<long>;
      id: Vector<Raw.TypeInputPhoto>;
      constructor(params: { id: Vector<Raw.TypeInputPhoto> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.photos.DeletePhotos>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetUserPhotos extends TLObject {
      __response__: Raw.photos.TypePhotos;
      userId: Raw.TypeInputUser;
      offset: int;
      maxId: long;
      limit: int;
      constructor(params: { userId: Raw.TypeInputUser; offset: int; maxId: long; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.photos.GetUserPhotos>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UploadContactProfilePhoto extends TLObject {
      __response__: Raw.photos.TypePhoto;
      suggest?: boolean;
      save?: boolean;
      userId: Raw.TypeInputUser;
      file?: Raw.TypeInputFile;
      video?: Raw.TypeInputFile;
      videoStartTs?: double;
      videoEmojiMarkup?: Raw.TypeVideoSize;
      constructor(params: {
        suggest?: boolean;
        save?: boolean;
        userId: Raw.TypeInputUser;
        file?: Raw.TypeInputFile;
        video?: Raw.TypeInputFile;
        videoStartTs?: double;
        videoEmojiMarkup?: Raw.TypeVideoSize;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.photos.UploadContactProfilePhoto>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace upload {
    type TypeCdnFile = Raw.upload.CdnFileReuploadNeeded | Raw.upload.CdnFile;
    type TypeWebFile = Raw.upload.WebFile;
    type TypeFile = Raw.upload.File | Raw.upload.FileCdnRedirect;
    class File extends TLObject {
      type: Raw.storage.TypeFileType;
      mtime: int;
      bytes: bytes;
      constructor(params: { type: Raw.storage.TypeFileType; mtime: int; bytes: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.File>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FileCdnRedirect extends TLObject {
      dcId: int;
      fileToken: bytes;
      encryptionKey: bytes;
      encryptionIv: bytes;
      fileHashes: Vector<Raw.TypeFileHash>;
      constructor(params: {
        dcId: int;
        fileToken: bytes;
        encryptionKey: bytes;
        encryptionIv: bytes;
        fileHashes: Vector<Raw.TypeFileHash>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.FileCdnRedirect>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class WebFile extends TLObject {
      size: int;
      mimeType: string;
      fileType: Raw.storage.TypeFileType;
      mtime: int;
      bytes: bytes;
      constructor(params: {
        size: int;
        mimeType: string;
        fileType: Raw.storage.TypeFileType;
        mtime: int;
        bytes: bytes;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.WebFile>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CdnFileReuploadNeeded extends TLObject {
      requestToken: bytes;
      constructor(params: { requestToken: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.CdnFileReuploadNeeded>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CdnFile extends TLObject {
      bytes: bytes;
      constructor(params: { bytes: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.CdnFile>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveFilePart extends TLObject {
      __response__: Bool;
      fileId: long;
      filePart: int;
      bytes: bytes;
      constructor(params: { fileId: long; filePart: int; bytes: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.SaveFilePart>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetFile extends TLObject {
      __response__: Raw.upload.TypeFile;
      precise?: boolean;
      cdnSupported?: boolean;
      location: Raw.TypeInputFileLocation;
      offset: long;
      limit: int;
      constructor(params: {
        precise?: boolean;
        cdnSupported?: boolean;
        location: Raw.TypeInputFileLocation;
        offset: long;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.GetFile>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveBigFilePart extends TLObject {
      __response__: Bool;
      fileId: long;
      filePart: int;
      fileTotalParts: int;
      bytes: bytes;
      constructor(params: { fileId: long; filePart: int; fileTotalParts: int; bytes: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.SaveBigFilePart>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetWebFile extends TLObject {
      __response__: Raw.upload.TypeWebFile;
      location: Raw.TypeInputWebFileLocation;
      offset: int;
      limit: int;
      constructor(params: { location: Raw.TypeInputWebFileLocation; offset: int; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.GetWebFile>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetCdnFile extends TLObject {
      __response__: Raw.upload.TypeCdnFile;
      fileToken: bytes;
      offset: long;
      limit: int;
      constructor(params: { fileToken: bytes; offset: long; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.GetCdnFile>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReuploadCdnFile extends TLObject {
      __response__: Vector<Raw.TypeFileHash>;
      fileToken: bytes;
      requestToken: bytes;
      constructor(params: { fileToken: bytes; requestToken: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.ReuploadCdnFile>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetCdnFileHashes extends TLObject {
      __response__: Vector<Raw.TypeFileHash>;
      fileToken: bytes;
      offset: long;
      constructor(params: { fileToken: bytes; offset: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.GetCdnFileHashes>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetFileHashes extends TLObject {
      __response__: Vector<Raw.TypeFileHash>;
      location: Raw.TypeInputFileLocation;
      offset: long;
      constructor(params: { location: Raw.TypeInputFileLocation; offset: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.upload.GetFileHashes>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace account {
    type TypeResolvedBusinessChatLinks = Raw.account.ResolvedBusinessChatLinks;
    type TypeBusinessChatLinks = Raw.account.BusinessChatLinks;
    type TypeConnectedBots = Raw.account.ConnectedBots;
    type TypeAutoSaveSettings = Raw.account.AutoSaveSettings;
    type TypeEmojiStatuses = Raw.account.EmojiStatusesNotModified | Raw.account.EmojiStatuses;
    type TypeSavedRingtone = Raw.account.SavedRingtone | Raw.account.SavedRingtoneConverted;
    type TypeSavedRingtones = Raw.account.SavedRingtonesNotModified | Raw.account.SavedRingtones;
    type TypeResetPasswordResult =
      | Raw.account.ResetPasswordFailedWait
      | Raw.account.ResetPasswordRequestedWait
      | Raw.account.ResetPasswordOk;
    type TypeContentSettings = Raw.account.ContentSettings;
    type TypeThemes = Raw.account.ThemesNotModified | Raw.account.Themes;
    type TypeAutoDownloadSettings = Raw.account.AutoDownloadSettings;
    type TypeTakeout = Raw.account.Takeout;
    type TypeEmailVerified = Raw.account.EmailVerified | Raw.account.EmailVerifiedLogin;
    type TypeSentEmailCode = Raw.account.SentEmailCode;
    type TypeAuthorizationForm = Raw.account.AuthorizationForm;
    type TypeWebAuthorizations = Raw.account.WebAuthorizations;
    type TypeTmpPassword = Raw.account.TmpPassword;
    type TypePasswordSettings = Raw.account.PasswordSettings;
    type TypePassword = Raw.account.Password;
    type TypeAuthorizations = Raw.account.Authorizations;
    type TypePrivacyRules = Raw.account.PrivacyRules;
    type TypeWallPapers = Raw.account.WallPapersNotModified | Raw.account.WallPapers;
    type TypePasswordInputSettings = Raw.account.PasswordInputSettings;
    class PrivacyRules extends TLObject {
      rules: Vector<Raw.TypePrivacyRule>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        rules: Vector<Raw.TypePrivacyRule>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.PrivacyRules>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Authorizations extends TLObject {
      authorizationTtlDays: int;
      authorizations: Vector<Raw.TypeAuthorization>;
      constructor(params: {
        authorizationTtlDays: int;
        authorizations: Vector<Raw.TypeAuthorization>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.Authorizations>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Password extends TLObject {
      hasRecovery?: boolean;
      hasSecureValues?: boolean;
      hasPassword?: boolean;
      currentAlgo?: Raw.TypePasswordKdfAlgo;
      srpB?: bytes;
      srpId?: long;
      hint?: string;
      emailUnconfirmedPattern?: string;
      newAlgo: Raw.TypePasswordKdfAlgo;
      newSecureAlgo: Raw.TypeSecurePasswordKdfAlgo;
      secureRandom: bytes;
      pendingResetDate?: int;
      loginEmailPattern?: string;
      constructor(params: {
        hasRecovery?: boolean;
        hasSecureValues?: boolean;
        hasPassword?: boolean;
        currentAlgo?: Raw.TypePasswordKdfAlgo;
        srpB?: bytes;
        srpId?: long;
        hint?: string;
        emailUnconfirmedPattern?: string;
        newAlgo: Raw.TypePasswordKdfAlgo;
        newSecureAlgo: Raw.TypeSecurePasswordKdfAlgo;
        secureRandom: bytes;
        pendingResetDate?: int;
        loginEmailPattern?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.Password>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PasswordSettings extends TLObject {
      email?: string;
      secureSettings?: Raw.TypeSecureSecretSettings;
      constructor(params: { email?: string; secureSettings?: Raw.TypeSecureSecretSettings });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.PasswordSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PasswordInputSettings extends TLObject {
      newAlgo?: Raw.TypePasswordKdfAlgo;
      newPasswordHash?: bytes;
      hint?: string;
      email?: string;
      newSecureSettings?: Raw.TypeSecureSecretSettings;
      constructor(params: {
        newAlgo?: Raw.TypePasswordKdfAlgo;
        newPasswordHash?: bytes;
        hint?: string;
        email?: string;
        newSecureSettings?: Raw.TypeSecureSecretSettings;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.PasswordInputSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TmpPassword extends TLObject {
      tmpPassword: bytes;
      validUntil: int;
      constructor(params: { tmpPassword: bytes; validUntil: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.TmpPassword>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class WebAuthorizations extends TLObject {
      authorizations: Vector<Raw.TypeWebAuthorization>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        authorizations: Vector<Raw.TypeWebAuthorization>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.WebAuthorizations>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AuthorizationForm extends TLObject {
      requiredTypes: Vector<Raw.TypeSecureRequiredType>;
      values: Vector<Raw.TypeSecureValue>;
      errors: Vector<Raw.TypeSecureValueError>;
      users: Vector<Raw.TypeUser>;
      privacyPolicyUrl?: string;
      constructor(params: {
        requiredTypes: Vector<Raw.TypeSecureRequiredType>;
        values: Vector<Raw.TypeSecureValue>;
        errors: Vector<Raw.TypeSecureValueError>;
        users: Vector<Raw.TypeUser>;
        privacyPolicyUrl?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.AuthorizationForm>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SentEmailCode extends TLObject {
      emailPattern: string;
      length: int;
      constructor(params: { emailPattern: string; length: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SentEmailCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Takeout extends TLObject {
      id: long;
      constructor(params: { id: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.Takeout>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class WallPapersNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.WallPapersNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class WallPapers extends TLObject {
      hash: long;
      wallpapers: Vector<Raw.TypeWallPaper>;
      constructor(params: { hash: long; wallpapers: Vector<Raw.TypeWallPaper> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.WallPapers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AutoDownloadSettings extends TLObject {
      low: Raw.TypeAutoDownloadSettings;
      medium: Raw.TypeAutoDownloadSettings;
      high: Raw.TypeAutoDownloadSettings;
      constructor(params: {
        low: Raw.TypeAutoDownloadSettings;
        medium: Raw.TypeAutoDownloadSettings;
        high: Raw.TypeAutoDownloadSettings;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.AutoDownloadSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ThemesNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ThemesNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Themes extends TLObject {
      hash: long;
      themes: Vector<Raw.TypeTheme>;
      constructor(params: { hash: long; themes: Vector<Raw.TypeTheme> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.Themes>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ContentSettings extends TLObject {
      sensitiveEnabled?: boolean;
      sensitiveCanChange?: boolean;
      constructor(params: { sensitiveEnabled?: boolean; sensitiveCanChange?: boolean });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ContentSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetPasswordFailedWait extends TLObject {
      retryDate: int;
      constructor(params: { retryDate: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResetPasswordFailedWait>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetPasswordRequestedWait extends TLObject {
      untilDate: int;
      constructor(params: { untilDate: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResetPasswordRequestedWait>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetPasswordOk extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResetPasswordOk>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedRingtonesNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SavedRingtonesNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedRingtones extends TLObject {
      hash: long;
      ringtones: Vector<Raw.TypeDocument>;
      constructor(params: { hash: long; ringtones: Vector<Raw.TypeDocument> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SavedRingtones>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedRingtone extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SavedRingtone>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedRingtoneConverted extends TLObject {
      document: Raw.TypeDocument;
      constructor(params: { document: Raw.TypeDocument });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SavedRingtoneConverted>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EmojiStatusesNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.EmojiStatusesNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EmojiStatuses extends TLObject {
      hash: long;
      statuses: Vector<Raw.TypeEmojiStatus>;
      constructor(params: { hash: long; statuses: Vector<Raw.TypeEmojiStatus> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.EmojiStatuses>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EmailVerified extends TLObject {
      email: string;
      constructor(params: { email: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.EmailVerified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EmailVerifiedLogin extends TLObject {
      email: string;
      sentCode: Raw.auth.TypeSentCode;
      constructor(params: { email: string; sentCode: Raw.auth.TypeSentCode });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.EmailVerifiedLogin>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AutoSaveSettings extends TLObject {
      usersSettings: Raw.TypeAutoSaveSettings;
      chatsSettings: Raw.TypeAutoSaveSettings;
      broadcastsSettings: Raw.TypeAutoSaveSettings;
      exceptions: Vector<Raw.TypeAutoSaveException>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        usersSettings: Raw.TypeAutoSaveSettings;
        chatsSettings: Raw.TypeAutoSaveSettings;
        broadcastsSettings: Raw.TypeAutoSaveSettings;
        exceptions: Vector<Raw.TypeAutoSaveException>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.AutoSaveSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ConnectedBots extends TLObject {
      connectedBots: Vector<Raw.TypeConnectedBot>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        connectedBots: Vector<Raw.TypeConnectedBot>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ConnectedBots>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BusinessChatLinks extends TLObject {
      links: Vector<Raw.TypeBusinessChatLink>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        links: Vector<Raw.TypeBusinessChatLink>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.BusinessChatLinks>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResolvedBusinessChatLinks extends TLObject {
      peer: Raw.TypePeer;
      message: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        peer: Raw.TypePeer;
        message: string;
        entities?: Vector<Raw.TypeMessageEntity>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResolvedBusinessChatLinks>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RegisterDevice extends TLObject {
      __response__: Bool;
      noMuted?: boolean;
      tokenType: int;
      token: string;
      appSandbox: Bool;
      secret: bytes;
      otherUids: Vector<long>;
      constructor(params: {
        noMuted?: boolean;
        tokenType: int;
        token: string;
        appSandbox: Bool;
        secret: bytes;
        otherUids: Vector<long>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.RegisterDevice>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UnregisterDevice extends TLObject {
      __response__: Bool;
      tokenType: int;
      token: string;
      otherUids: Vector<long>;
      constructor(params: { tokenType: int; token: string; otherUids: Vector<long> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UnregisterDevice>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateNotifySettings extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputNotifyPeer;
      settings: Raw.TypeInputPeerNotifySettings;
      constructor(params: {
        peer: Raw.TypeInputNotifyPeer;
        settings: Raw.TypeInputPeerNotifySettings;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateNotifySettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetNotifySettings extends TLObject {
      __response__: Raw.TypePeerNotifySettings;
      peer: Raw.TypeInputNotifyPeer;
      constructor(params: { peer: Raw.TypeInputNotifyPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetNotifySettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetNotifySettings extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResetNotifySettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateProfile extends TLObject {
      __response__: Raw.TypeUser;
      firstName?: string;
      lastName?: string;
      about?: string;
      constructor(params: { firstName?: string; lastName?: string; about?: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateProfile>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateStatus extends TLObject {
      __response__: Bool;
      offline: Bool;
      constructor(params: { offline: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateStatus>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetWallPapers extends TLObject {
      __response__: Raw.account.TypeWallPapers;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetWallPapers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReportPeer extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      reason: Raw.TypeReportReason;
      message: string;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        reason: Raw.TypeReportReason;
        message: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ReportPeer>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckUsername extends TLObject {
      __response__: Bool;
      username: string;
      constructor(params: { username: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.CheckUsername>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateUsername extends TLObject {
      __response__: Raw.TypeUser;
      username: string;
      constructor(params: { username: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateUsername>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPrivacy extends TLObject {
      __response__: Raw.account.TypePrivacyRules;
      key: Raw.TypeInputPrivacyKey;
      constructor(params: { key: Raw.TypeInputPrivacyKey });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetPrivacy>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetPrivacy extends TLObject {
      __response__: Raw.account.TypePrivacyRules;
      key: Raw.TypeInputPrivacyKey;
      rules: Vector<Raw.TypeInputPrivacyRule>;
      constructor(params: {
        key: Raw.TypeInputPrivacyKey;
        rules: Vector<Raw.TypeInputPrivacyRule>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SetPrivacy>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteAccount extends TLObject {
      __response__: Bool;
      reason: string;
      password?: Raw.TypeInputCheckPasswordSRP;
      constructor(params: { reason: string; password?: Raw.TypeInputCheckPasswordSRP });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.DeleteAccount>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAccountTTL extends TLObject {
      __response__: Raw.TypeAccountDaysTTL;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetAccountTTL>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetAccountTTL extends TLObject {
      __response__: Bool;
      ttl: Raw.TypeAccountDaysTTL;
      constructor(params: { ttl: Raw.TypeAccountDaysTTL });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SetAccountTTL>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendChangePhoneCode extends TLObject {
      __response__: Raw.auth.TypeSentCode;
      phoneNumber: string;
      settings: Raw.TypeCodeSettings;
      constructor(params: { phoneNumber: string; settings: Raw.TypeCodeSettings });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SendChangePhoneCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChangePhone extends TLObject {
      __response__: Raw.TypeUser;
      phoneNumber: string;
      phoneCodeHash: string;
      phoneCode: string;
      constructor(params: { phoneNumber: string; phoneCodeHash: string; phoneCode: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ChangePhone>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateDeviceLocked extends TLObject {
      __response__: Bool;
      period: int;
      constructor(params: { period: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateDeviceLocked>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAuthorizations extends TLObject {
      __response__: Raw.account.TypeAuthorizations;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetAuthorizations>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetAuthorization extends TLObject {
      __response__: Bool;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResetAuthorization>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPassword extends TLObject {
      __response__: Raw.account.TypePassword;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetPassword>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPasswordSettings extends TLObject {
      __response__: Raw.account.TypePasswordSettings;
      password: Raw.TypeInputCheckPasswordSRP;
      constructor(params: { password: Raw.TypeInputCheckPasswordSRP });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetPasswordSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdatePasswordSettings extends TLObject {
      __response__: Bool;
      password: Raw.TypeInputCheckPasswordSRP;
      newSettings: Raw.account.TypePasswordInputSettings;
      constructor(params: {
        password: Raw.TypeInputCheckPasswordSRP;
        newSettings: Raw.account.TypePasswordInputSettings;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdatePasswordSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendConfirmPhoneCode extends TLObject {
      __response__: Raw.auth.TypeSentCode;
      hash: string;
      settings: Raw.TypeCodeSettings;
      constructor(params: { hash: string; settings: Raw.TypeCodeSettings });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SendConfirmPhoneCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ConfirmPhone extends TLObject {
      __response__: Bool;
      phoneCodeHash: string;
      phoneCode: string;
      constructor(params: { phoneCodeHash: string; phoneCode: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ConfirmPhone>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetTmpPassword extends TLObject {
      __response__: Raw.account.TypeTmpPassword;
      password: Raw.TypeInputCheckPasswordSRP;
      period: int;
      constructor(params: { password: Raw.TypeInputCheckPasswordSRP; period: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetTmpPassword>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetWebAuthorizations extends TLObject {
      __response__: Raw.account.TypeWebAuthorizations;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetWebAuthorizations>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetWebAuthorization extends TLObject {
      __response__: Bool;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResetWebAuthorization>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetWebAuthorizations extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResetWebAuthorizations>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAllSecureValues extends TLObject {
      __response__: Vector<Raw.TypeSecureValue>;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetAllSecureValues>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSecureValue extends TLObject {
      __response__: Vector<Raw.TypeSecureValue>;
      types: Vector<Raw.TypeSecureValueType>;
      constructor(params: { types: Vector<Raw.TypeSecureValueType> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetSecureValue>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveSecureValue extends TLObject {
      __response__: Raw.TypeSecureValue;
      value: Raw.TypeInputSecureValue;
      secureSecretId: long;
      constructor(params: { value: Raw.TypeInputSecureValue; secureSecretId: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SaveSecureValue>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteSecureValue extends TLObject {
      __response__: Bool;
      types: Vector<Raw.TypeSecureValueType>;
      constructor(params: { types: Vector<Raw.TypeSecureValueType> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.DeleteSecureValue>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAuthorizationForm extends TLObject {
      __response__: Raw.account.TypeAuthorizationForm;
      botId: long;
      scope: string;
      publicKey: string;
      constructor(params: { botId: long; scope: string; publicKey: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetAuthorizationForm>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AcceptAuthorization extends TLObject {
      __response__: Bool;
      botId: long;
      scope: string;
      publicKey: string;
      valueHashes: Vector<Raw.TypeSecureValueHash>;
      credentials: Raw.TypeSecureCredentialsEncrypted;
      constructor(params: {
        botId: long;
        scope: string;
        publicKey: string;
        valueHashes: Vector<Raw.TypeSecureValueHash>;
        credentials: Raw.TypeSecureCredentialsEncrypted;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.AcceptAuthorization>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendVerifyPhoneCode extends TLObject {
      __response__: Raw.auth.TypeSentCode;
      phoneNumber: string;
      settings: Raw.TypeCodeSettings;
      constructor(params: { phoneNumber: string; settings: Raw.TypeCodeSettings });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SendVerifyPhoneCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class VerifyPhone extends TLObject {
      __response__: Bool;
      phoneNumber: string;
      phoneCodeHash: string;
      phoneCode: string;
      constructor(params: { phoneNumber: string; phoneCodeHash: string; phoneCode: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.VerifyPhone>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendVerifyEmailCode extends TLObject {
      __response__: Raw.account.TypeSentEmailCode;
      purpose: Raw.TypeEmailVerifyPurpose;
      email: string;
      constructor(params: { purpose: Raw.TypeEmailVerifyPurpose; email: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SendVerifyEmailCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class VerifyEmail extends TLObject {
      __response__: Raw.account.TypeEmailVerified;
      purpose: Raw.TypeEmailVerifyPurpose;
      verification: Raw.TypeEmailVerification;
      constructor(params: {
        purpose: Raw.TypeEmailVerifyPurpose;
        verification: Raw.TypeEmailVerification;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.VerifyEmail>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InitTakeoutSession extends TLObject {
      __response__: Raw.account.TypeTakeout;
      contacts?: boolean;
      messageUsers?: boolean;
      messageChats?: boolean;
      messageMegagroups?: boolean;
      messageChannels?: boolean;
      files?: boolean;
      fileMaxSize?: long;
      constructor(params: {
        contacts?: boolean;
        messageUsers?: boolean;
        messageChats?: boolean;
        messageMegagroups?: boolean;
        messageChannels?: boolean;
        files?: boolean;
        fileMaxSize?: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.InitTakeoutSession>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FinishTakeoutSession extends TLObject {
      __response__: Bool;
      success?: boolean;
      constructor(params: { success?: boolean });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.FinishTakeoutSession>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ConfirmPasswordEmail extends TLObject {
      __response__: Bool;
      code: string;
      constructor(params: { code: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ConfirmPasswordEmail>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResendPasswordEmail extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResendPasswordEmail>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CancelPasswordEmail extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.CancelPasswordEmail>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetContactSignUpNotification extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.account.GetContactSignUpNotification>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetContactSignUpNotification extends TLObject {
      __response__: Bool;
      silent: Bool;
      constructor(params: { silent: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.account.SetContactSignUpNotification>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetNotifyExceptions extends TLObject {
      __response__: Raw.TypeUpdates;
      compareSound?: boolean;
      compareStories?: boolean;
      peer?: Raw.TypeInputNotifyPeer;
      constructor(params: {
        compareSound?: boolean;
        compareStories?: boolean;
        peer?: Raw.TypeInputNotifyPeer;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetNotifyExceptions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetWallPaper extends TLObject {
      __response__: Raw.TypeWallPaper;
      wallpaper: Raw.TypeInputWallPaper;
      constructor(params: { wallpaper: Raw.TypeInputWallPaper });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetWallPaper>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UploadWallPaper extends TLObject {
      __response__: Raw.TypeWallPaper;
      forChat?: boolean;
      file: Raw.TypeInputFile;
      mimeType: string;
      settings: Raw.TypeWallPaperSettings;
      constructor(params: {
        forChat?: boolean;
        file: Raw.TypeInputFile;
        mimeType: string;
        settings: Raw.TypeWallPaperSettings;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UploadWallPaper>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveWallPaper extends TLObject {
      __response__: Bool;
      wallpaper: Raw.TypeInputWallPaper;
      unsave: Bool;
      settings: Raw.TypeWallPaperSettings;
      constructor(params: {
        wallpaper: Raw.TypeInputWallPaper;
        unsave: Bool;
        settings: Raw.TypeWallPaperSettings;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SaveWallPaper>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InstallWallPaper extends TLObject {
      __response__: Bool;
      wallpaper: Raw.TypeInputWallPaper;
      settings: Raw.TypeWallPaperSettings;
      constructor(params: {
        wallpaper: Raw.TypeInputWallPaper;
        settings: Raw.TypeWallPaperSettings;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.InstallWallPaper>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetWallPapers extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResetWallPapers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAutoDownloadSettings extends TLObject {
      __response__: Raw.account.TypeAutoDownloadSettings;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetAutoDownloadSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveAutoDownloadSettings extends TLObject {
      __response__: Bool;
      low?: boolean;
      high?: boolean;
      settings: Raw.TypeAutoDownloadSettings;
      constructor(params: {
        low?: boolean;
        high?: boolean;
        settings: Raw.TypeAutoDownloadSettings;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SaveAutoDownloadSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UploadTheme extends TLObject {
      __response__: Raw.TypeDocument;
      file: Raw.TypeInputFile;
      thumb?: Raw.TypeInputFile;
      fileName: string;
      mimeType: string;
      constructor(params: {
        file: Raw.TypeInputFile;
        thumb?: Raw.TypeInputFile;
        fileName: string;
        mimeType: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UploadTheme>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CreateTheme extends TLObject {
      __response__: Raw.TypeTheme;
      slug: string;
      title: string;
      document?: Raw.TypeInputDocument;
      settings?: Vector<Raw.TypeInputThemeSettings>;
      constructor(params: {
        slug: string;
        title: string;
        document?: Raw.TypeInputDocument;
        settings?: Vector<Raw.TypeInputThemeSettings>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.CreateTheme>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateTheme extends TLObject {
      __response__: Raw.TypeTheme;
      format: string;
      theme: Raw.TypeInputTheme;
      slug?: string;
      title?: string;
      document?: Raw.TypeInputDocument;
      settings?: Vector<Raw.TypeInputThemeSettings>;
      constructor(params: {
        format: string;
        theme: Raw.TypeInputTheme;
        slug?: string;
        title?: string;
        document?: Raw.TypeInputDocument;
        settings?: Vector<Raw.TypeInputThemeSettings>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateTheme>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveTheme extends TLObject {
      __response__: Bool;
      theme: Raw.TypeInputTheme;
      unsave: Bool;
      constructor(params: { theme: Raw.TypeInputTheme; unsave: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SaveTheme>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InstallTheme extends TLObject {
      __response__: Bool;
      dark?: boolean;
      theme?: Raw.TypeInputTheme;
      format?: string;
      baseTheme?: Raw.TypeBaseTheme;
      constructor(params: {
        dark?: boolean;
        theme?: Raw.TypeInputTheme;
        format?: string;
        baseTheme?: Raw.TypeBaseTheme;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.InstallTheme>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetTheme extends TLObject {
      __response__: Raw.TypeTheme;
      format: string;
      theme: Raw.TypeInputTheme;
      constructor(params: { format: string; theme: Raw.TypeInputTheme });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetTheme>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetThemes extends TLObject {
      __response__: Raw.account.TypeThemes;
      format: string;
      hash: long;
      constructor(params: { format: string; hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetThemes>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetContentSettings extends TLObject {
      __response__: Bool;
      sensitiveEnabled?: boolean;
      constructor(params: { sensitiveEnabled?: boolean });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SetContentSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetContentSettings extends TLObject {
      __response__: Raw.account.TypeContentSettings;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetContentSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMultiWallPapers extends TLObject {
      __response__: Vector<Raw.TypeWallPaper>;
      wallpapers: Vector<Raw.TypeInputWallPaper>;
      constructor(params: { wallpapers: Vector<Raw.TypeInputWallPaper> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetMultiWallPapers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetGlobalPrivacySettings extends TLObject {
      __response__: Raw.TypeGlobalPrivacySettings;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetGlobalPrivacySettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetGlobalPrivacySettings extends TLObject {
      __response__: Raw.TypeGlobalPrivacySettings;
      settings: Raw.TypeGlobalPrivacySettings;
      constructor(params: { settings: Raw.TypeGlobalPrivacySettings });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SetGlobalPrivacySettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReportProfilePhoto extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      photoId: Raw.TypeInputPhoto;
      reason: Raw.TypeReportReason;
      message: string;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        photoId: Raw.TypeInputPhoto;
        reason: Raw.TypeReportReason;
        message: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ReportProfilePhoto>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetPassword extends TLObject {
      __response__: Raw.account.TypeResetPasswordResult;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResetPassword>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeclinePasswordReset extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.DeclinePasswordReset>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetChatThemes extends TLObject {
      __response__: Raw.account.TypeThemes;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetChatThemes>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetAuthorizationTTL extends TLObject {
      __response__: Bool;
      authorizationTtlDays: int;
      constructor(params: { authorizationTtlDays: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SetAuthorizationTTL>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChangeAuthorizationSettings extends TLObject {
      __response__: Bool;
      confirmed?: boolean;
      hash: long;
      encryptedRequestsDisabled?: Bool;
      callRequestsDisabled?: Bool;
      constructor(params: {
        confirmed?: boolean;
        hash: long;
        encryptedRequestsDisabled?: Bool;
        callRequestsDisabled?: Bool;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.account.ChangeAuthorizationSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSavedRingtones extends TLObject {
      __response__: Raw.account.TypeSavedRingtones;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetSavedRingtones>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveRingtone extends TLObject {
      __response__: Raw.account.TypeSavedRingtone;
      id: Raw.TypeInputDocument;
      unsave: Bool;
      constructor(params: { id: Raw.TypeInputDocument; unsave: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SaveRingtone>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UploadRingtone extends TLObject {
      __response__: Raw.TypeDocument;
      file: Raw.TypeInputFile;
      fileName: string;
      mimeType: string;
      constructor(params: { file: Raw.TypeInputFile; fileName: string; mimeType: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UploadRingtone>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateEmojiStatus extends TLObject {
      __response__: Bool;
      emojiStatus: Raw.TypeEmojiStatus;
      constructor(params: { emojiStatus: Raw.TypeEmojiStatus });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateEmojiStatus>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDefaultEmojiStatuses extends TLObject {
      __response__: Raw.account.TypeEmojiStatuses;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetDefaultEmojiStatuses>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetRecentEmojiStatuses extends TLObject {
      __response__: Raw.account.TypeEmojiStatuses;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetRecentEmojiStatuses>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ClearRecentEmojiStatuses extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ClearRecentEmojiStatuses>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReorderUsernames extends TLObject {
      __response__: Bool;
      order: Vector<string>;
      constructor(params: { order: Vector<string> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ReorderUsernames>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleUsername extends TLObject {
      __response__: Bool;
      username: string;
      active: Bool;
      constructor(params: { username: string; active: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ToggleUsername>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDefaultProfilePhotoEmojis extends TLObject {
      __response__: Raw.TypeEmojiList;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.account.GetDefaultProfilePhotoEmojis>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDefaultGroupPhotoEmojis extends TLObject {
      __response__: Raw.TypeEmojiList;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetDefaultGroupPhotoEmojis>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAutoSaveSettings extends TLObject {
      __response__: Raw.account.TypeAutoSaveSettings;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetAutoSaveSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveAutoSaveSettings extends TLObject {
      __response__: Bool;
      users?: boolean;
      chats?: boolean;
      broadcasts?: boolean;
      peer?: Raw.TypeInputPeer;
      settings: Raw.TypeAutoSaveSettings;
      constructor(params: {
        users?: boolean;
        chats?: boolean;
        broadcasts?: boolean;
        peer?: Raw.TypeInputPeer;
        settings: Raw.TypeAutoSaveSettings;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SaveAutoSaveSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteAutoSaveExceptions extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.DeleteAutoSaveExceptions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InvalidateSignInCodes extends TLObject {
      __response__: Bool;
      codes: Vector<string>;
      constructor(params: { codes: Vector<string> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.InvalidateSignInCodes>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateColor extends TLObject {
      __response__: Bool;
      forProfile?: boolean;
      color?: int;
      backgroundEmojiId?: long;
      constructor(params: { forProfile?: boolean; color?: int; backgroundEmojiId?: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateColor>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDefaultBackgroundEmojis extends TLObject {
      __response__: Raw.TypeEmojiList;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetDefaultBackgroundEmojis>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetChannelDefaultEmojiStatuses extends TLObject {
      __response__: Raw.account.TypeEmojiStatuses;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.account.GetChannelDefaultEmojiStatuses>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetChannelRestrictedStatusEmojis extends TLObject {
      __response__: Raw.TypeEmojiList;
      hash: long;
      constructor(params: { hash: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.account.GetChannelRestrictedStatusEmojis>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateBusinessWorkHours extends TLObject {
      __response__: Bool;
      businessWorkHours?: Raw.TypeBusinessWorkHours;
      constructor(params: { businessWorkHours?: Raw.TypeBusinessWorkHours });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateBusinessWorkHours>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateBusinessLocation extends TLObject {
      __response__: Bool;
      geoPoint?: Raw.TypeInputGeoPoint;
      address?: string;
      constructor(params: { geoPoint?: Raw.TypeInputGeoPoint; address?: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateBusinessLocation>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateBusinessGreetingMessage extends TLObject {
      __response__: Bool;
      message?: Raw.TypeInputBusinessGreetingMessage;
      constructor(params: { message?: Raw.TypeInputBusinessGreetingMessage });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.account.UpdateBusinessGreetingMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateBusinessAwayMessage extends TLObject {
      __response__: Bool;
      message?: Raw.TypeInputBusinessAwayMessage;
      constructor(params: { message?: Raw.TypeInputBusinessAwayMessage });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateBusinessAwayMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateConnectedBot extends TLObject {
      __response__: Raw.TypeUpdates;
      canReply?: boolean;
      deleted?: boolean;
      bot: Raw.TypeInputUser;
      recipients: Raw.TypeInputBusinessBotRecipients;
      constructor(params: {
        canReply?: boolean;
        deleted?: boolean;
        bot: Raw.TypeInputUser;
        recipients: Raw.TypeInputBusinessBotRecipients;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateConnectedBot>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetConnectedBots extends TLObject {
      __response__: Raw.account.TypeConnectedBots;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetConnectedBots>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBotBusinessConnection extends TLObject {
      __response__: Raw.TypeUpdates;
      connectionId: string;
      constructor(params: { connectionId: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetBotBusinessConnection>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateBusinessIntro extends TLObject {
      __response__: Bool;
      intro?: Raw.TypeInputBusinessIntro;
      constructor(params: { intro?: Raw.TypeInputBusinessIntro });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateBusinessIntro>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleConnectedBotPaused extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      paused: Bool;
      constructor(params: { peer: Raw.TypeInputPeer; paused: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ToggleConnectedBotPaused>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DisablePeerConnectedBot extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.DisablePeerConnectedBot>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateBirthday extends TLObject {
      __response__: Bool;
      birthday?: Raw.TypeBirthday;
      constructor(params: { birthday?: Raw.TypeBirthday });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdateBirthday>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CreateBusinessChatLink extends TLObject {
      __response__: Raw.TypeBusinessChatLink;
      link: Raw.TypeInputBusinessChatLink;
      constructor(params: { link: Raw.TypeInputBusinessChatLink });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.CreateBusinessChatLink>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditBusinessChatLink extends TLObject {
      __response__: Raw.TypeBusinessChatLink;
      slug: string;
      link: Raw.TypeInputBusinessChatLink;
      constructor(params: { slug: string; link: Raw.TypeInputBusinessChatLink });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.EditBusinessChatLink>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteBusinessChatLink extends TLObject {
      __response__: Bool;
      slug: string;
      constructor(params: { slug: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.DeleteBusinessChatLink>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBusinessChatLinks extends TLObject {
      __response__: Raw.account.TypeBusinessChatLinks;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetBusinessChatLinks>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResolveBusinessChatLink extends TLObject {
      __response__: Raw.account.TypeResolvedBusinessChatLinks;
      slug: string;
      constructor(params: { slug: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ResolveBusinessChatLink>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdatePersonalChannel extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      constructor(params: { channel: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.UpdatePersonalChannel>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleSponsoredMessages extends TLObject {
      __response__: Bool;
      enabled: Bool;
      constructor(params: { enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.ToggleSponsoredMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetReactionsNotifySettings extends TLObject {
      __response__: Raw.TypeReactionsNotifySettings;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.GetReactionsNotifySettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetReactionsNotifySettings extends TLObject {
      __response__: Raw.TypeReactionsNotifySettings;
      settings: Raw.TypeReactionsNotifySettings;
      constructor(params: { settings: Raw.TypeReactionsNotifySettings });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.account.SetReactionsNotifySettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace channels {
    type TypeSponsoredMessageReportResult =
      | Raw.channels.SponsoredMessageReportResultChooseOption
      | Raw.channels.SponsoredMessageReportResultAdsHidden
      | Raw.channels.SponsoredMessageReportResultReported;
    type TypeSendAsPeers = Raw.channels.SendAsPeers;
    type TypeAdminLogResults = Raw.channels.AdminLogResults;
    type TypeChannelParticipant = Raw.channels.ChannelParticipant;
    type TypeChannelParticipants =
      | Raw.channels.ChannelParticipants
      | Raw.channels.ChannelParticipantsNotModified;
    class ChannelParticipants extends TLObject {
      count: int;
      participants: Vector<Raw.TypeChannelParticipant>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        count: int;
        participants: Vector<Raw.TypeChannelParticipant>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ChannelParticipants>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChannelParticipantsNotModified extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.channels.ChannelParticipantsNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChannelParticipant extends TLObject {
      participant: Raw.TypeChannelParticipant;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        participant: Raw.TypeChannelParticipant;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ChannelParticipant>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AdminLogResults extends TLObject {
      events: Vector<Raw.TypeChannelAdminLogEvent>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        events: Vector<Raw.TypeChannelAdminLogEvent>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.AdminLogResults>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendAsPeers extends TLObject {
      peers: Vector<Raw.TypeSendAsPeer>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        peers: Vector<Raw.TypeSendAsPeer>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.SendAsPeers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SponsoredMessageReportResultChooseOption extends TLObject {
      title: string;
      options: Vector<Raw.TypeSponsoredMessageReportOption>;
      constructor(params: { title: string; options: Vector<Raw.TypeSponsoredMessageReportOption> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.channels.SponsoredMessageReportResultChooseOption>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SponsoredMessageReportResultAdsHidden extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.channels.SponsoredMessageReportResultAdsHidden>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SponsoredMessageReportResultReported extends TLObject {
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.channels.SponsoredMessageReportResultReported>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReadHistory extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      maxId: int;
      constructor(params: { channel: Raw.TypeInputChannel; maxId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ReadHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteMessages extends TLObject {
      __response__: Raw.messages.TypeAffectedMessages;
      channel: Raw.TypeInputChannel;
      id: Vector<int>;
      constructor(params: { channel: Raw.TypeInputChannel; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.DeleteMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReportSpam extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      participant: Raw.TypeInputPeer;
      id: Vector<int>;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        participant: Raw.TypeInputPeer;
        id: Vector<int>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ReportSpam>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMessages extends TLObject {
      __response__: Raw.messages.TypeMessages;
      channel: Raw.TypeInputChannel;
      id: Vector<Raw.TypeInputMessage>;
      constructor(params: { channel: Raw.TypeInputChannel; id: Vector<Raw.TypeInputMessage> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetParticipants extends TLObject {
      __response__: Raw.channels.TypeChannelParticipants;
      channel: Raw.TypeInputChannel;
      filter: Raw.TypeChannelParticipantsFilter;
      offset: int;
      limit: int;
      hash: long;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        filter: Raw.TypeChannelParticipantsFilter;
        offset: int;
        limit: int;
        hash: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetParticipants>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetParticipant extends TLObject {
      __response__: Raw.channels.TypeChannelParticipant;
      channel: Raw.TypeInputChannel;
      participant: Raw.TypeInputPeer;
      constructor(params: { channel: Raw.TypeInputChannel; participant: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetParticipant>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetChannels extends TLObject {
      __response__: Raw.messages.TypeChats;
      id: Vector<Raw.TypeInputChannel>;
      constructor(params: { id: Vector<Raw.TypeInputChannel> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetChannels>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetFullChannel extends TLObject {
      __response__: Raw.messages.TypeChatFull;
      channel: Raw.TypeInputChannel;
      constructor(params: { channel: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetFullChannel>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CreateChannel extends TLObject {
      __response__: Raw.TypeUpdates;
      broadcast?: boolean;
      megagroup?: boolean;
      forImport?: boolean;
      forum?: boolean;
      title: string;
      about: string;
      geoPoint?: Raw.TypeInputGeoPoint;
      address?: string;
      ttlPeriod?: int;
      constructor(params: {
        broadcast?: boolean;
        megagroup?: boolean;
        forImport?: boolean;
        forum?: boolean;
        title: string;
        about: string;
        geoPoint?: Raw.TypeInputGeoPoint;
        address?: string;
        ttlPeriod?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.CreateChannel>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditAdmin extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      userId: Raw.TypeInputUser;
      adminRights: Raw.TypeChatAdminRights;
      rank: string;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        userId: Raw.TypeInputUser;
        adminRights: Raw.TypeChatAdminRights;
        rank: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.EditAdmin>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditTitle extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      title: string;
      constructor(params: { channel: Raw.TypeInputChannel; title: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.EditTitle>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditPhoto extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      photo: Raw.TypeInputChatPhoto;
      constructor(params: { channel: Raw.TypeInputChannel; photo: Raw.TypeInputChatPhoto });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.EditPhoto>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckUsername extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      username: string;
      constructor(params: { channel: Raw.TypeInputChannel; username: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.CheckUsername>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateUsername extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      username: string;
      constructor(params: { channel: Raw.TypeInputChannel; username: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.UpdateUsername>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class JoinChannel extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      constructor(params: { channel: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.JoinChannel>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class LeaveChannel extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      constructor(params: { channel: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.LeaveChannel>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InviteToChannel extends TLObject {
      __response__: Raw.messages.TypeInvitedUsers;
      channel: Raw.TypeInputChannel;
      users: Vector<Raw.TypeInputUser>;
      constructor(params: { channel: Raw.TypeInputChannel; users: Vector<Raw.TypeInputUser> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.InviteToChannel>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteChannel extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      constructor(params: { channel: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.DeleteChannel>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportMessageLink extends TLObject {
      __response__: Raw.TypeExportedMessageLink;
      grouped?: boolean;
      thread?: boolean;
      channel: Raw.TypeInputChannel;
      id: int;
      constructor(params: {
        grouped?: boolean;
        thread?: boolean;
        channel: Raw.TypeInputChannel;
        id: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ExportMessageLink>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleSignatures extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      enabled: Bool;
      constructor(params: { channel: Raw.TypeInputChannel; enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ToggleSignatures>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAdminedPublicChannels extends TLObject {
      __response__: Raw.messages.TypeChats;
      byLocation?: boolean;
      checkLimit?: boolean;
      forPersonal?: boolean;
      constructor(params: { byLocation?: boolean; checkLimit?: boolean; forPersonal?: boolean });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetAdminedPublicChannels>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditBanned extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      participant: Raw.TypeInputPeer;
      bannedRights: Raw.TypeChatBannedRights;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        participant: Raw.TypeInputPeer;
        bannedRights: Raw.TypeChatBannedRights;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.EditBanned>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAdminLog extends TLObject {
      __response__: Raw.channels.TypeAdminLogResults;
      channel: Raw.TypeInputChannel;
      q: string;
      eventsFilter?: Raw.TypeChannelAdminLogEventsFilter;
      admins?: Vector<Raw.TypeInputUser>;
      maxId: long;
      minId: long;
      limit: int;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        q: string;
        eventsFilter?: Raw.TypeChannelAdminLogEventsFilter;
        admins?: Vector<Raw.TypeInputUser>;
        maxId: long;
        minId: long;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetAdminLog>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetStickers extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      stickerset: Raw.TypeInputStickerSet;
      constructor(params: { channel: Raw.TypeInputChannel; stickerset: Raw.TypeInputStickerSet });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.SetStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReadMessageContents extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      id: Vector<int>;
      constructor(params: { channel: Raw.TypeInputChannel; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ReadMessageContents>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteHistory extends TLObject {
      __response__: Raw.TypeUpdates;
      forEveryone?: boolean;
      channel: Raw.TypeInputChannel;
      maxId: int;
      constructor(params: { forEveryone?: boolean; channel: Raw.TypeInputChannel; maxId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.DeleteHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TogglePreHistoryHidden extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      enabled: Bool;
      constructor(params: { channel: Raw.TypeInputChannel; enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.TogglePreHistoryHidden>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetLeftChannels extends TLObject {
      __response__: Raw.messages.TypeChats;
      offset: int;
      constructor(params: { offset: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetLeftChannels>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetGroupsForDiscussion extends TLObject {
      __response__: Raw.messages.TypeChats;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetGroupsForDiscussion>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetDiscussionGroup extends TLObject {
      __response__: Bool;
      broadcast: Raw.TypeInputChannel;
      group: Raw.TypeInputChannel;
      constructor(params: { broadcast: Raw.TypeInputChannel; group: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.SetDiscussionGroup>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditCreator extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      userId: Raw.TypeInputUser;
      password: Raw.TypeInputCheckPasswordSRP;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        userId: Raw.TypeInputUser;
        password: Raw.TypeInputCheckPasswordSRP;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.EditCreator>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditLocation extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      geoPoint: Raw.TypeInputGeoPoint;
      address: string;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        geoPoint: Raw.TypeInputGeoPoint;
        address: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.EditLocation>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleSlowMode extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      seconds: int;
      constructor(params: { channel: Raw.TypeInputChannel; seconds: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ToggleSlowMode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetInactiveChannels extends TLObject {
      __response__: Raw.messages.TypeInactiveChats;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetInactiveChannels>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ConvertToGigagroup extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      constructor(params: { channel: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ConvertToGigagroup>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ViewSponsoredMessage extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      randomId: bytes;
      constructor(params: { channel: Raw.TypeInputChannel; randomId: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ViewSponsoredMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSponsoredMessages extends TLObject {
      __response__: Raw.messages.TypeSponsoredMessages;
      channel: Raw.TypeInputChannel;
      constructor(params: { channel: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetSponsoredMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSendAs extends TLObject {
      __response__: Raw.channels.TypeSendAsPeers;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetSendAs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteParticipantHistory extends TLObject {
      __response__: Raw.messages.TypeAffectedHistory;
      channel: Raw.TypeInputChannel;
      participant: Raw.TypeInputPeer;
      constructor(params: { channel: Raw.TypeInputChannel; participant: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.DeleteParticipantHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleJoinToSend extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      enabled: Bool;
      constructor(params: { channel: Raw.TypeInputChannel; enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ToggleJoinToSend>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleJoinRequest extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      enabled: Bool;
      constructor(params: { channel: Raw.TypeInputChannel; enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ToggleJoinRequest>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReorderUsernames extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      order: Vector<string>;
      constructor(params: { channel: Raw.TypeInputChannel; order: Vector<string> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ReorderUsernames>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleUsername extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      username: string;
      active: Bool;
      constructor(params: { channel: Raw.TypeInputChannel; username: string; active: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ToggleUsername>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeactivateAllUsernames extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      constructor(params: { channel: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.DeactivateAllUsernames>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleForum extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      enabled: Bool;
      constructor(params: { channel: Raw.TypeInputChannel; enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ToggleForum>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CreateForumTopic extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      title: string;
      iconColor?: int;
      iconEmojiId?: long;
      randomId: long;
      sendAs?: Raw.TypeInputPeer;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        title: string;
        iconColor?: int;
        iconEmojiId?: long;
        randomId: long;
        sendAs?: Raw.TypeInputPeer;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.CreateForumTopic>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetForumTopics extends TLObject {
      __response__: Raw.messages.TypeForumTopics;
      channel: Raw.TypeInputChannel;
      q?: string;
      offsetDate: int;
      offsetId: int;
      offsetTopic: int;
      limit: int;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        q?: string;
        offsetDate: int;
        offsetId: int;
        offsetTopic: int;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetForumTopics>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetForumTopicsByID extends TLObject {
      __response__: Raw.messages.TypeForumTopics;
      channel: Raw.TypeInputChannel;
      topics: Vector<int>;
      constructor(params: { channel: Raw.TypeInputChannel; topics: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetForumTopicsByID>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditForumTopic extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      topicId: int;
      title?: string;
      iconEmojiId?: long;
      closed?: Bool;
      hidden?: Bool;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        topicId: int;
        title?: string;
        iconEmojiId?: long;
        closed?: Bool;
        hidden?: Bool;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.EditForumTopic>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdatePinnedForumTopic extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      topicId: int;
      pinned: Bool;
      constructor(params: { channel: Raw.TypeInputChannel; topicId: int; pinned: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.UpdatePinnedForumTopic>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteTopicHistory extends TLObject {
      __response__: Raw.messages.TypeAffectedHistory;
      channel: Raw.TypeInputChannel;
      topMsgId: int;
      constructor(params: { channel: Raw.TypeInputChannel; topMsgId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.DeleteTopicHistory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReorderPinnedForumTopics extends TLObject {
      __response__: Raw.TypeUpdates;
      force?: boolean;
      channel: Raw.TypeInputChannel;
      order: Vector<int>;
      constructor(params: { force?: boolean; channel: Raw.TypeInputChannel; order: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ReorderPinnedForumTopics>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleAntiSpam extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      enabled: Bool;
      constructor(params: { channel: Raw.TypeInputChannel; enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ToggleAntiSpam>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReportAntiSpamFalsePositive extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      msgId: int;
      constructor(params: { channel: Raw.TypeInputChannel; msgId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.channels.ReportAntiSpamFalsePositive>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleParticipantsHidden extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      enabled: Bool;
      constructor(params: { channel: Raw.TypeInputChannel; enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ToggleParticipantsHidden>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ClickSponsoredMessage extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      randomId: bytes;
      constructor(params: { channel: Raw.TypeInputChannel; randomId: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ClickSponsoredMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateColor extends TLObject {
      __response__: Raw.TypeUpdates;
      forProfile?: boolean;
      channel: Raw.TypeInputChannel;
      color?: int;
      backgroundEmojiId?: long;
      constructor(params: {
        forProfile?: boolean;
        channel: Raw.TypeInputChannel;
        color?: int;
        backgroundEmojiId?: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.UpdateColor>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleViewForumAsMessages extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      enabled: Bool;
      constructor(params: { channel: Raw.TypeInputChannel; enabled: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ToggleViewForumAsMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetChannelRecommendations extends TLObject {
      __response__: Raw.messages.TypeChats;
      channel?: Raw.TypeInputChannel;
      constructor(params: { channel?: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.GetChannelRecommendations>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateEmojiStatus extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      emojiStatus: Raw.TypeEmojiStatus;
      constructor(params: { channel: Raw.TypeInputChannel; emojiStatus: Raw.TypeEmojiStatus });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.UpdateEmojiStatus>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetBoostsToUnblockRestrictions extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      boosts: int;
      constructor(params: { channel: Raw.TypeInputChannel; boosts: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.channels.SetBoostsToUnblockRestrictions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetEmojiStickers extends TLObject {
      __response__: Bool;
      channel: Raw.TypeInputChannel;
      stickerset: Raw.TypeInputStickerSet;
      constructor(params: { channel: Raw.TypeInputChannel; stickerset: Raw.TypeInputStickerSet });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.SetEmojiStickers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReportSponsoredMessage extends TLObject {
      __response__: Raw.channels.TypeSponsoredMessageReportResult;
      channel: Raw.TypeInputChannel;
      randomId: bytes;
      option: bytes;
      constructor(params: { channel: Raw.TypeInputChannel; randomId: bytes; option: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.ReportSponsoredMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RestrictSponsoredMessages extends TLObject {
      __response__: Raw.TypeUpdates;
      channel: Raw.TypeInputChannel;
      restricted: Bool;
      constructor(params: { channel: Raw.TypeInputChannel; restricted: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.channels.RestrictSponsoredMessages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace payments {
    type TypeGiveawayInfo = Raw.payments.GiveawayInfo | Raw.payments.GiveawayInfoResults;
    type TypeCheckedGiftCode = Raw.payments.CheckedGiftCode;
    type TypeExportedInvoice = Raw.payments.ExportedInvoice;
    type TypeBankCardData = Raw.payments.BankCardData;
    type TypeSavedInfo = Raw.payments.SavedInfo;
    type TypePaymentResult = Raw.payments.PaymentResult | Raw.payments.PaymentVerificationNeeded;
    type TypeValidatedRequestedInfo = Raw.payments.ValidatedRequestedInfo;
    type TypePaymentReceipt = Raw.payments.PaymentReceipt;
    type TypePaymentForm = Raw.payments.PaymentForm;
    class PaymentForm extends TLObject {
      canSaveCredentials?: boolean;
      passwordMissing?: boolean;
      formId: long;
      botId: long;
      title: string;
      description: string;
      photo?: Raw.TypeWebDocument;
      invoice: Raw.TypeInvoice;
      providerId: long;
      url: string;
      nativeProvider?: string;
      nativeParams?: Raw.TypeDataJSON;
      additionalMethods?: Vector<Raw.TypePaymentFormMethod>;
      savedInfo?: Raw.TypePaymentRequestedInfo;
      savedCredentials?: Vector<Raw.TypePaymentSavedCredentials>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        canSaveCredentials?: boolean;
        passwordMissing?: boolean;
        formId: long;
        botId: long;
        title: string;
        description: string;
        photo?: Raw.TypeWebDocument;
        invoice: Raw.TypeInvoice;
        providerId: long;
        url: string;
        nativeProvider?: string;
        nativeParams?: Raw.TypeDataJSON;
        additionalMethods?: Vector<Raw.TypePaymentFormMethod>;
        savedInfo?: Raw.TypePaymentRequestedInfo;
        savedCredentials?: Vector<Raw.TypePaymentSavedCredentials>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.PaymentForm>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ValidatedRequestedInfo extends TLObject {
      id?: string;
      shippingOptions?: Vector<Raw.TypeShippingOption>;
      constructor(params: { id?: string; shippingOptions?: Vector<Raw.TypeShippingOption> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.ValidatedRequestedInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PaymentResult extends TLObject {
      updates: Raw.TypeUpdates;
      constructor(params: { updates: Raw.TypeUpdates });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.PaymentResult>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PaymentVerificationNeeded extends TLObject {
      url: string;
      constructor(params: { url: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.PaymentVerificationNeeded>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PaymentReceipt extends TLObject {
      date: int;
      botId: long;
      providerId: long;
      title: string;
      description: string;
      photo?: Raw.TypeWebDocument;
      invoice: Raw.TypeInvoice;
      info?: Raw.TypePaymentRequestedInfo;
      shipping?: Raw.TypeShippingOption;
      tipAmount?: long;
      currency: string;
      totalAmount: long;
      credentialsTitle: string;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        date: int;
        botId: long;
        providerId: long;
        title: string;
        description: string;
        photo?: Raw.TypeWebDocument;
        invoice: Raw.TypeInvoice;
        info?: Raw.TypePaymentRequestedInfo;
        shipping?: Raw.TypeShippingOption;
        tipAmount?: long;
        currency: string;
        totalAmount: long;
        credentialsTitle: string;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.PaymentReceipt>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SavedInfo extends TLObject {
      hasSavedCredentials?: boolean;
      savedInfo?: Raw.TypePaymentRequestedInfo;
      constructor(params: {
        hasSavedCredentials?: boolean;
        savedInfo?: Raw.TypePaymentRequestedInfo;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.SavedInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BankCardData extends TLObject {
      title: string;
      openUrls: Vector<Raw.TypeBankCardOpenUrl>;
      constructor(params: { title: string; openUrls: Vector<Raw.TypeBankCardOpenUrl> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.BankCardData>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportedInvoice extends TLObject {
      url: string;
      constructor(params: { url: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.ExportedInvoice>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckedGiftCode extends TLObject {
      viaGiveaway?: boolean;
      fromId?: Raw.TypePeer;
      giveawayMsgId?: int;
      toId?: long;
      date: int;
      months: int;
      usedDate?: int;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        viaGiveaway?: boolean;
        fromId?: Raw.TypePeer;
        giveawayMsgId?: int;
        toId?: long;
        date: int;
        months: int;
        usedDate?: int;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.CheckedGiftCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GiveawayInfo extends TLObject {
      participating?: boolean;
      preparingResults?: boolean;
      startDate: int;
      joinedTooEarlyDate?: int;
      adminDisallowedChatId?: long;
      disallowedCountry?: string;
      constructor(params: {
        participating?: boolean;
        preparingResults?: boolean;
        startDate: int;
        joinedTooEarlyDate?: int;
        adminDisallowedChatId?: long;
        disallowedCountry?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.GiveawayInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GiveawayInfoResults extends TLObject {
      winner?: boolean;
      refunded?: boolean;
      startDate: int;
      giftCodeSlug?: string;
      finishDate: int;
      winnersCount: int;
      activatedCount: int;
      constructor(params: {
        winner?: boolean;
        refunded?: boolean;
        startDate: int;
        giftCodeSlug?: string;
        finishDate: int;
        winnersCount: int;
        activatedCount: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.GiveawayInfoResults>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPaymentForm extends TLObject {
      __response__: Raw.payments.TypePaymentForm;
      invoice: Raw.TypeInputInvoice;
      themeParams?: Raw.TypeDataJSON;
      constructor(params: { invoice: Raw.TypeInputInvoice; themeParams?: Raw.TypeDataJSON });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.GetPaymentForm>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPaymentReceipt extends TLObject {
      __response__: Raw.payments.TypePaymentReceipt;
      peer: Raw.TypeInputPeer;
      msgId: int;
      constructor(params: { peer: Raw.TypeInputPeer; msgId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.GetPaymentReceipt>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ValidateRequestedInfo extends TLObject {
      __response__: Raw.payments.TypeValidatedRequestedInfo;
      save?: boolean;
      invoice: Raw.TypeInputInvoice;
      info: Raw.TypePaymentRequestedInfo;
      constructor(params: {
        save?: boolean;
        invoice: Raw.TypeInputInvoice;
        info: Raw.TypePaymentRequestedInfo;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.ValidateRequestedInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendPaymentForm extends TLObject {
      __response__: Raw.payments.TypePaymentResult;
      formId: long;
      invoice: Raw.TypeInputInvoice;
      requestedInfoId?: string;
      shippingOptionId?: string;
      credentials: Raw.TypeInputPaymentCredentials;
      tipAmount?: long;
      constructor(params: {
        formId: long;
        invoice: Raw.TypeInputInvoice;
        requestedInfoId?: string;
        shippingOptionId?: string;
        credentials: Raw.TypeInputPaymentCredentials;
        tipAmount?: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.SendPaymentForm>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSavedInfo extends TLObject {
      __response__: Raw.payments.TypeSavedInfo;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.GetSavedInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ClearSavedInfo extends TLObject {
      __response__: Bool;
      credentials?: boolean;
      info?: boolean;
      constructor(params: { credentials?: boolean; info?: boolean });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.ClearSavedInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBankCardData extends TLObject {
      __response__: Raw.payments.TypeBankCardData;
      number: string;
      constructor(params: { number: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.GetBankCardData>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportInvoice extends TLObject {
      __response__: Raw.payments.TypeExportedInvoice;
      invoiceMedia: Raw.TypeInputMedia;
      constructor(params: { invoiceMedia: Raw.TypeInputMedia });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.ExportInvoice>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AssignAppStoreTransaction extends TLObject {
      __response__: Raw.TypeUpdates;
      receipt: bytes;
      purpose: Raw.TypeInputStorePaymentPurpose;
      constructor(params: { receipt: bytes; purpose: Raw.TypeInputStorePaymentPurpose });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.AssignAppStoreTransaction>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AssignPlayMarketTransaction extends TLObject {
      __response__: Raw.TypeUpdates;
      receipt: Raw.TypeDataJSON;
      purpose: Raw.TypeInputStorePaymentPurpose;
      constructor(params: { receipt: Raw.TypeDataJSON; purpose: Raw.TypeInputStorePaymentPurpose });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.payments.AssignPlayMarketTransaction>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CanPurchasePremium extends TLObject {
      __response__: Bool;
      purpose: Raw.TypeInputStorePaymentPurpose;
      constructor(params: { purpose: Raw.TypeInputStorePaymentPurpose });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.CanPurchasePremium>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPremiumGiftCodeOptions extends TLObject {
      __response__: Vector<Raw.TypePremiumGiftCodeOption>;
      boostPeer?: Raw.TypeInputPeer;
      constructor(params: { boostPeer?: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.GetPremiumGiftCodeOptions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckGiftCode extends TLObject {
      __response__: Raw.payments.TypeCheckedGiftCode;
      slug: string;
      constructor(params: { slug: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.CheckGiftCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ApplyGiftCode extends TLObject {
      __response__: Raw.TypeUpdates;
      slug: string;
      constructor(params: { slug: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.ApplyGiftCode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetGiveawayInfo extends TLObject {
      __response__: Raw.payments.TypeGiveawayInfo;
      peer: Raw.TypeInputPeer;
      msgId: int;
      constructor(params: { peer: Raw.TypeInputPeer; msgId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.GetGiveawayInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class LaunchPrepaidGiveaway extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      giveawayId: long;
      purpose: Raw.TypeInputStorePaymentPurpose;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        giveawayId: long;
        purpose: Raw.TypeInputStorePaymentPurpose;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.payments.LaunchPrepaidGiveaway>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace phone {
    type TypeGroupCallStreamRtmpUrl = Raw.phone.GroupCallStreamRtmpUrl;
    type TypeGroupCallStreamChannels = Raw.phone.GroupCallStreamChannels;
    type TypeExportedGroupCallInvite = Raw.phone.ExportedGroupCallInvite;
    type TypeJoinAsPeers = Raw.phone.JoinAsPeers;
    type TypeGroupParticipants = Raw.phone.GroupParticipants;
    type TypeGroupCall = Raw.phone.GroupCall;
    type TypePhoneCall = Raw.phone.PhoneCall;
    class PhoneCall extends TLObject {
      phoneCall: Raw.TypePhoneCall;
      users: Vector<Raw.TypeUser>;
      constructor(params: { phoneCall: Raw.TypePhoneCall; users: Vector<Raw.TypeUser> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.PhoneCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GroupCall extends TLObject {
      call: Raw.TypeGroupCall;
      participants: Vector<Raw.TypeGroupCallParticipant>;
      participantsNextOffset: string;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        call: Raw.TypeGroupCall;
        participants: Vector<Raw.TypeGroupCallParticipant>;
        participantsNextOffset: string;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.GroupCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GroupParticipants extends TLObject {
      count: int;
      participants: Vector<Raw.TypeGroupCallParticipant>;
      nextOffset: string;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      version: int;
      constructor(params: {
        count: int;
        participants: Vector<Raw.TypeGroupCallParticipant>;
        nextOffset: string;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
        version: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.GroupParticipants>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class JoinAsPeers extends TLObject {
      peers: Vector<Raw.TypePeer>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        peers: Vector<Raw.TypePeer>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.JoinAsPeers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportedGroupCallInvite extends TLObject {
      link: string;
      constructor(params: { link: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.ExportedGroupCallInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GroupCallStreamChannels extends TLObject {
      channels: Vector<Raw.TypeGroupCallStreamChannel>;
      constructor(params: { channels: Vector<Raw.TypeGroupCallStreamChannel> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.GroupCallStreamChannels>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GroupCallStreamRtmpUrl extends TLObject {
      url: string;
      key: string;
      constructor(params: { url: string; key: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.GroupCallStreamRtmpUrl>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetCallConfig extends TLObject {
      __response__: Raw.TypeDataJSON;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.GetCallConfig>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RequestCall extends TLObject {
      __response__: Raw.phone.TypePhoneCall;
      video?: boolean;
      userId: Raw.TypeInputUser;
      randomId: int;
      gAHash: bytes;
      protocol: Raw.TypePhoneCallProtocol;
      constructor(params: {
        video?: boolean;
        userId: Raw.TypeInputUser;
        randomId: int;
        gAHash: bytes;
        protocol: Raw.TypePhoneCallProtocol;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.RequestCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AcceptCall extends TLObject {
      __response__: Raw.phone.TypePhoneCall;
      peer: Raw.TypeInputPhoneCall;
      gB: bytes;
      protocol: Raw.TypePhoneCallProtocol;
      constructor(params: {
        peer: Raw.TypeInputPhoneCall;
        gB: bytes;
        protocol: Raw.TypePhoneCallProtocol;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.AcceptCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ConfirmCall extends TLObject {
      __response__: Raw.phone.TypePhoneCall;
      peer: Raw.TypeInputPhoneCall;
      gA: bytes;
      keyFingerprint: long;
      protocol: Raw.TypePhoneCallProtocol;
      constructor(params: {
        peer: Raw.TypeInputPhoneCall;
        gA: bytes;
        keyFingerprint: long;
        protocol: Raw.TypePhoneCallProtocol;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.ConfirmCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReceivedCall extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPhoneCall;
      constructor(params: { peer: Raw.TypeInputPhoneCall });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.ReceivedCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DiscardCall extends TLObject {
      __response__: Raw.TypeUpdates;
      video?: boolean;
      peer: Raw.TypeInputPhoneCall;
      duration: int;
      reason: Raw.TypePhoneCallDiscardReason;
      connectionId: long;
      constructor(params: {
        video?: boolean;
        peer: Raw.TypeInputPhoneCall;
        duration: int;
        reason: Raw.TypePhoneCallDiscardReason;
        connectionId: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.DiscardCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetCallRating extends TLObject {
      __response__: Raw.TypeUpdates;
      userInitiative?: boolean;
      peer: Raw.TypeInputPhoneCall;
      rating: int;
      comment: string;
      constructor(params: {
        userInitiative?: boolean;
        peer: Raw.TypeInputPhoneCall;
        rating: int;
        comment: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.SetCallRating>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveCallDebug extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPhoneCall;
      debug: Raw.TypeDataJSON;
      constructor(params: { peer: Raw.TypeInputPhoneCall; debug: Raw.TypeDataJSON });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.SaveCallDebug>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendSignalingData extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPhoneCall;
      data: bytes;
      constructor(params: { peer: Raw.TypeInputPhoneCall; data: bytes });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.SendSignalingData>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CreateGroupCall extends TLObject {
      __response__: Raw.TypeUpdates;
      rtmpStream?: boolean;
      peer: Raw.TypeInputPeer;
      randomId: int;
      title?: string;
      scheduleDate?: int;
      constructor(params: {
        rtmpStream?: boolean;
        peer: Raw.TypeInputPeer;
        randomId: int;
        title?: string;
        scheduleDate?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.CreateGroupCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class JoinGroupCall extends TLObject {
      __response__: Raw.TypeUpdates;
      muted?: boolean;
      videoStopped?: boolean;
      call: Raw.TypeInputGroupCall;
      joinAs: Raw.TypeInputPeer;
      inviteHash?: string;
      params: Raw.TypeDataJSON;
      constructor(params: {
        muted?: boolean;
        videoStopped?: boolean;
        call: Raw.TypeInputGroupCall;
        joinAs: Raw.TypeInputPeer;
        inviteHash?: string;
        params: Raw.TypeDataJSON;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.JoinGroupCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class LeaveGroupCall extends TLObject {
      __response__: Raw.TypeUpdates;
      call: Raw.TypeInputGroupCall;
      source: int;
      constructor(params: { call: Raw.TypeInputGroupCall; source: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.LeaveGroupCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InviteToGroupCall extends TLObject {
      __response__: Raw.TypeUpdates;
      call: Raw.TypeInputGroupCall;
      users: Vector<Raw.TypeInputUser>;
      constructor(params: { call: Raw.TypeInputGroupCall; users: Vector<Raw.TypeInputUser> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.InviteToGroupCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DiscardGroupCall extends TLObject {
      __response__: Raw.TypeUpdates;
      call: Raw.TypeInputGroupCall;
      constructor(params: { call: Raw.TypeInputGroupCall });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.DiscardGroupCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleGroupCallSettings extends TLObject {
      __response__: Raw.TypeUpdates;
      resetInviteHash?: boolean;
      call: Raw.TypeInputGroupCall;
      joinMuted?: Bool;
      constructor(params: {
        resetInviteHash?: boolean;
        call: Raw.TypeInputGroupCall;
        joinMuted?: Bool;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.ToggleGroupCallSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetGroupCall extends TLObject {
      __response__: Raw.phone.TypeGroupCall;
      call: Raw.TypeInputGroupCall;
      limit: int;
      constructor(params: { call: Raw.TypeInputGroupCall; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.GetGroupCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetGroupParticipants extends TLObject {
      __response__: Raw.phone.TypeGroupParticipants;
      call: Raw.TypeInputGroupCall;
      ids: Vector<Raw.TypeInputPeer>;
      sources: Vector<int>;
      offset: string;
      limit: int;
      constructor(params: {
        call: Raw.TypeInputGroupCall;
        ids: Vector<Raw.TypeInputPeer>;
        sources: Vector<int>;
        offset: string;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.GetGroupParticipants>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckGroupCall extends TLObject {
      __response__: Vector<int>;
      call: Raw.TypeInputGroupCall;
      sources: Vector<int>;
      constructor(params: { call: Raw.TypeInputGroupCall; sources: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.CheckGroupCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleGroupCallRecord extends TLObject {
      __response__: Raw.TypeUpdates;
      start?: boolean;
      video?: boolean;
      call: Raw.TypeInputGroupCall;
      title?: string;
      videoPortrait?: Bool;
      constructor(params: {
        start?: boolean;
        video?: boolean;
        call: Raw.TypeInputGroupCall;
        title?: string;
        videoPortrait?: Bool;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.ToggleGroupCallRecord>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditGroupCallParticipant extends TLObject {
      __response__: Raw.TypeUpdates;
      call: Raw.TypeInputGroupCall;
      participant: Raw.TypeInputPeer;
      muted?: Bool;
      volume?: int;
      raiseHand?: Bool;
      videoStopped?: Bool;
      videoPaused?: Bool;
      presentationPaused?: Bool;
      constructor(params: {
        call: Raw.TypeInputGroupCall;
        participant: Raw.TypeInputPeer;
        muted?: Bool;
        volume?: int;
        raiseHand?: Bool;
        videoStopped?: Bool;
        videoPaused?: Bool;
        presentationPaused?: Bool;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.EditGroupCallParticipant>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditGroupCallTitle extends TLObject {
      __response__: Raw.TypeUpdates;
      call: Raw.TypeInputGroupCall;
      title: string;
      constructor(params: { call: Raw.TypeInputGroupCall; title: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.EditGroupCallTitle>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetGroupCallJoinAs extends TLObject {
      __response__: Raw.phone.TypeJoinAsPeers;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.GetGroupCallJoinAs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportGroupCallInvite extends TLObject {
      __response__: Raw.phone.TypeExportedGroupCallInvite;
      canSelfUnmute?: boolean;
      call: Raw.TypeInputGroupCall;
      constructor(params: { canSelfUnmute?: boolean; call: Raw.TypeInputGroupCall });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.ExportGroupCallInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleGroupCallStartSubscription extends TLObject {
      __response__: Raw.TypeUpdates;
      call: Raw.TypeInputGroupCall;
      subscribed: Bool;
      constructor(params: { call: Raw.TypeInputGroupCall; subscribed: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.phone.ToggleGroupCallStartSubscription>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StartScheduledGroupCall extends TLObject {
      __response__: Raw.TypeUpdates;
      call: Raw.TypeInputGroupCall;
      constructor(params: { call: Raw.TypeInputGroupCall });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.StartScheduledGroupCall>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveDefaultGroupCallJoinAs extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      joinAs: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer; joinAs: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.SaveDefaultGroupCallJoinAs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class JoinGroupCallPresentation extends TLObject {
      __response__: Raw.TypeUpdates;
      call: Raw.TypeInputGroupCall;
      params: Raw.TypeDataJSON;
      constructor(params: { call: Raw.TypeInputGroupCall; params: Raw.TypeDataJSON });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.JoinGroupCallPresentation>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class LeaveGroupCallPresentation extends TLObject {
      __response__: Raw.TypeUpdates;
      call: Raw.TypeInputGroupCall;
      constructor(params: { call: Raw.TypeInputGroupCall });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.LeaveGroupCallPresentation>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetGroupCallStreamChannels extends TLObject {
      __response__: Raw.phone.TypeGroupCallStreamChannels;
      call: Raw.TypeInputGroupCall;
      constructor(params: { call: Raw.TypeInputGroupCall });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.GetGroupCallStreamChannels>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetGroupCallStreamRtmpUrl extends TLObject {
      __response__: Raw.phone.TypeGroupCallStreamRtmpUrl;
      peer: Raw.TypeInputPeer;
      revoke: Bool;
      constructor(params: { peer: Raw.TypeInputPeer; revoke: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.GetGroupCallStreamRtmpUrl>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SaveCallLog extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPhoneCall;
      file: Raw.TypeInputFile;
      constructor(params: { peer: Raw.TypeInputPhoneCall; file: Raw.TypeInputFile });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.phone.SaveCallLog>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace stats {
    type TypeBroadcastRevenueTransactions = Raw.stats.BroadcastRevenueTransactions;
    type TypeBroadcastRevenueWithdrawalUrl = Raw.stats.BroadcastRevenueWithdrawalUrl;
    type TypeBroadcastRevenueStats = Raw.stats.BroadcastRevenueStats;
    type TypeStoryStats = Raw.stats.StoryStats;
    type TypeMessageStats = Raw.stats.MessageStats;
    type TypePublicForwards = Raw.stats.PublicForwards;
    type TypeMegagroupStats = Raw.stats.MegagroupStats;
    type TypeBroadcastStats = Raw.stats.BroadcastStats;
    class BroadcastStats extends TLObject {
      period: Raw.TypeStatsDateRangeDays;
      followers: Raw.TypeStatsAbsValueAndPrev;
      viewsPerPost: Raw.TypeStatsAbsValueAndPrev;
      sharesPerPost: Raw.TypeStatsAbsValueAndPrev;
      reactionsPerPost: Raw.TypeStatsAbsValueAndPrev;
      viewsPerStory: Raw.TypeStatsAbsValueAndPrev;
      sharesPerStory: Raw.TypeStatsAbsValueAndPrev;
      reactionsPerStory: Raw.TypeStatsAbsValueAndPrev;
      enabledNotifications: Raw.TypeStatsPercentValue;
      growthGraph: Raw.TypeStatsGraph;
      followersGraph: Raw.TypeStatsGraph;
      muteGraph: Raw.TypeStatsGraph;
      topHoursGraph: Raw.TypeStatsGraph;
      interactionsGraph: Raw.TypeStatsGraph;
      ivInteractionsGraph: Raw.TypeStatsGraph;
      viewsBySourceGraph: Raw.TypeStatsGraph;
      newFollowersBySourceGraph: Raw.TypeStatsGraph;
      languagesGraph: Raw.TypeStatsGraph;
      reactionsByEmotionGraph: Raw.TypeStatsGraph;
      storyInteractionsGraph: Raw.TypeStatsGraph;
      storyReactionsByEmotionGraph: Raw.TypeStatsGraph;
      recentPostsInteractions: Vector<Raw.TypePostInteractionCounters>;
      constructor(params: {
        period: Raw.TypeStatsDateRangeDays;
        followers: Raw.TypeStatsAbsValueAndPrev;
        viewsPerPost: Raw.TypeStatsAbsValueAndPrev;
        sharesPerPost: Raw.TypeStatsAbsValueAndPrev;
        reactionsPerPost: Raw.TypeStatsAbsValueAndPrev;
        viewsPerStory: Raw.TypeStatsAbsValueAndPrev;
        sharesPerStory: Raw.TypeStatsAbsValueAndPrev;
        reactionsPerStory: Raw.TypeStatsAbsValueAndPrev;
        enabledNotifications: Raw.TypeStatsPercentValue;
        growthGraph: Raw.TypeStatsGraph;
        followersGraph: Raw.TypeStatsGraph;
        muteGraph: Raw.TypeStatsGraph;
        topHoursGraph: Raw.TypeStatsGraph;
        interactionsGraph: Raw.TypeStatsGraph;
        ivInteractionsGraph: Raw.TypeStatsGraph;
        viewsBySourceGraph: Raw.TypeStatsGraph;
        newFollowersBySourceGraph: Raw.TypeStatsGraph;
        languagesGraph: Raw.TypeStatsGraph;
        reactionsByEmotionGraph: Raw.TypeStatsGraph;
        storyInteractionsGraph: Raw.TypeStatsGraph;
        storyReactionsByEmotionGraph: Raw.TypeStatsGraph;
        recentPostsInteractions: Vector<Raw.TypePostInteractionCounters>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.BroadcastStats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class MegagroupStats extends TLObject {
      period: Raw.TypeStatsDateRangeDays;
      members: Raw.TypeStatsAbsValueAndPrev;
      messages: Raw.TypeStatsAbsValueAndPrev;
      viewers: Raw.TypeStatsAbsValueAndPrev;
      posters: Raw.TypeStatsAbsValueAndPrev;
      growthGraph: Raw.TypeStatsGraph;
      membersGraph: Raw.TypeStatsGraph;
      newMembersBySourceGraph: Raw.TypeStatsGraph;
      languagesGraph: Raw.TypeStatsGraph;
      messagesGraph: Raw.TypeStatsGraph;
      actionsGraph: Raw.TypeStatsGraph;
      topHoursGraph: Raw.TypeStatsGraph;
      weekdaysGraph: Raw.TypeStatsGraph;
      topPosters: Vector<Raw.TypeStatsGroupTopPoster>;
      topAdmins: Vector<Raw.TypeStatsGroupTopAdmin>;
      topInviters: Vector<Raw.TypeStatsGroupTopInviter>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        period: Raw.TypeStatsDateRangeDays;
        members: Raw.TypeStatsAbsValueAndPrev;
        messages: Raw.TypeStatsAbsValueAndPrev;
        viewers: Raw.TypeStatsAbsValueAndPrev;
        posters: Raw.TypeStatsAbsValueAndPrev;
        growthGraph: Raw.TypeStatsGraph;
        membersGraph: Raw.TypeStatsGraph;
        newMembersBySourceGraph: Raw.TypeStatsGraph;
        languagesGraph: Raw.TypeStatsGraph;
        messagesGraph: Raw.TypeStatsGraph;
        actionsGraph: Raw.TypeStatsGraph;
        topHoursGraph: Raw.TypeStatsGraph;
        weekdaysGraph: Raw.TypeStatsGraph;
        topPosters: Vector<Raw.TypeStatsGroupTopPoster>;
        topAdmins: Vector<Raw.TypeStatsGroupTopAdmin>;
        topInviters: Vector<Raw.TypeStatsGroupTopInviter>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.MegagroupStats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class MessageStats extends TLObject {
      viewsGraph: Raw.TypeStatsGraph;
      reactionsByEmotionGraph: Raw.TypeStatsGraph;
      constructor(params: {
        viewsGraph: Raw.TypeStatsGraph;
        reactionsByEmotionGraph: Raw.TypeStatsGraph;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.MessageStats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StoryStats extends TLObject {
      viewsGraph: Raw.TypeStatsGraph;
      reactionsByEmotionGraph: Raw.TypeStatsGraph;
      constructor(params: {
        viewsGraph: Raw.TypeStatsGraph;
        reactionsByEmotionGraph: Raw.TypeStatsGraph;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.StoryStats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PublicForwards extends TLObject {
      count: int;
      forwards: Vector<Raw.TypePublicForward>;
      nextOffset?: string;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        count: int;
        forwards: Vector<Raw.TypePublicForward>;
        nextOffset?: string;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.PublicForwards>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BroadcastRevenueStats extends TLObject {
      topHoursGraph: Raw.TypeStatsGraph;
      revenueGraph: Raw.TypeStatsGraph;
      currentBalance: long;
      availableBalance: long;
      overallRevenue: long;
      usdRate: double;
      constructor(params: {
        topHoursGraph: Raw.TypeStatsGraph;
        revenueGraph: Raw.TypeStatsGraph;
        currentBalance: long;
        availableBalance: long;
        overallRevenue: long;
        usdRate: double;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.BroadcastRevenueStats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BroadcastRevenueWithdrawalUrl extends TLObject {
      url: string;
      constructor(params: { url: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.stats.BroadcastRevenueWithdrawalUrl>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BroadcastRevenueTransactions extends TLObject {
      count: int;
      transactions: Vector<Raw.TypeBroadcastRevenueTransaction>;
      constructor(params: {
        count: int;
        transactions: Vector<Raw.TypeBroadcastRevenueTransaction>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.BroadcastRevenueTransactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBroadcastStats extends TLObject {
      __response__: Raw.stats.TypeBroadcastStats;
      dark?: boolean;
      channel: Raw.TypeInputChannel;
      constructor(params: { dark?: boolean; channel: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.GetBroadcastStats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class LoadAsyncGraph extends TLObject {
      __response__: Raw.TypeStatsGraph;
      token: string;
      x?: long;
      constructor(params: { token: string; x?: long });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.LoadAsyncGraph>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMegagroupStats extends TLObject {
      __response__: Raw.stats.TypeMegagroupStats;
      dark?: boolean;
      channel: Raw.TypeInputChannel;
      constructor(params: { dark?: boolean; channel: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.GetMegagroupStats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMessagePublicForwards extends TLObject {
      __response__: Raw.stats.TypePublicForwards;
      channel: Raw.TypeInputChannel;
      msgId: int;
      offset: string;
      limit: int;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        msgId: int;
        offset: string;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.GetMessagePublicForwards>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMessageStats extends TLObject {
      __response__: Raw.stats.TypeMessageStats;
      dark?: boolean;
      channel: Raw.TypeInputChannel;
      msgId: int;
      constructor(params: { dark?: boolean; channel: Raw.TypeInputChannel; msgId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.GetMessageStats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStoryStats extends TLObject {
      __response__: Raw.stats.TypeStoryStats;
      dark?: boolean;
      peer: Raw.TypeInputPeer;
      id: int;
      constructor(params: { dark?: boolean; peer: Raw.TypeInputPeer; id: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.GetStoryStats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStoryPublicForwards extends TLObject {
      __response__: Raw.stats.TypePublicForwards;
      peer: Raw.TypeInputPeer;
      id: int;
      offset: string;
      limit: int;
      constructor(params: { peer: Raw.TypeInputPeer; id: int; offset: string; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.GetStoryPublicForwards>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBroadcastRevenueStats extends TLObject {
      __response__: Raw.stats.TypeBroadcastRevenueStats;
      dark?: boolean;
      channel: Raw.TypeInputChannel;
      constructor(params: { dark?: boolean; channel: Raw.TypeInputChannel });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stats.GetBroadcastRevenueStats>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBroadcastRevenueWithdrawalUrl extends TLObject {
      __response__: Raw.stats.TypeBroadcastRevenueWithdrawalUrl;
      channel: Raw.TypeInputChannel;
      password: Raw.TypeInputCheckPasswordSRP;
      constructor(params: {
        channel: Raw.TypeInputChannel;
        password: Raw.TypeInputCheckPasswordSRP;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.stats.GetBroadcastRevenueWithdrawalUrl>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBroadcastRevenueTransactions extends TLObject {
      __response__: Raw.stats.TypeBroadcastRevenueTransactions;
      channel: Raw.TypeInputChannel;
      offset: int;
      limit: int;
      constructor(params: { channel: Raw.TypeInputChannel; offset: int; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.stats.GetBroadcastRevenueTransactions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace stickers {
    type TypeSuggestedShortName = Raw.stickers.SuggestedShortName;
    class SuggestedShortName extends TLObject {
      shortName: string;
      constructor(params: { shortName: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.SuggestedShortName>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CreateStickerSet extends TLObject {
      __response__: Raw.messages.TypeStickerSet;
      masks?: boolean;
      emojis?: boolean;
      textColor?: boolean;
      userId: Raw.TypeInputUser;
      title: string;
      shortName: string;
      thumb?: Raw.TypeInputDocument;
      stickers: Vector<Raw.TypeInputStickerSetItem>;
      software?: string;
      constructor(params: {
        masks?: boolean;
        emojis?: boolean;
        textColor?: boolean;
        userId: Raw.TypeInputUser;
        title: string;
        shortName: string;
        thumb?: Raw.TypeInputDocument;
        stickers: Vector<Raw.TypeInputStickerSetItem>;
        software?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.CreateStickerSet>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RemoveStickerFromSet extends TLObject {
      __response__: Raw.messages.TypeStickerSet;
      sticker: Raw.TypeInputDocument;
      constructor(params: { sticker: Raw.TypeInputDocument });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.RemoveStickerFromSet>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChangeStickerPosition extends TLObject {
      __response__: Raw.messages.TypeStickerSet;
      sticker: Raw.TypeInputDocument;
      position: int;
      constructor(params: { sticker: Raw.TypeInputDocument; position: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.ChangeStickerPosition>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AddStickerToSet extends TLObject {
      __response__: Raw.messages.TypeStickerSet;
      stickerset: Raw.TypeInputStickerSet;
      sticker: Raw.TypeInputStickerSetItem;
      constructor(params: {
        stickerset: Raw.TypeInputStickerSet;
        sticker: Raw.TypeInputStickerSetItem;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.AddStickerToSet>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetStickerSetThumb extends TLObject {
      __response__: Raw.messages.TypeStickerSet;
      stickerset: Raw.TypeInputStickerSet;
      thumb?: Raw.TypeInputDocument;
      thumbDocumentId?: long;
      constructor(params: {
        stickerset: Raw.TypeInputStickerSet;
        thumb?: Raw.TypeInputDocument;
        thumbDocumentId?: long;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.SetStickerSetThumb>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckShortName extends TLObject {
      __response__: Bool;
      shortName: string;
      constructor(params: { shortName: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.CheckShortName>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SuggestShortName extends TLObject {
      __response__: Raw.stickers.TypeSuggestedShortName;
      title: string;
      constructor(params: { title: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.SuggestShortName>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChangeSticker extends TLObject {
      __response__: Raw.messages.TypeStickerSet;
      sticker: Raw.TypeInputDocument;
      emoji?: string;
      maskCoords?: Raw.TypeMaskCoords;
      keywords?: string;
      constructor(params: {
        sticker: Raw.TypeInputDocument;
        emoji?: string;
        maskCoords?: Raw.TypeMaskCoords;
        keywords?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.ChangeSticker>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class RenameStickerSet extends TLObject {
      __response__: Raw.messages.TypeStickerSet;
      stickerset: Raw.TypeInputStickerSet;
      title: string;
      constructor(params: { stickerset: Raw.TypeInputStickerSet; title: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.RenameStickerSet>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteStickerSet extends TLObject {
      __response__: Bool;
      stickerset: Raw.TypeInputStickerSet;
      constructor(params: { stickerset: Raw.TypeInputStickerSet });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.DeleteStickerSet>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReplaceSticker extends TLObject {
      __response__: Raw.messages.TypeStickerSet;
      sticker: Raw.TypeInputDocument;
      newSticker: Raw.TypeInputStickerSetItem;
      constructor(params: {
        sticker: Raw.TypeInputDocument;
        newSticker: Raw.TypeInputStickerSetItem;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stickers.ReplaceSticker>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace users {
    type TypeUserFull = Raw.users.UserFull;
    class UserFull extends TLObject {
      fullUser: Raw.TypeUserFull;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        fullUser: Raw.TypeUserFull;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.users.UserFull>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetUsers extends TLObject {
      __response__: Vector<Raw.TypeUser>;
      id: Vector<Raw.TypeInputUser>;
      constructor(params: { id: Vector<Raw.TypeInputUser> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.users.GetUsers>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetFullUser extends TLObject {
      __response__: Raw.users.TypeUserFull;
      id: Raw.TypeInputUser;
      constructor(params: { id: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.users.GetFullUser>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetSecureValueErrors extends TLObject {
      __response__: Bool;
      id: Raw.TypeInputUser;
      errors: Vector<Raw.TypeSecureValueError>;
      constructor(params: { id: Raw.TypeInputUser; errors: Vector<Raw.TypeSecureValueError> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.users.SetSecureValueErrors>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetIsPremiumRequiredToContact extends TLObject {
      __response__: Vector<Bool>;
      id: Vector<Raw.TypeInputUser>;
      constructor(params: { id: Vector<Raw.TypeInputUser> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.users.GetIsPremiumRequiredToContact>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace chatlists {
    type TypeChatlistUpdates = Raw.chatlists.ChatlistUpdates;
    type TypeChatlistInvite = Raw.chatlists.ChatlistInviteAlready | Raw.chatlists.ChatlistInvite;
    type TypeExportedInvites = Raw.chatlists.ExportedInvites;
    type TypeExportedChatlistInvite = Raw.chatlists.ExportedChatlistInvite;
    class ExportedChatlistInvite extends TLObject {
      filter: Raw.TypeDialogFilter;
      invite: Raw.TypeExportedChatlistInvite;
      constructor(params: { filter: Raw.TypeDialogFilter; invite: Raw.TypeExportedChatlistInvite });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.ExportedChatlistInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportedInvites extends TLObject {
      invites: Vector<Raw.TypeExportedChatlistInvite>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        invites: Vector<Raw.TypeExportedChatlistInvite>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.ExportedInvites>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChatlistInviteAlready extends TLObject {
      filterId: int;
      missingPeers: Vector<Raw.TypePeer>;
      alreadyPeers: Vector<Raw.TypePeer>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        filterId: int;
        missingPeers: Vector<Raw.TypePeer>;
        alreadyPeers: Vector<Raw.TypePeer>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.ChatlistInviteAlready>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChatlistInvite extends TLObject {
      title: string;
      emoticon?: string;
      peers: Vector<Raw.TypePeer>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        title: string;
        emoticon?: string;
        peers: Vector<Raw.TypePeer>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.ChatlistInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ChatlistUpdates extends TLObject {
      missingPeers: Vector<Raw.TypePeer>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        missingPeers: Vector<Raw.TypePeer>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.ChatlistUpdates>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportChatlistInvite extends TLObject {
      __response__: Raw.chatlists.TypeExportedChatlistInvite;
      chatlist: Raw.TypeInputChatlist;
      title: string;
      peers: Vector<Raw.TypeInputPeer>;
      constructor(params: {
        chatlist: Raw.TypeInputChatlist;
        title: string;
        peers: Vector<Raw.TypeInputPeer>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.ExportChatlistInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteExportedInvite extends TLObject {
      __response__: Bool;
      chatlist: Raw.TypeInputChatlist;
      slug: string;
      constructor(params: { chatlist: Raw.TypeInputChatlist; slug: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.DeleteExportedInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditExportedInvite extends TLObject {
      __response__: Raw.TypeExportedChatlistInvite;
      chatlist: Raw.TypeInputChatlist;
      slug: string;
      title?: string;
      peers?: Vector<Raw.TypeInputPeer>;
      constructor(params: {
        chatlist: Raw.TypeInputChatlist;
        slug: string;
        title?: string;
        peers?: Vector<Raw.TypeInputPeer>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.EditExportedInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetExportedInvites extends TLObject {
      __response__: Raw.chatlists.TypeExportedInvites;
      chatlist: Raw.TypeInputChatlist;
      constructor(params: { chatlist: Raw.TypeInputChatlist });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.GetExportedInvites>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CheckChatlistInvite extends TLObject {
      __response__: Raw.chatlists.TypeChatlistInvite;
      slug: string;
      constructor(params: { slug: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.CheckChatlistInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class JoinChatlistInvite extends TLObject {
      __response__: Raw.TypeUpdates;
      slug: string;
      peers: Vector<Raw.TypeInputPeer>;
      constructor(params: { slug: string; peers: Vector<Raw.TypeInputPeer> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.JoinChatlistInvite>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetChatlistUpdates extends TLObject {
      __response__: Raw.chatlists.TypeChatlistUpdates;
      chatlist: Raw.TypeInputChatlist;
      constructor(params: { chatlist: Raw.TypeInputChatlist });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.GetChatlistUpdates>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class JoinChatlistUpdates extends TLObject {
      __response__: Raw.TypeUpdates;
      chatlist: Raw.TypeInputChatlist;
      peers: Vector<Raw.TypeInputPeer>;
      constructor(params: { chatlist: Raw.TypeInputChatlist; peers: Vector<Raw.TypeInputPeer> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.JoinChatlistUpdates>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class HideChatlistUpdates extends TLObject {
      __response__: Bool;
      chatlist: Raw.TypeInputChatlist;
      constructor(params: { chatlist: Raw.TypeInputChatlist });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.HideChatlistUpdates>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetLeaveChatlistSuggestions extends TLObject {
      __response__: Vector<Raw.TypePeer>;
      chatlist: Raw.TypeInputChatlist;
      constructor(params: { chatlist: Raw.TypeInputChatlist });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.chatlists.GetLeaveChatlistSuggestions>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class LeaveChatlist extends TLObject {
      __response__: Raw.TypeUpdates;
      chatlist: Raw.TypeInputChatlist;
      peers: Vector<Raw.TypeInputPeer>;
      constructor(params: { chatlist: Raw.TypeInputChatlist; peers: Vector<Raw.TypeInputPeer> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.chatlists.LeaveChatlist>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace bots {
    type TypeBotInfo = Raw.bots.BotInfo;
    class BotInfo extends TLObject {
      name: string;
      about: string;
      description: string;
      constructor(params: { name: string; about: string; description: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.BotInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendCustomRequest extends TLObject {
      __response__: Raw.TypeDataJSON;
      customMethod: string;
      params: Raw.TypeDataJSON;
      constructor(params: { customMethod: string; params: Raw.TypeDataJSON });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.SendCustomRequest>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AnswerWebhookJSONQuery extends TLObject {
      __response__: Bool;
      queryId: long;
      data: Raw.TypeDataJSON;
      constructor(params: { queryId: long; data: Raw.TypeDataJSON });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.AnswerWebhookJSONQuery>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetBotCommands extends TLObject {
      __response__: Bool;
      scope: Raw.TypeBotCommandScope;
      langCode: string;
      commands: Vector<Raw.TypeBotCommand>;
      constructor(params: {
        scope: Raw.TypeBotCommandScope;
        langCode: string;
        commands: Vector<Raw.TypeBotCommand>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.SetBotCommands>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ResetBotCommands extends TLObject {
      __response__: Bool;
      scope: Raw.TypeBotCommandScope;
      langCode: string;
      constructor(params: { scope: Raw.TypeBotCommandScope; langCode: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.ResetBotCommands>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBotCommands extends TLObject {
      __response__: Vector<Raw.TypeBotCommand>;
      scope: Raw.TypeBotCommandScope;
      langCode: string;
      constructor(params: { scope: Raw.TypeBotCommandScope; langCode: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.GetBotCommands>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetBotMenuButton extends TLObject {
      __response__: Bool;
      userId: Raw.TypeInputUser;
      button: Raw.TypeBotMenuButton;
      constructor(params: { userId: Raw.TypeInputUser; button: Raw.TypeBotMenuButton });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.SetBotMenuButton>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBotMenuButton extends TLObject {
      __response__: Raw.TypeBotMenuButton;
      userId: Raw.TypeInputUser;
      constructor(params: { userId: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.GetBotMenuButton>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetBotBroadcastDefaultAdminRights extends TLObject {
      __response__: Bool;
      adminRights: Raw.TypeChatAdminRights;
      constructor(params: { adminRights: Raw.TypeChatAdminRights });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(
        b: BytesIO,
        ...args: Array<any>
      ): Promise<Raw.bots.SetBotBroadcastDefaultAdminRights>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetBotGroupDefaultAdminRights extends TLObject {
      __response__: Bool;
      adminRights: Raw.TypeChatAdminRights;
      constructor(params: { adminRights: Raw.TypeChatAdminRights });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.SetBotGroupDefaultAdminRights>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SetBotInfo extends TLObject {
      __response__: Bool;
      bot?: Raw.TypeInputUser;
      langCode: string;
      name?: string;
      about?: string;
      description?: string;
      constructor(params: {
        bot?: Raw.TypeInputUser;
        langCode: string;
        name?: string;
        about?: string;
        description?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.SetBotInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBotInfo extends TLObject {
      __response__: Raw.bots.TypeBotInfo;
      bot?: Raw.TypeInputUser;
      langCode: string;
      constructor(params: { bot?: Raw.TypeInputUser; langCode: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.GetBotInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReorderUsernames extends TLObject {
      __response__: Bool;
      bot: Raw.TypeInputUser;
      order: Vector<string>;
      constructor(params: { bot: Raw.TypeInputUser; order: Vector<string> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.ReorderUsernames>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleUsername extends TLObject {
      __response__: Bool;
      bot: Raw.TypeInputUser;
      username: string;
      active: Bool;
      constructor(params: { bot: Raw.TypeInputUser; username: string; active: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.ToggleUsername>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CanSendMessage extends TLObject {
      __response__: Bool;
      bot: Raw.TypeInputUser;
      constructor(params: { bot: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.CanSendMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AllowSendMessage extends TLObject {
      __response__: Raw.TypeUpdates;
      bot: Raw.TypeInputUser;
      constructor(params: { bot: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.AllowSendMessage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class InvokeWebViewCustomMethod extends TLObject {
      __response__: Raw.TypeDataJSON;
      bot: Raw.TypeInputUser;
      customMethod: string;
      params: Raw.TypeDataJSON;
      constructor(params: {
        bot: Raw.TypeInputUser;
        customMethod: string;
        params: Raw.TypeDataJSON;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.bots.InvokeWebViewCustomMethod>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace stories {
    type TypeStoryReactionsList = Raw.stories.StoryReactionsList;
    type TypePeerStories = Raw.stories.PeerStories;
    type TypeStoryViews = Raw.stories.StoryViews;
    type TypeStoryViewsList = Raw.stories.StoryViewsList;
    type TypeStories = Raw.stories.Stories;
    type TypeAllStories = Raw.stories.AllStoriesNotModified | Raw.stories.AllStories;
    class AllStoriesNotModified extends TLObject {
      state: string;
      stealthMode: Raw.TypeStoriesStealthMode;
      constructor(params: { state: string; stealthMode: Raw.TypeStoriesStealthMode });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.AllStoriesNotModified>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class AllStories extends TLObject {
      hasMore?: boolean;
      count: int;
      state: string;
      peerStories: Vector<Raw.TypePeerStories>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      stealthMode: Raw.TypeStoriesStealthMode;
      constructor(params: {
        hasMore?: boolean;
        count: int;
        state: string;
        peerStories: Vector<Raw.TypePeerStories>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
        stealthMode: Raw.TypeStoriesStealthMode;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.AllStories>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Stories extends TLObject {
      count: int;
      stories: Vector<Raw.TypeStoryItem>;
      pinnedToTop?: Vector<int>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        count: int;
        stories: Vector<Raw.TypeStoryItem>;
        pinnedToTop?: Vector<int>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.Stories>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StoryViewsList extends TLObject {
      count: int;
      viewsCount: int;
      forwardsCount: int;
      reactionsCount: int;
      views: Vector<Raw.TypeStoryView>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      nextOffset?: string;
      constructor(params: {
        count: int;
        viewsCount: int;
        forwardsCount: int;
        reactionsCount: int;
        views: Vector<Raw.TypeStoryView>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
        nextOffset?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.StoryViewsList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StoryViews extends TLObject {
      views: Vector<Raw.TypeStoryViews>;
      users: Vector<Raw.TypeUser>;
      constructor(params: { views: Vector<Raw.TypeStoryViews>; users: Vector<Raw.TypeUser> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.StoryViews>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class PeerStories extends TLObject {
      stories: Raw.TypePeerStories;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        stories: Raw.TypePeerStories;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.PeerStories>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class StoryReactionsList extends TLObject {
      count: int;
      reactions: Vector<Raw.TypeStoryReaction>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      nextOffset?: string;
      constructor(params: {
        count: int;
        reactions: Vector<Raw.TypeStoryReaction>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
        nextOffset?: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.StoryReactionsList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class CanSendStory extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.CanSendStory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendStory extends TLObject {
      __response__: Raw.TypeUpdates;
      pinned?: boolean;
      noforwards?: boolean;
      fwdModified?: boolean;
      peer: Raw.TypeInputPeer;
      media: Raw.TypeInputMedia;
      mediaAreas?: Vector<Raw.TypeMediaArea>;
      caption?: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      privacyRules: Vector<Raw.TypeInputPrivacyRule>;
      randomId: long;
      period?: int;
      fwdFromId?: Raw.TypeInputPeer;
      fwdFromStory?: int;
      constructor(params: {
        pinned?: boolean;
        noforwards?: boolean;
        fwdModified?: boolean;
        peer: Raw.TypeInputPeer;
        media: Raw.TypeInputMedia;
        mediaAreas?: Vector<Raw.TypeMediaArea>;
        caption?: string;
        entities?: Vector<Raw.TypeMessageEntity>;
        privacyRules: Vector<Raw.TypeInputPrivacyRule>;
        randomId: long;
        period?: int;
        fwdFromId?: Raw.TypeInputPeer;
        fwdFromStory?: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.SendStory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class EditStory extends TLObject {
      __response__: Raw.TypeUpdates;
      peer: Raw.TypeInputPeer;
      id: int;
      media?: Raw.TypeInputMedia;
      mediaAreas?: Vector<Raw.TypeMediaArea>;
      caption?: string;
      entities?: Vector<Raw.TypeMessageEntity>;
      privacyRules?: Vector<Raw.TypeInputPrivacyRule>;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        id: int;
        media?: Raw.TypeInputMedia;
        mediaAreas?: Vector<Raw.TypeMediaArea>;
        caption?: string;
        entities?: Vector<Raw.TypeMessageEntity>;
        privacyRules?: Vector<Raw.TypeInputPrivacyRule>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.EditStory>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class DeleteStories extends TLObject {
      __response__: Vector<int>;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.DeleteStories>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TogglePinned extends TLObject {
      __response__: Vector<int>;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      pinned: Bool;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int>; pinned: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.TogglePinned>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAllStories extends TLObject {
      __response__: Raw.stories.TypeAllStories;
      next?: boolean;
      hidden?: boolean;
      state?: string;
      constructor(params: { next?: boolean; hidden?: boolean; state?: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.GetAllStories>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPinnedStories extends TLObject {
      __response__: Raw.stories.TypeStories;
      peer: Raw.TypeInputPeer;
      offsetId: int;
      limit: int;
      constructor(params: { peer: Raw.TypeInputPeer; offsetId: int; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.GetPinnedStories>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStoriesArchive extends TLObject {
      __response__: Raw.stories.TypeStories;
      peer: Raw.TypeInputPeer;
      offsetId: int;
      limit: int;
      constructor(params: { peer: Raw.TypeInputPeer; offsetId: int; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.GetStoriesArchive>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStoriesByID extends TLObject {
      __response__: Raw.stories.TypeStories;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.GetStoriesByID>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ToggleAllStoriesHidden extends TLObject {
      __response__: Bool;
      hidden: Bool;
      constructor(params: { hidden: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.ToggleAllStoriesHidden>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ReadStories extends TLObject {
      __response__: Vector<int>;
      peer: Raw.TypeInputPeer;
      maxId: int;
      constructor(params: { peer: Raw.TypeInputPeer; maxId: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.ReadStories>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class IncrementStoryViews extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.IncrementStoryViews>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStoryViewsList extends TLObject {
      __response__: Raw.stories.TypeStoryViewsList;
      justContacts?: boolean;
      reactionsFirst?: boolean;
      forwardsFirst?: boolean;
      peer: Raw.TypeInputPeer;
      q?: string;
      id: int;
      offset: string;
      limit: int;
      constructor(params: {
        justContacts?: boolean;
        reactionsFirst?: boolean;
        forwardsFirst?: boolean;
        peer: Raw.TypeInputPeer;
        q?: string;
        id: int;
        offset: string;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.GetStoryViewsList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStoriesViews extends TLObject {
      __response__: Raw.stories.TypeStoryViews;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.GetStoriesViews>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ExportStoryLink extends TLObject {
      __response__: Raw.TypeExportedStoryLink;
      peer: Raw.TypeInputPeer;
      id: int;
      constructor(params: { peer: Raw.TypeInputPeer; id: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.ExportStoryLink>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Report extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      reason: Raw.TypeReportReason;
      message: string;
      constructor(params: {
        peer: Raw.TypeInputPeer;
        id: Vector<int>;
        reason: Raw.TypeReportReason;
        message: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.Report>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ActivateStealthMode extends TLObject {
      __response__: Raw.TypeUpdates;
      past?: boolean;
      future?: boolean;
      constructor(params: { past?: boolean; future?: boolean });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.ActivateStealthMode>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class SendReaction extends TLObject {
      __response__: Raw.TypeUpdates;
      addToRecent?: boolean;
      peer: Raw.TypeInputPeer;
      storyId: int;
      reaction: Raw.TypeReaction;
      constructor(params: {
        addToRecent?: boolean;
        peer: Raw.TypeInputPeer;
        storyId: int;
        reaction: Raw.TypeReaction;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.SendReaction>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPeerStories extends TLObject {
      __response__: Raw.stories.TypePeerStories;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.GetPeerStories>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetAllReadPeerStories extends TLObject {
      __response__: Raw.TypeUpdates;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.GetAllReadPeerStories>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetPeerMaxIDs extends TLObject {
      __response__: Vector<int>;
      id: Vector<Raw.TypeInputPeer>;
      constructor(params: { id: Vector<Raw.TypeInputPeer> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.GetPeerMaxIDs>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetChatsToSend extends TLObject {
      __response__: Raw.messages.TypeChats;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.GetChatsToSend>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TogglePeerStoriesHidden extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      hidden: Bool;
      constructor(params: { peer: Raw.TypeInputPeer; hidden: Bool });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.TogglePeerStoriesHidden>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStoryReactionsList extends TLObject {
      __response__: Raw.stories.TypeStoryReactionsList;
      forwardsFirst?: boolean;
      peer: Raw.TypeInputPeer;
      id: int;
      reaction?: Raw.TypeReaction;
      offset?: string;
      limit: int;
      constructor(params: {
        forwardsFirst?: boolean;
        peer: Raw.TypeInputPeer;
        id: int;
        reaction?: Raw.TypeReaction;
        offset?: string;
        limit: int;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.GetStoryReactionsList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class TogglePinnedToTop extends TLObject {
      __response__: Bool;
      peer: Raw.TypeInputPeer;
      id: Vector<int>;
      constructor(params: { peer: Raw.TypeInputPeer; id: Vector<int> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.stories.TogglePinnedToTop>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace premium {
    type TypeBoostsStatus = Raw.premium.BoostsStatus;
    type TypeMyBoosts = Raw.premium.MyBoosts;
    type TypeBoostsList = Raw.premium.BoostsList;
    class BoostsList extends TLObject {
      count: int;
      boosts: Vector<Raw.TypeBoost>;
      nextOffset?: string;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        count: int;
        boosts: Vector<Raw.TypeBoost>;
        nextOffset?: string;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.premium.BoostsList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class MyBoosts extends TLObject {
      myBoosts: Vector<Raw.TypeMyBoost>;
      chats: Vector<Raw.TypeChat>;
      users: Vector<Raw.TypeUser>;
      constructor(params: {
        myBoosts: Vector<Raw.TypeMyBoost>;
        chats: Vector<Raw.TypeChat>;
        users: Vector<Raw.TypeUser>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.premium.MyBoosts>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class BoostsStatus extends TLObject {
      myBoost?: boolean;
      level: int;
      currentLevelBoosts: int;
      boosts: int;
      giftBoosts?: int;
      nextLevelBoosts?: int;
      premiumAudience?: Raw.TypeStatsPercentValue;
      boostUrl: string;
      prepaidGiveaways?: Vector<Raw.TypePrepaidGiveaway>;
      myBoostSlots?: Vector<int>;
      constructor(params: {
        myBoost?: boolean;
        level: int;
        currentLevelBoosts: int;
        boosts: int;
        giftBoosts?: int;
        nextLevelBoosts?: int;
        premiumAudience?: Raw.TypeStatsPercentValue;
        boostUrl: string;
        prepaidGiveaways?: Vector<Raw.TypePrepaidGiveaway>;
        myBoostSlots?: Vector<int>;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.premium.BoostsStatus>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBoostsList extends TLObject {
      __response__: Raw.premium.TypeBoostsList;
      gifts?: boolean;
      peer: Raw.TypeInputPeer;
      offset: string;
      limit: int;
      constructor(params: { gifts?: boolean; peer: Raw.TypeInputPeer; offset: string; limit: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.premium.GetBoostsList>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetMyBoosts extends TLObject {
      __response__: Raw.premium.TypeMyBoosts;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.premium.GetMyBoosts>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class ApplyBoost extends TLObject {
      __response__: Raw.premium.TypeMyBoosts;
      slots?: Vector<int>;
      peer: Raw.TypeInputPeer;
      constructor(params: { slots?: Vector<int>; peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.premium.ApplyBoost>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetBoostsStatus extends TLObject {
      __response__: Raw.premium.TypeBoostsStatus;
      peer: Raw.TypeInputPeer;
      constructor(params: { peer: Raw.TypeInputPeer });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.premium.GetBoostsStatus>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetUserBoosts extends TLObject {
      __response__: Raw.premium.TypeBoostsList;
      peer: Raw.TypeInputPeer;
      userId: Raw.TypeInputUser;
      constructor(params: { peer: Raw.TypeInputPeer; userId: Raw.TypeInputUser });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.premium.GetUserBoosts>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace smsjobs {
    type TypeStatus = Raw.smsjobs.Status;
    type TypeEligibilityToJoin = Raw.smsjobs.EligibleToJoin;
    class EligibleToJoin extends TLObject {
      termsUrl: string;
      monthlySentSms: int;
      constructor(params: { termsUrl: string; monthlySentSms: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.smsjobs.EligibleToJoin>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Status extends TLObject {
      allowInternational?: boolean;
      recentSent: int;
      recentSince: int;
      recentRemains: int;
      totalSent: int;
      totalSince: int;
      lastGiftSlug?: string;
      termsUrl: string;
      constructor(params: {
        allowInternational?: boolean;
        recentSent: int;
        recentSince: int;
        recentRemains: int;
        totalSent: int;
        totalSince: int;
        lastGiftSlug?: string;
        termsUrl: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.smsjobs.Status>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class IsEligibleToJoin extends TLObject {
      __response__: Raw.smsjobs.TypeEligibilityToJoin;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.smsjobs.IsEligibleToJoin>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Join extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.smsjobs.Join>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class Leave extends TLObject {
      __response__: Bool;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.smsjobs.Leave>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class UpdateSettings extends TLObject {
      __response__: Bool;
      allowInternational?: boolean;
      constructor(params: { allowInternational?: boolean });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.smsjobs.UpdateSettings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStatus extends TLObject {
      __response__: Raw.smsjobs.TypeStatus;
      constructor();
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.smsjobs.GetStatus>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetSmsJob extends TLObject {
      __response__: Raw.TypeSmsJob;
      jobId: string;
      constructor(params: { jobId: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.smsjobs.GetSmsJob>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class FinishJob extends TLObject {
      __response__: Bool;
      jobId: string;
      error?: string;
      constructor(params: { jobId: string; error?: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.smsjobs.FinishJob>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace fragment {
    type TypeCollectibleInfo = Raw.fragment.CollectibleInfo;
    class CollectibleInfo extends TLObject {
      purchaseDate: int;
      currency: string;
      amount: long;
      cryptoCurrency: string;
      cryptoAmount: long;
      url: string;
      constructor(params: {
        purchaseDate: int;
        currency: string;
        amount: long;
        cryptoCurrency: string;
        cryptoAmount: long;
        url: string;
      });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.fragment.CollectibleInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetCollectibleInfo extends TLObject {
      __response__: Raw.fragment.TypeCollectibleInfo;
      collectible: Raw.TypeInputCollectible;
      constructor(params: { collectible: Raw.TypeInputCollectible });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.fragment.GetCollectibleInfo>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace langpack {
    class GetLangPack extends TLObject {
      __response__: Raw.TypeLangPackDifference;
      langPack: string;
      langCode: string;
      constructor(params: { langPack: string; langCode: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.langpack.GetLangPack>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetStrings extends TLObject {
      __response__: Vector<Raw.TypeLangPackString>;
      langPack: string;
      langCode: string;
      keys: Vector<string>;
      constructor(params: { langPack: string; langCode: string; keys: Vector<string> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.langpack.GetStrings>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetDifference extends TLObject {
      __response__: Raw.TypeLangPackDifference;
      langPack: string;
      langCode: string;
      fromVersion: int;
      constructor(params: { langPack: string; langCode: string; fromVersion: int });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.langpack.GetDifference>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetLanguages extends TLObject {
      __response__: Vector<Raw.TypeLangPackLanguage>;
      langPack: string;
      constructor(params: { langPack: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.langpack.GetLanguages>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
    class GetLanguage extends TLObject {
      __response__: Raw.TypeLangPackLanguage;
      langPack: string;
      langCode: string;
      constructor(params: { langPack: string; langCode: string });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.langpack.GetLanguage>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
  namespace folders {
    class EditPeerFolders extends TLObject {
      __response__: Raw.TypeUpdates;
      folderPeers: Vector<Raw.TypeInputFolderPeer>;
      constructor(params: { folderPeers: Vector<Raw.TypeInputFolderPeer> });
      /**
       * Generate the TLObject from buffer.
       * @param {Object} data - BytesIO class from TLObject will be convert to TLObject class.
       */
      static read(b: BytesIO, ...args: Array<any>): Promise<Raw.folders.EditPeerFolders>;
      /**
       * Generate buffer from TLObject.
       */
      write(): Buffer;
    }
  }
}
